(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{461:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),a("p",[s._v("Redis\n")]),s._v(" "),a("h1",{attrs:{id:"redis开发与运维"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis开发与运维"}},[s._v("#")]),s._v(" Redis开发与运维")]),s._v(" "),a("h2",{attrs:{id:"第一章-初识redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-初识redis"}},[s._v("#")]),s._v(" 第一章 初识Redis")]),s._v(" "),a("h3",{attrs:{id:"_1-盛赞redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-盛赞redis"}},[s._v("#")]),s._v(" 1. 盛赞Redis")]),s._v(" "),a("p",[s._v("Redis是一种基于键值对的NoSQL数据库，与很多键值对数据库不同的是，Redis中的值可以是由String（字符串）、hash（哈希）、list（列表）、set（集合）、zset（有序集合）、Bitmaps（位图）、HyperLogLog、GEO（地理信息定位）等多种数据结构和算法组成，因此Redis可以满足很多的应用场景，而且因为Redis会将所有数据都存放在内存中，所以它的读写性能非常惊人。不仅如此，Redis还可以将内存的数据利用快照和日志的形式保存到硬盘上，这样在发生类似断电或者机器故障的时候，内存中的数据不会“丢失”。除了上述功能，Redis还提供了键过期、发布订阅、事务、流水线、Lua脚本等附加功能。")]),s._v(" "),a("h3",{attrs:{id:"_2-redis特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-redis特性"}},[s._v("#")]),s._v(" 2. Redis特性")]),s._v(" "),a("p",[s._v("Redis的8个重要特性。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("速度快")]),s._v(" "),a("ul",[a("li",[s._v("Redis的所有数据都是存放在内存中的。")]),s._v(" "),a("li",[s._v("Redis是用C语言实现的。")]),s._v(" "),a("li",[s._v("Redis使用了单线程架构。")]),s._v(" "),a("li",[s._v("Redis是少有的集性能和优雅于一身的开源代码。")])])]),s._v(" "),a("li",[a("p",[s._v("基于键值对的数据结构服务器")]),s._v(" "),a("ul",[a("li",[s._v("Redis的全称是Remote Dictionary Server，它主要提供了5种数据结构：字符串、哈希、列表、集合、有序集合，同时在字符串的基础之上演变出了位图（Bitmaps）和HyperLogLog两种神奇的“数据结构”，并且随着LBS（Location Based Service，基于位置服务）的不断发展，Redis3.2版本中加入有关GEO（地理信息定位）的功能。")])])]),s._v(" "),a("li",[a("p",[s._v("丰富的功能")]),s._v(" "),a("ul",[a("li",[s._v("提供了键过期功能，可以用来实现缓存。")]),s._v(" "),a("li",[s._v("提供了发布订阅功能，可以用来实现消息系统。")]),s._v(" "),a("li",[s._v("支持Lua脚本功能，可以利用Lua创造出新的Redis命令。")]),s._v(" "),a("li",[s._v("提供了简单的事务功能，能在一定程度上保证事务特性。")]),s._v(" "),a("li",[s._v("提供了流水线（Pipeline）功能，这样客户端能将一批命令一次性传到Redis，减少了网络的开销。")])])]),s._v(" "),a("li",[a("p",[s._v("简单稳定")]),s._v(" "),a("ul",[a("li",[s._v("Redis的源码很少。")]),s._v(" "),a("li",[s._v("Redis使用单线程模型。")]),s._v(" "),a("li",[s._v("Redis不需要依赖于操作系统中的类库，Redis自己实现了事件处理的相关功能。")])])]),s._v(" "),a("li",[a("p",[s._v("客户端语言多")]),s._v(" "),a("ul",[a("li",[s._v("Redis提供了简单的TCP通信协议，很多编程语言可以很方便地接入Redis。所以支持Redis的客户端语言也非常多，几乎涵盖了主流的编程语言。")])])]),s._v(" "),a("li",[a("p",[s._v("持久化")]),s._v(" "),a("ul",[a("li",[s._v("Redis提供了两种持久化方式：RDB和AOF，即可以用两种策略将内存的数据保存到硬盘中。")])])]),s._v(" "),a("li",[a("p",[s._v("主从复制")]),s._v(" "),a("ul",[a("li",[s._v("Redis提供了复制功能，实现了多个相同数据的Redis副本，复制功能是分布式Redis的基础。")])])])]),s._v(" "),a("h3",{attrs:{id:"_3-redis使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-redis使用场景"}},[s._v("#")]),s._v(" 3. Redis使用场景")]),s._v(" "),a("h4",{attrs:{id:"_3-1-redis可以做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-redis可以做什么"}},[s._v("#")]),s._v(" 3.1 Redis可以做什么")]),s._v(" "),a("ul",[a("li",[s._v("缓存：键值过期时间设置")]),s._v(" "),a("li",[s._v("排行榜系统：列表和有序集合数据结构")]),s._v(" "),a("li",[s._v("计数器应用：Redis天然支持计数功能而且计算的性能也非常好")]),s._v(" "),a("li",[s._v("社交网络：赞/踩、粉丝、共同友好/喜好、推送、下拉刷新。")]),s._v(" "),a("li",[s._v("消息队列系统：Redis提供了发布订阅功能和阻塞队列的功能。")])]),s._v(" "),a("h4",{attrs:{id:"_3-2-redis不可以做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-redis不可以做什么"}},[s._v("#")]),s._v(" 3.2 Redis不可以做什么")]),s._v(" "),a("p",[s._v("数据量大、很少使用的数据。")]),s._v(" "),a("h3",{attrs:{id:"_4-用好redis的建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-用好redis的建议"}},[s._v("#")]),s._v(" 4. 用好Redis的建议")]),s._v(" "),a("ul",[a("li",[s._v("切勿当黑盒使用，开发与运维同样重要。")]),s._v(" "),a("li",[s._v("阅读源码。")])]),s._v(" "),a("h3",{attrs:{id:"_5-正确安装并启动redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-正确安装并启动redis"}},[s._v("#")]),s._v(" 5. 正确安装并启动Redis")]),s._v(" "),a("h5",{attrs:{id:"_5-1-安装redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-安装redis"}},[s._v("#")]),s._v(" 5.1 安装Redis")]),s._v(" "),a("p",[s._v("推荐使用源码安装")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://download.redis.io/releases/redis-3.0.7.tar.gz //下载Redis制定版本的源码压缩包到当前目录\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xzf redis-3.0.7.tar.gz  //解压缩Redis源码压缩包\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s redis-3.0.7 redis //建立一个redis目录的软连接，指向redis-3.0.7\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" redis //进入redis目录\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" //编译（编译之前确保操作系统已经安装gcc）\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" //安装\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"_5-2-配置、启动、操作、关闭redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-配置、启动、操作、关闭redis"}},[s._v("#")]),s._v(" 5.2 配置、启动、操作、关闭Redis")]),s._v(" "),a("p",[s._v("Redis安装之后，src和/usr/local/bin目录下多了几个以redis开头的可执行文件，我们称之为Redis Shell，这些可执行文件可以做很多事情，例如可以启动和停止Redis、可以检测和修复Redis的持久化文件，还可以检测Redis的性能。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cyasina%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210109205715914.png",alt:"image-20210109205715914"}})]),s._v(" "),a("p",[s._v("redis可执行文件说明")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("可执行文件")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-server")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("启动Redis")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-cli")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis命令行客户端")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-benchmark")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis基准测试工具")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-check-aof")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis AOF持久化文件检测和修复工具")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-check-rdb")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis RDB持久化文件检测和修复工具")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("redis-sentinel")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("启动Redis Sentinel")])])])]),s._v(" "),a("h6",{attrs:{id:"_5-2-1-启动redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-启动redis"}},[s._v("#")]),s._v(" 5.2.1 启动Redis")]),s._v(" "),a("p",[s._v("有三种方法启动Redis：默认配置、运行配置、配置文件启动。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("默认配置：会使用Redis的默认配置来启动。默认端口是6379。不推荐使用这种。")])]),s._v(" "),a("li",[a("p",[s._v("运行启动：redis-server加上要修改的配置名和值（可以是多对）。不推荐使用这种。")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-sheLl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-server --configKey1 configValue1 --configKey2 configValue2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-server --port 6380")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("配置文件启动：将配置写到指定文件里，推荐使用这种。Redis有60多个配置，这里只介绍一些重要的配置。")]),s._v(" "),a("ul",[a("li",[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("配置名")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("配置说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("port")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("端口")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("logfile")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("日志文件")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("dir")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis工作目录（存放持久化文件和日志文件）")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("daemonize")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是否以守护进程的方式启动Redis")])])])])])])])]),s._v(" "),a("h6",{attrs:{id:"_5-2-2-redis命令客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-redis命令客户端"}},[s._v("#")]),s._v(" 5.2.2 Redis命令客户端")]),s._v(" "),a("p",[s._v("redis-cli可以使用两种方式连接Redis服务器。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("第一种是交互式方式：通过redis-cli-h {host} -p {port}的方式连接Redis服务。")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-cli -h 127.0.0.1 -p 6379")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("第二种是命令方式：用redis-cli-h {host} -p {port} {command}就可以直接得到命令的返回结果。")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-cli -h 127.0.0.1 -p 6379 get hello")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])])]),s._v(" "),a("h6",{attrs:{id:"_5-2-3-停止redis服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-停止redis服务"}},[s._v("#")]),s._v(" 5.2.3 停止Redis服务")]),s._v(" "),a("p",[s._v("Redis提供了shutdown命令来停止Redis服务。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-cli shutdown")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("有三点要注意：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Redis关闭的过程：断开与客户端的连接、持久化文件生成，是一种相对优雅的关闭方式。")])]),s._v(" "),a("li",[a("p",[s._v("kill -9 也可以关闭redis，但是会造成Redis不会做持久化服务，还会造成缓冲区等资源不能被优雅关闭，极端情况会造成AOF和复制丢失数据的情况。")])]),s._v(" "),a("li",[a("p",[s._v("shutdown还有一个参数，代表是是否在关闭Redis前，生成持久化文件：")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-cli shutdown nosave | save")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_6-redis重大版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis重大版本"}},[s._v("#")]),s._v(" 6. Redis重大版本")]),s._v(" "),a("h3",{attrs:{id:"_7-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-总结"}},[s._v("#")]),s._v(" 7. 总结")]),s._v(" "),a("ul",[a("li",[s._v("redis的8个特性：速度快、基于键值对的数据结构服务器、功能丰富、简单稳定、客户端语言多、持久化、主从复制、支持高可用和分布式。")]),s._v(" "),a("li",[s._v("redis并不是万金油，有些场景不适合使用Redis进行开发。")]),s._v(" "),a("li",[s._v("开发运维结合以及阅读源码是用好Redis的重要方法。")]),s._v(" "),a("li",[s._v("生产环境中使用配置文件启动Redis。")]),s._v(" "),a("li",[s._v("生产环境选取稳定版本的Redis。")]),s._v(" "),a("li",[s._v("Redis3.0是重要的里程碑，发布了Redis官方的分布式实现Redis Cluster。")])]),s._v(" "),a("h2",{attrs:{id:"第二章-api的理解和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-api的理解和使用"}},[s._v("#")]),s._v(" 第二章 API的理解和使用")]),s._v(" "),a("h3",{attrs:{id:"_1-预备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-预备"}},[s._v("#")]),s._v(" 1. 预备")]),s._v(" "),a("h4",{attrs:{id:"_1-1-全局命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-全局命令"}},[s._v("#")]),s._v(" 1.1 全局命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("查看所有键：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" keys *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eeiy"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("键总数：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" dbsize\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("dbsize命令在计算键总数时不会遍历所有键，而是直接获取Redis内置的键总数变量，所以dbsize命令的时间复杂度是O(1)。而keys命令会遍历所有键，所以它的时间复杂度是O(n)，当Redis保存了大量键时，线上环境禁止使用。")])]),s._v(" "),a("li",[a("p",[s._v("检查键是否存在：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" exists eeiy\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果存在返回1，不存在返回0")])]),s._v(" "),a("li",[a("p",[s._v("删除键：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" del eeiy\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("del是一个通用命令，无论值是什么数据结构类型，del命令都可以将其删除，del 命令可以删除多个键")])]),s._v(" "),a("li",[a("p",[s._v("键过期：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ttl eeiy\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("596")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ttl eeiy2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -2\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" eeiy3 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" ttl eeiy3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("ttl命令会返回键的剩余过期时间，它有3种返回值：")]),s._v(" "),a("ul",[a("li",[s._v("大于等于0的整数：键剩余的过期时间。")]),s._v(" "),a("li",[s._v("-1：键没设置过期时间。")]),s._v(" "),a("li",[s._v("-2：键不存在。")])])]),s._v(" "),a("li",[a("p",[s._v("键的数据结构类型：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" key1 value1\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key1\nstring\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" rpush key2 a b c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key2\nlist\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" hset key3 eeiy corona eeiy2 corona2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key3\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("hash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" sadd key4 a b c d e f\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key4\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" zadd key5 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key5\nzset\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_1-2-数据结构和内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数据结构和内部编码"}},[s._v("#")]),s._v(" 1.2 数据结构和内部编码")]),s._v(" "),a("p",[s._v("type命令实际返回的就是当前键的数据结构类型，它们分别是：string（字符串）、hash（哈希）、list（列表）、set（集合）、zset（有序集合）。")]),s._v(" "),a("p",[s._v("但这些只是Redis对外的数据结构。实际上每种数据结构都有自己底层的内部编码实现。")]),s._v(" "),a("p",[s._v("每种数据结构都有两种以上的内部编码实现，例如list数据结构包含了linkedlist和ziplist两种内部编码。")]),s._v(" "),a("p",[s._v("可以通过object encoding命令查询内部编码：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key1\nstring\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key2\nlist\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key3\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("hash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key4\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key5\nzset\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" object encoding key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"embstr"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" object encoding key2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"quicklist"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" object encoding key3\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ziplist"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" object encoding key4\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashtable"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" object encoding key5\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ziplist"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("数据结构")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("内部编码")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("string")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("raw、int、embstr")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("hash")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("hashtable、ziplist")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("lish")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("linkedlist、ziplist")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("set")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("hashtable、intset")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("zset")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("skiplist、ziplist")])])])]),s._v(" "),a("h4",{attrs:{id:"_1-3-单线程结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-单线程结构"}},[s._v("#")]),s._v(" 1.3 单线程结构")]),s._v(" "),a("p",[s._v("redis使用了单线程架构和I/O多路复用模型来实现高性能的内存数据库服务。")]),s._v(" "),a("p",[s._v("为什么单线程还能这么快？")]),s._v(" "),a("ul",[a("li",[s._v("纯内存访问")]),s._v(" "),a("li",[s._v("非阻塞I/O，Redis使用epoll作为I/O多路复用技术的实现，再加上Redis自身的事件处理模型将epoll中的连接、读写、关闭都转换为事件，不在网络I/O上浪费过多的时间。")]),s._v(" "),a("li",[s._v("单线程避免了线程切换和竞态产生的消耗。")])]),s._v(" "),a("h3",{attrs:{id:"_2-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串"}},[s._v("#")]),s._v(" 2. 字符串")]),s._v(" "),a("h4",{attrs:{id:"_2-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-命令"}},[s._v("#")]),s._v(" 2.1 命令")]),s._v(" "),a("h5",{attrs:{id:"_2-1-1-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-常用命令"}},[s._v("#")]),s._v(" 2.1.1 常用命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置值：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("set key value [ex seconds] [px milliseconds] [nx|xx]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("set命令有几个选项：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("ex seconds：为键设置秒级过期时间。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("set ex_key1 string1 ex 60\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("px milliseconds：为键设置毫秒级过期时间。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("set px_key1 string1 px 6000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("nx：键必须不存在，才可以设置成功，用于添加。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("set px_key1 string1 px 6000 nx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("xx：与nx相反，键必须存在，才可以设置成功，用于更新。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("set px_key1 string1 px 6000 xx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("除了set选项，Redis还提供了setex和setnx两个命令：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("setex：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setex ex_key1 60 ex_value1\nOK\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("setnx：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setnx ex_key1 60 nx_value1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR wrong number of arguments for "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'setnx'")]),s._v(" command\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setnx ex_key1 nx_value1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setnx nx_key1 nx_value1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("p",[s._v("setnx和setex在实际使用中有什么应用场景？以setnx命令为例子，由于Redis的单线程命令处理机制，如果有多个客户端同时执行setnx key value，根据setnx的特性只有一个客户端能设置成功，setnx可以作为分布式锁的一种实现方案，Redis官方给出了使用setnx实现分布式锁的方法:http://redis.io/topics/distlock。")])]),s._v(" "),a("li",[a("p",[s._v("批量设置值：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("mset：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("mset key1 value1 key2 value2 key3 value3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("mget：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("mget key1 key2 key3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> mset mkey1 mvalue1 mkey2 mvalu2 mkey3 mvalue3\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> mget mkey1 mkey2 mkey3\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mvalue1"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mvalu2"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mvalue3"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计数：")]),s._v(" "),a("ul",[a("li",[s._v("incr：incr命令用于对值做自增操作，返回结果分为三种情况：\n"),a("ul",[a("li",[s._v("值不是整数，返回错误。")]),s._v(" "),a("li",[s._v("值是整数，返回自增后的结果。")]),s._v(" "),a("li",[s._v("键不存在，按照值为0自增，返回结果为1。")])])]),s._v(" "),a("li",[s._v("decr：自减。")]),s._v(" "),a("li",[s._v("incrby：自增指定数字。")]),s._v(" "),a("li",[s._v("decrby：自减指定数字。")]),s._v(" "),a("li",[s._v("incrbyfloat：自增浮点数。")])]),s._v(" "),a("p",[s._v("很多存储系统和编程语言内部使用CAS机制实现计数功能，会有一定的CPU开销，但在Redis中完全不存在这个问题，因为Redis是单线程架构，任何命令到了Redis服务端都要顺序执行。")])])]),s._v(" "),a("h5",{attrs:{id:"_2-1-2-不常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-不常用命令"}},[s._v("#")]),s._v(" 2.1.2 不常用命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("追加值：append key value")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> append key1 world\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 10\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> get key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("字符串长度：strlen key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> strlen key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 10\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("设置并返回值：getset key value")])]),s._v(" "),a("li",[a("p",[s._v("设置指定位置的字符：setrange key offeset value")])]),s._v(" "),a("li",[a("p",[s._v("获取部分字符串：getrange key start end")])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-内部编码"}},[s._v("#")]),s._v(" 2.2 内部编码")]),s._v(" "),a("p",[s._v("字符串类型的内部编码有3种：")]),s._v(" "),a("ul",[a("li",[s._v("int：8个字节的长整型。")]),s._v(" "),a("li",[s._v("embstr：小于等于39个字节的字符串。")]),s._v(" "),a("li",[s._v("raw：大于39个字节的字符串。")])]),s._v(" "),a("p",[s._v("Redis会根据当前值的类型和长度决定使用哪种内部编码实现。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> set string_key1 1234\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> object encoding string_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"int"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> set string_key1 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello,world"')]),s._v("\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> object encoding string_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"embstr"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> set string_key1 asihdasdiahsdahsdiabshdbahbdabsdadbsuasbdbadsasdjabdbaghsdvavsduvasduavusdasvdasdhasdhjahsda\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> object encoding string_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"raw"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"_2-3-典型使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-典型使用场景"}},[s._v("#")]),s._v(" 2.3 典型使用场景")]),s._v(" "),a("h5",{attrs:{id:"_2-3-1-缓存功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-缓存功能"}},[s._v("#")]),s._v(" 2.3.1 缓存功能")]),s._v(" "),a("p",[s._v("由于Redis具有支撑高 并发的特性，所以缓存通常能起到加速读写和降低后端压力的作用。")]),s._v(" "),a("p",[s._v("设计合理的键名，有利于防止键冲突和项目的可维护性，比较推荐的方式是使用“业务名: 对象名: id: [属性]”作为键名。")]),s._v(" "),a("p",[s._v('例如MySQL的数据库名为vs，用户表名为user，那么对应的键可以用“vs: user: 1”,"vs: user: 1: name"来表示。可以在描述键含义的前提下适当减少键的长度，从而减少键过长的内存浪费。')]),s._v(" "),a("h5",{attrs:{id:"_2-3-2-计数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-计数"}},[s._v("#")]),s._v(" 2.3.2 计数")]),s._v(" "),a("p",[s._v("用redis的incr功能。")]),s._v(" "),a("p",[s._v("一个真实的计数系统要考虑的问题会很多：防作弊、按照不同维度计数，数据持久化到底层数据源等。")]),s._v(" "),a("h5",{attrs:{id:"_2-3-3-共享session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-共享session"}},[s._v("#")]),s._v(" 2.3.3 共享session")]),s._v(" "),a("p",[s._v("可以使用Redis将用户的Session进行集中管理，每次用户更新或者查询登录信息都直接从Redis中集中获取。")]),s._v(" "),a("h5",{attrs:{id:"_2-3-4-限速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-限速"}},[s._v("#")]),s._v(" 2.3.4 限速")]),s._v(" "),a("p",[s._v("比如短信防刷，网站限制一个IP地址不能在一秒钟之内访问超过n次。")]),s._v(" "),a("h3",{attrs:{id:"_3-哈希"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-哈希"}},[s._v("#")]),s._v(" 3. 哈希")]),s._v(" "),a("p",[s._v("哈希即键值对的数据结构。")]),s._v(" "),a("h4",{attrs:{id:"_3-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-命令"}},[s._v("#")]),s._v(" 3.1 命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置值：hset key field value")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset user1 name1 corona\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("获取值：hget key field")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hget user1 name1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"corona"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除field：hdel key field")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset user1 name corona\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset user1 age 20\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset user1 gender man\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hdel user1 gender\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hget user1 gender\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计算field个数：hlen key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hlen user1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("批量设置或获取field-value：hmget key field [field ...]，hmset key field value [field value ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hmset user1 name corona age 20 gender man\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hmget user1 name age gender\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"corona"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"20"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"man"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("判断field是否存在：hexists key field")])]),s._v(" "),a("li",[a("p",[s._v("获取所有field：hkeys key，hkeys命令应该叫hfields更为恰当，它返回指定哈希键所有的field。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hkeys user1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"age"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gender"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("获取所有value：hvals key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hvals user1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"corona"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"20"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"man"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("获取所有的field-value：hgetall key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hgetall user1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"corona"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"age"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"20"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gender"')]),s._v("\n6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"man"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("p",[s._v("在使用hgetall时，如果哈希元素个数比较多，会存在阻塞Redis的可能，如果开发人员只需要获取部分field，可以使用hmget，如果一定要获取全部field-value，可以使用hscan命令，该命令会渐进式遍历哈希类型。")]),s._v(" "),a("ul",[a("li",[s._v("hincrby：hincrby key field")]),s._v(" "),a("li",[s._v("hincrbyfloat：hincrbyfloat key field")]),s._v(" "),a("li",[s._v("hstrlen：hstrlen key field，计算value的字符串长度")])]),s._v(" "),a("h4",{attrs:{id:"_3-2-内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-内部编码"}},[s._v("#")]),s._v(" 3.2 内部编码")]),s._v(" "),a("p",[s._v("哈希类型的内部编码有两种：")]),s._v(" "),a("ul",[a("li",[s._v("ziplist（压缩列表）：当哈希类型元素个数小于hash-max-ziplist-entries配置（默认512个）、同时所有值都小于hash-max-ziplist-value配置（默认64字节）时，Redis会使用ziplist作为哈希的内部实现，ziplist使用更加紧凑的结构实现多个元素的连续存储，所以在节省内存方面比hashtable更加优秀。")]),s._v(" "),a("li",[s._v("hashtable（哈希表）：当哈希类型无法满足ziplist的条件时，Redis会使用hashtable作为哈希的内部实现，因为此时ziplist的读写效率会下降，而hashtable的读写时间复杂度为O(1)。")])]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset h_key1 name corona age 20\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> object encoding h_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ziplist"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> hset h_key2 name coroanasdadhahdsasdasdbajsdajdhabsdabhsdhjasbdahbjsdbsdbahjsdhavdjhavbdjvajsdvjasdvajdvgahjsgdajsdhjagdsjavsgdjahsjvdhajbvsdjavdhbavsghjvhagsdhhsdhasjdhavghjdasdhavdhashdvahsdahdasdbasdkabsjdjabsdjajdhvajsvdavjsdvajvsdjavsjdvasjdajsdvjavdajsdvjasdajvdjavsdjavsdjasvjdajvsdjavsdgavdvavsgdvgavgsdvashvgdavghdsvavjsdvajdsajvsdajdsvajdajvdghavsjdbavdbjakbsdkajbdbasbdbasdbhasdasdbjkabskdasabkjdabkdbakbashdakhsdahdhaskdhaksdhkahsdjsahkdhakhsdahdhasdaksdhaksdhaksudhaushduiahisdhuasdhuaisdahisdhiashdiasidahsdhsdhadhjkajsdlhjalsdhajsdjsaldhjasdljsadalhdoadjasjdjasjdlahsdhlashldhasdhasdhiasihdlasdhilhasdhliashdhalsndamsdnsjldjappsjpajdpasdadnadoaodoahudnasldlnasdnalsdandaidaljsdlsadnalsnldjasdjlhalasdjajdl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> object encoding h_key2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashtable"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_3-3-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-使用场景"}},[s._v("#")]),s._v(" 3.3 使用场景")]),s._v(" "),a("ul",[a("li",[s._v("记录实体信息。")])]),s._v(" "),a("p",[s._v("哈希类型和关系型数据库有两点不同之处：")]),s._v(" "),a("ul",[a("li",[s._v("哈希类型是稀疏的，而关系型数据库是完全结构化的，例如哈希类型每个键都可以有不同的field，而关系型数据库一旦添加新的列，所有行都要为其设置值（即使为NULL）。")]),s._v(" "),a("li",[s._v("关系型数据库可以做复杂的关系查询，而Redis去模拟关系型复杂查询开发困难，维护成本高。")])]),s._v(" "),a("p",[s._v("三种方法缓存用户信息：")]),s._v(" "),a("ul",[a("li",[s._v("原生字符串类型，每个属性一个键。（不推荐）占用过多的键，内存占用量比较大。")]),s._v(" "),a("li",[s._v("序列化字符串类型：将用户信息序列化后用一个键保存。\n"),a("ul",[a("li",[s._v("优点：简化变成，如果合理地使用序列化可以提高内存的使用效率。")]),s._v(" "),a("li",[s._v("缺点：序列化和反序列化都有一定的开销，同时每次更新属性都需要把全部数据取出进行反序列化，更新后再序列化到Redis中。")])])]),s._v(" "),a("li",[s._v("哈希类型：每个用户属性使用一对field-value，但是只用一个键保存。\n"),a("ul",[a("li",[s._v("优点：简单直观，如果使用合理可以减少内存空间的使用。")]),s._v(" "),a("li",[s._v("缺点：要控制哈希在ziplist和hashtable两种内部编码的转换，hashtable会消耗更多内存。")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-列表"}},[s._v("#")]),s._v(" 4. 列表")]),s._v(" "),a("p",[s._v("列表（list）类型是用来存储多个有序的字符串，列表中的每个字符串称为元素，一个列表最多可以存储2^32-1个元素。")]),s._v(" "),a("p",[s._v("在Redis中，可以对列表两端插入（push）和弹出（pop），还可以获取指定范围的元素列表、获取指定索引下标的元素等。")]),s._v(" "),a("p",[s._v("列表是一种比较灵活的数据结构，它可以充当栈和队列的角色，在实际开发上有很多应用场景。")]),s._v(" "),a("p",[s._v("列表类型有两个特点：有序、可重复。")]),s._v(" "),a("h4",{attrs:{id:"_4-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-命令"}},[s._v("#")]),s._v(" 4.1 命令")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("操作类型")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("操作")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("添加")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("rpush lpush linsert")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("查询")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("lrange lindex llen")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("删除")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("lpop rpop lrem ltrim")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("修改")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("lset")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("阻塞操作")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("blpop brpop")])])])]),s._v(" "),a("h5",{attrs:{id:"_4-1-1-添加操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-添加操作"}},[s._v("#")]),s._v(" 4.1.1 添加操作")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("rpush：从右边插入元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> rpush list_key1 a b c d e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("lpush：从左边插入元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lpush list_key1 a b c d e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("linsert：向某个元素前或者后插入元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> rpush list_key1 b c d \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> linsert list_key1 before b a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 4\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> linsert list_key1 after d e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 5\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"e"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])])]),s._v(" "),a("h5",{attrs:{id:"_4-1-2-查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-查找"}},[s._v("#")]),s._v(" 4.1.2 查找")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("lrange key start end ：获取指定范围内的元素列表")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"e"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("lindex key index：获取列表指定索引下标的元素")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lindex list_key1 0\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("llen：获取列表长度")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> llen list_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h5",{attrs:{id:"_4-1-3-删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-删除"}},[s._v("#")]),s._v(" 4.1.3 删除")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("lpop key：从列表左侧弹出元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lpop list_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("rpop key：从列表右侧弹出元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> rpop list_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"e"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("lrem key count value：删除指定元素。lrem命令会从列表中找到等于value的元素进行删除，根据count的不同分为三种情况：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("count > 0 ，从左到右，删除最多count个元素。")])]),s._v(" "),a("li",[a("p",[s._v("count < 0 ，从右到左，删除最多count绝对值个元素。")])]),s._v(" "),a("li",[a("p",[s._v("count = 0 ，删除所有。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrem list_key1 1 b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("ltrim key start end：按照索引范围修剪列表。只保留start 到 end的元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> ltrim list_key1 0 0\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h5",{attrs:{id:"_4-1-4-修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4-修改"}},[s._v("#")]),s._v(" 4.1.4 修改")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("lset key index newValue：修改指定索引下标的元素。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> rpush list_key1 a b c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lset list_key1 2 d\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> lrange list_key1 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])])]),s._v(" "),a("h5",{attrs:{id:"_4-1-5-阻塞操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-5-阻塞操作"}},[s._v("#")]),s._v(" 4.1.5 阻塞操作")]),s._v(" "),a("ul",[a("li",[s._v("blpop key [key ...] timeout")]),s._v(" "),a("li",[s._v("brpop key [key ...] timeout")])]),s._v(" "),a("p",[s._v("blpop和brpop是lpop和rpop的阻塞版本，它们除了弹出方向不同，使用方法基本相同，所以下面以brpop命令进行说明，brpop命令包含两个参数：")]),s._v(" "),a("ul",[a("li",[s._v("key[key ...]：多个列表的键。")]),s._v(" "),a("li",[s._v("timeout：阻塞时间（单位：秒）。")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("列表为空：如果timeout=3，那么客户端要等到3秒后返回，如果timeout=0，那么客户端一直阻塞下去。")])]),s._v(" "),a("li",[a("p",[s._v("列表不为空：客户端会立即返回。")])])]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> brpop bl_key1 bl_key2 bl_key3 0\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bl_key1"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("9.37s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> rpush bl_key1 a b c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"_4-2-内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-内部编码"}},[s._v("#")]),s._v(" 4.2 内部编码")]),s._v(" "),a("p",[s._v("列表类型的内部编码有两种：")]),s._v(" "),a("ul",[a("li",[s._v("ziplist（压缩列表）：当列表的元素个数小于list-max-ziplist-entries配置（默认512个），同时列表中每个元素的值都小于list-max-ziplist-value配置时（默认64字节），Redis会选用ziplist来作为列表的内部实现来减少内存的使用。")]),s._v(" "),a("li",[s._v("linkedlist（链表）：当列表类型无法满足ziplist的条件时，Redis会使用linkedlist作为列表的内部实现。")]),s._v(" "),a("li",[s._v("quicklist：Redis3.2版本提供了quicklist内部编码，简单地说它是以一个ziplist为节点的linkedlist，它结合了ziplist和linkedlist两者的优势，为列表类型提供了一种更为优秀的内部编码实现。")])]),s._v(" "),a("h4",{attrs:{id:"_4-3-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-使用场景"}},[s._v("#")]),s._v(" 4.3 使用场景")]),s._v(" "),a("h5",{attrs:{id:"_4-3-1-消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-消息队列"}},[s._v("#")]),s._v(" 4.3.1 消息队列")]),s._v(" "),a("p",[s._v("redis的lpush+brpop命令组合即可实现阻塞队列，生产者客户端使用lrpush从列表左侧插入元素，多个消费者客户端使用brpop命令阻塞式的“抢”列表尾部的元素，多个客户端保证了消费的负载均衡和高可用性。")]),s._v(" "),a("h5",{attrs:{id:"_4-3-2-文章列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-文章列表"}},[s._v("#")]),s._v(" 4.3.2 文章列表")]),s._v(" "),a("p",[s._v("每个用户都有属于自己的文章列表，现需要分页展示文章列表。此时可以考虑使用列表，因为列表不是有序的，同时支持按照索引范围获取元素。")]),s._v(" "),a("p",[s._v("实际上列表的使用场景很多，在选择时可以参考以下口诀：")]),s._v(" "),a("ul",[a("li",[s._v("lpush+lpop=Stack（栈）")]),s._v(" "),a("li",[s._v("lpush+rpop=Queue（队列）")]),s._v(" "),a("li",[s._v("lpush+ltrim=Capped Collection（有限集合）")]),s._v(" "),a("li",[s._v("lpush+brpop=Message Queue（消息队列）")])]),s._v(" "),a("h3",{attrs:{id:"_5-集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-集合"}},[s._v("#")]),s._v(" 5. 集合")]),s._v(" "),a("p",[s._v("集合（set）类型也是用来保存多个的字符串元素，但和列表类型不一样的是，集合中不允许有重复元素，并且集合中的元素是无序的，不能通过索引下标获取元素。")]),s._v(" "),a("p",[s._v("Redis除了支持集合内的增删改查，同时还支持多个集合取交集、并集、差集，合理地使用好集合类型，能在实际开发中解决很多实际问题。")]),s._v(" "),a("h4",{attrs:{id:"_5-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-命令"}},[s._v("#")]),s._v(" 5.1 命令")]),s._v(" "),a("h5",{attrs:{id:"_5-1-1-集合内操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-集合内操作"}},[s._v("#")]),s._v(" 5.1.1 集合内操作")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("添加元素：sadd key element [element ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd set_key1 a a b c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> smembers set_key1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除元素：srem key element [element ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> srem set_key1 a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> smembers set_key1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计算元素个数：scard key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> scard set_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("scard的时间复杂度为O（1），它不会遍历集合所有元素，而是直接用 Redis内部的变量")])]),s._v(" "),a("li",[a("p",[s._v("判断元素是否在集合中：sismember key element")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sismember set_key1 b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("随机从集合返回指定个数元素：srandmember key [count]，[count]是可选参数，如果不写默认为1")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> srandmember set_key1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("从集合随机弹出元素：spop key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd set_key2 a b c d e f g h i j\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 10\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> spop set_key2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"e"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> \n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> spop set_key2 3\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"j"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("获取所有元素：smembers key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> smembers set_key2\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"g"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("p",[s._v("smembers和lrange、hgetall都属于比较重的命令，如果元素过多存在阻塞Redis的可能性，这时候可以使用sscan来完成。")]),s._v(" "),a("h5",{attrs:{id:"_5-1-2-集合间操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-集合间操作"}},[s._v("#")]),s._v(" 5.1.2 集合间操作")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("求多个集合的交集：sinter key [key ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd s_key1 dog cat animal\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd s_key2 dog sit sh\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sinter s_key1 s_key2\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dog"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("求多个集合的并集：sunion key [key ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sunion s_key1 s_key2\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dog"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cat"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"animal"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sit"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("求多个集合的差集：sdiff key [key ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sdiff s_key1 s_key2\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"animal"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cat"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("将交集、并集、差集的结果保存：sinterstore、sunionstore、sdiffstore")]),s._v(" "),a("ul",[a("li",[s._v("sinterstore destination key [key ...]")]),s._v(" "),a("li",[s._v("sunionstore destination key [key ...]")]),s._v(" "),a("li",[s._v("sdiffstore destination key [key ...]")])])])]),s._v(" "),a("p",[s._v("集合间的运算在元素较多的情况下会比较耗时，所以Redis提供了上面三个命令（原命令+store）将集合间交集、并集、差集的结果保存在destination key中。")]),s._v(" "),a("h4",{attrs:{id:"_5-2-内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-内部编码"}},[s._v("#")]),s._v(" 5.2 内部编码")]),s._v(" "),a("p",[s._v("集合类型的内部编码有两种：")]),s._v(" "),a("ul",[a("li",[s._v("intset（整数集合）：当集合中的元素都是整数且元素个数小于set-max-intset-entries配置（默认512个）时，Redis会选用intset来作为集合的内部实现，从而减少内存的使用。")]),s._v(" "),a("li",[s._v("hashtable（哈希表）：当集合类型无法满足intset的条件时，Redis会使用hashtable作为集合的内部实现。")])]),s._v(" "),a("h4",{attrs:{id:"_5-3-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-使用场景"}},[s._v("#")]),s._v(" 5.3 使用场景")]),s._v(" "),a("p",[s._v("标签。给用户添加标签，给标签添加用户。")]),s._v(" "),a("ul",[a("li",[s._v("sadd = Tagging（标签）")]),s._v(" "),a("li",[s._v("spop/srandmember=Random item（生成随机数，比如抽奖）")]),s._v(" "),a("li",[s._v("sadd+sinter=Social Graph（社交需求）")])]),s._v(" "),a("h3",{attrs:{id:"_6-有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-有序集合"}},[s._v("#")]),s._v(" 6. 有序集合")]),s._v(" "),a("p",[s._v("有序集合保留了集合不能有重复成员的特性，但不同的是，有序集合中的元素可以排序，但是它和列表使用索引下标作为排序依据不同的是，它给每个元素设置一个分数（score）作为排序的依据。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("数据结构")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("是否允许重复元素")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("是否有序")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("有序实现方式")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("应用场景")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("列表")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("索引下标")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("时间轴、消息队列")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("集合")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("无")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("标签、社交")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("有序集合")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("分值")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("排行榜系统、社交")])])])]),s._v(" "),a("h4",{attrs:{id:"_6-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-命令"}},[s._v("#")]),s._v(" 6.1 命令")]),s._v(" "),a("h5",{attrs:{id:"_6-1-1-集合内的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-集合内的操作"}},[s._v("#")]),s._v(" 6.1.1 集合内的操作")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("添加成员：zadd key score member [score member ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zadd z_key1 10 a 20 b 30 c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("有关zadd命令有两点需要注意：Redis3.2为zadd命令添加了nx、xx、ch、incr四个选项：")]),s._v(" "),a("ul",[a("li",[s._v("nx：member必须不存在，才可以设置成功，用于添加。")]),s._v(" "),a("li",[s._v("xx：member必须存在，才可以设置成功，用于更新。")]),s._v(" "),a("li",[s._v("ch：返回此次操作后，有序集合元素和分数发生变化的个数。")]),s._v(" "),a("li",[s._v("incr：对score做增加后，相当于后面介绍的zincrby。")]),s._v(" "),a("li",[s._v("有序集合相比集合提供了排序字段，但是也产生了代价，zadd的时间复杂度为O(log(n))，sadd的时间复杂度为O(1)。")])])]),s._v(" "),a("li",[a("p",[s._v("计算成员个数：zcard key")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zcard z_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("和集合类型的scard命令一样，zcard的时间复杂度为O(1)。")])])]),s._v(" "),a("li",[a("p",[s._v("计算某个成员的分数：zscore key member")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zscore z_key1 a\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计算成员的排名：zrank key member / zrevrank key member")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zrank z_key1 b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zrevrank z_key1 b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除成员：zrem key member [member ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zrem z_key1 a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("增加成员的分数：zincrby key increment member")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zincrby z_key1 10 c\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"40"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("返回指定排名范围的成员：zrange key start end [withscores] / zrevrange key start end [withscores]")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("有序集合是按照分值排名的，zrange是从低到高返回，zrevrange反之。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zrange z_key2 0 -1 withscores\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-10"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10"')]),s._v("\n5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"15"')]),s._v("\n7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"20"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zrange z_key2 0 -1\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("返回指定分数范围的成员：zrangebyscore key min max [withscores] [limi offset count] / zrevrangebyscore key min max [withscores] [limit offset count]")]),s._v(" "),a("ul",[a("li",[s._v("其中zrangebyscore按照分数从低到高返回，zrevrangebyscore反之。withscores选项会同时返回每个成员的分数。[limit offset count]选项可以限制输出的起始位置和个数。同时min和max还支持开区间（小括号）和闭区间（中括号），-inf和+inf分别代表无限小和无限大。")])])]),s._v(" "),a("li",[a("p",[s._v("返回指定分数范围成员个数：zcount key min max")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zcount z_key2 -inf +inf\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除指定排名内的升序元素：zremrangebyrank key start end")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zremrangebyrank z_key2 0 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除指定分数范围的成员：zremrangebyscore key min max")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> zremrangebyscore z_key2 -100 100\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h5",{attrs:{id:"_6-1-2-集合间的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-集合间的操作"}},[s._v("#")]),s._v(" 6.1.2 集合间的操作")]),s._v(" "),a("ul",[a("li",[s._v("交集：zinterstore destination numkeys key [key ...] [weights weight [weight ...]]：\n"),a("ul",[a("li",[s._v("这个命令参数较多，下面分别进行说明：")]),s._v(" "),a("li",[s._v("destination：交集计算结果保存到这个键。")]),s._v(" "),a("li",[s._v("numkeys：需要做交集计算键的个数。")]),s._v(" "),a("li",[s._v("key[key ...]：需要做交集计算的键。")]),s._v(" "),a("li",[s._v("weights weight[weight ...]：每个键的权重，在做交集计算时，每个键中的每个member会将自己分数乘以这个权重，每个键的权重默认是1。")]),s._v(" "),a("li",[s._v("aggregate sum|min|max：计算成员交集后，分值可以按照sum（和）、min（最小值）、max（最大值）做汇总，默认值是sum。")])])]),s._v(" "),a("li",[s._v("并集：zunionstore destination numkeys key [key ...] [weights weight [weight ...]]：")])]),s._v(" "),a("h4",{attrs:{id:"_6-2-内部编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-内部编码"}},[s._v("#")]),s._v(" 6.2 内部编码")]),s._v(" "),a("p",[s._v("有序集合类型的内部编码有两种：")]),s._v(" "),a("ul",[a("li",[s._v("ziplist（压缩列表）：当有序集合的元素个数小于zset-max-ziplist-entries配置（默认128个），同时每个元素的值都小于zset-max-ziplist-value配置（默认64字节）时，Redis会用ziplist来作为有序集合的内部实现，ziplist可以有效减少内存的使用。")]),s._v(" "),a("li",[s._v("skiplist（跳跃表）：当ziplist条件不满足时，有序集合会使用skiplist作为内部实现，因为此时ziplist的读写效率会下降。")])]),s._v(" "),a("h4",{attrs:{id:"_6-3-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-使用场景"}},[s._v("#")]),s._v(" 6.3 使用场景")]),s._v(" "),a("p",[s._v("有序集合比较典型的使用场景就是排行榜系统。")]),s._v(" "),a("ul",[a("li",[s._v("添加用户赞数：zadd和zincrby")]),s._v(" "),a("li",[s._v("取消用户赞数：zrem")]),s._v(" "),a("li",[s._v("展示获取赞数最多的十个用户：zrevrange")]),s._v(" "),a("li",[s._v("展示用户信息以及用户分数：zscore和zrank")])]),s._v(" "),a("h3",{attrs:{id:"_7-键管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-键管理"}},[s._v("#")]),s._v(" 7. 键管理")]),s._v(" "),a("h4",{attrs:{id:"_7-1-单个键管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-单个键管理"}},[s._v("#")]),s._v(" 7.1 单个键管理")]),s._v(" "),a("ul",[a("li",[s._v("rename key newkey：键重命名")]),s._v(" "),a("li",[s._v("renamenx key newkey：键重命名")]),s._v(" "),a("li",[s._v("randomkey：随机返回一个键")]),s._v(" "),a("li",[s._v("expire key seconds：键在seconds秒后过期")]),s._v(" "),a("li",[s._v("expireat key timestamp：键在秒级时间戳timestamp后过期")]),s._v(" "),a("li",[s._v("ttl命令和pttl都可以查询键的剩余过期时间，但是pttl精度更高可以达到毫秒级别")]),s._v(" "),a("li",[s._v("pexpire key milliseconds：键在milliseconds毫秒后过期。")]),s._v(" "),a("li",[s._v("prexpireat key milliseconds-timestamp键在毫秒级时间戳timestamp后过期。")])]),s._v(" "),a("p",[s._v("在使用Redis相关过期命令时，需要注意以下几点。")]),s._v(" "),a("ul",[a("li",[s._v("如果expire key的键不存在，返回结果为0。")]),s._v(" "),a("li",[s._v("如果过期时间为负值，键会立即被删除，犹如使用del命令一样。")]),s._v(" "),a("li",[s._v("persist命令可以将键的过期时间清除")]),s._v(" "),a("li",[s._v("对于字符串类型键，执行set命令会去掉过期时间。")]),s._v(" "),a("li",[s._v("Redis不支持二级数据结构（例如哈希、列表）内部元素的过期功能，例如不能对列表类型的一个元素做过期时间设置。")]),s._v(" "),a("li",[s._v("setex命令作为set+expire的组合，不但是原子执行，同时减少了一次网络通讯的时间。")])]),s._v(" "),a("p",[s._v("迁移键：move，dump+restore，migrate")]),s._v(" "),a("ul",[a("li",[s._v("move：move key db，命令用于在Redis内部进行数据迁移。")]),s._v(" "),a("li",[s._v("dump+restore：dump key restore key ttl value，dump+restore可以实现在不同的Redis实例之间进行数据迁移的功能，整个迁移的过程分为两步：\n"),a("ul",[a("li",[s._v("在源Redis上，dump命令会将键值序列化，格式采用的是RDB格式。")]),s._v(" "),a("li",[s._v("在目标Redis上，restore命令将上面序列化的值进行复原，其中ttl参数代表过期时间，如果ttl=0代表没有过期时间。")]),s._v(" "),a("li",[s._v("有关dump+restore有两点需要注意：第一，整个迁移过程并非原子性的，而是通过客户端分布完成的。第二， 迁移过程是开启了两个客户端连接，所以dump的结果不是在源Redis和目标Redis之间进行传输。")])])]),s._v(" "),a("li",[s._v('migrate：migrate host port key|"" destination-db timeout [copy] [replace] [keys key [key ...]]\n'),a("ul",[a("li",[s._v("migrate 命令也是用于在Redis实例间进行数据迁移的，实际上migrate命令就是将dump、restore、del三个命令进行组合，从而简化了操作流程。migrate命令具有原子性，而且从Redis3.0.6版本以后已经支持迁移多个键的功能，有效地提高了迁移效率。")]),s._v(" "),a("li",[s._v("migrate实现过程和dump+restore基本类似，但是有3点不太相同：第一，整个过程是原子执行的，不需要在多个Redis实例上开启客户端的，只需要在源Redis执行migrate命令即可。第二，migrate命令的数据传输直接在源Redis和目标Redis上完成的。第三，目标Redis完成restore后会发送OK给源Redis，源Redis接收后会根据migrate对应的选项来决定是否在源Redis上删除对应的键。")])])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("命令")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("作用域")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("原子性")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("支持多个键")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("move")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis实例内部")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("dump + restore")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis实例之间")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("否")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("migrate")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis实例之间")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("是")])])])]),s._v(" "),a("h4",{attrs:{id:"_7-2-遍历键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-遍历键"}},[s._v("#")]),s._v(" 7.2 遍历键")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("全量遍历键：keys pattern")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> keys *\n 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key4"')]),s._v("\n 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey1"')]),s._v("\n 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ziplist"')]),s._v("\n 4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey3"')]),s._v("\n 5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h_key1"')]),s._v("\n 6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h_key2"')]),s._v("\n 7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key5"')]),s._v("\n 8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string_key1"')]),s._v("\n 9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s_key2"')]),s._v("\n10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key2"')]),s._v("\n11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set_key2"')]),s._v("\n12"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key1"')]),s._v("\n14"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set_key1"')]),s._v("\n15"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list_ziplist"')]),s._v("\n16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bl_key1"')]),s._v("\n17"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"z_key1"')]),s._v("\n18"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v("\n19"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list_key1"')]),s._v("\n20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s_key1"')]),s._v("\n21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nx_key1"')]),s._v("\n22"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey2"')]),s._v("\n23"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eeiy3"')]),s._v("\n24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key3"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("渐进式遍历：scan，和keys命令执行时会遍历所有键不同，scan采用渐进式遍历的方式来解决keys命令可能带来的阻塞问题，每次scan命令的时间复杂度是O(1)，但是要真正实现keys的功能，需要执行多次scan。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("scan的使用方法如下：scan cursor [match pattern] [count number]")])]),s._v(" "),a("li",[a("p",[s._v("cursor是必需参数，实际上cursor是一个游标，第一次遍历从0开始，每次scan遍历完都会返回当前游标的值，直到游标值为0，表示遍历结束。")])]),s._v(" "),a("li",[a("p",[s._v("match pattern是可选参数，它的作用的是做模式的匹配，这点和keys的模式匹配很像。")])]),s._v(" "),a("li",[a("p",[s._v("count number是可选参数，它的作用是表明每次要遍历的键个数，默认值是10，此参数可以适当增大。")])]),s._v(" "),a("li",[a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> scan 0\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey3"')]),s._v("\n    2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h_key1"')]),s._v("\n    3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h_key2"')]),s._v("\n    4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nx_key1"')]),s._v("\n    5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey1"')]),s._v("\n    6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set_key2"')]),s._v("\n    7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key3"')]),s._v("\n    8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key4"')]),s._v("\n    9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"z_key1"')]),s._v("\n   10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> scan 10\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"29"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string_key1"')]),s._v("\n    2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list_key1"')]),s._v("\n    3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set_key1"')]),s._v("\n    4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list_ziplist"')]),s._v("\n    5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bl_key1"')]),s._v("\n    6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key5"')]),s._v("\n    7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkey2"')]),s._v("\n    8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eeiy3"')]),s._v("\n    9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ziplist"')]),s._v("\n   10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n   11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key1"')]),s._v("\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> scan 29\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s_key2"')]),s._v("\n   2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key2"')]),s._v("\n   3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s_key1"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("p",[s._v("除了scan以外，Redis提供了面向哈希类型、集合类型、有序集合的扫描遍历命令，解决诸如hgetall、smembers、zrange可能会产生的阻塞问题，对应的命令分别是hscan、sscan、zscan，它们的用法和scan基本类似。渐进式遍历可以有效地解决keys命令可能产生的阻塞问题，但是scan并非完美无瑕，如果在scan的过程中如果有键的变化（增加、删除、修改），那么遍历效果可能会碰到如下问题：新增的键可能没有遍历到，遍历出了重复的键等情况，也就是说scan并不能保证完整地遍历出来所有的键。")])])])])]),s._v(" "),a("h4",{attrs:{id:"_7-3-数据库管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-数据库管理"}},[s._v("#")]),s._v(" 7.3 数据库管理")]),s._v(" "),a("p",[s._v("dbsize、select、flushdb/flushall。")]),s._v(" "),a("ul",[a("li",[s._v("切换数据库：select dbIndex。\n"),a("ul",[a("li",[s._v("Redis默认配置中是有16个数据库。Redis3.0中已经逐渐弱化这个功能，例如Redis的分布式实现Redis Cluster只允许使用0号数据库，只不过为了向下兼容老版本的数据库功能，该功能没有完全废弃掉。为什么要废弃这个功能？\n"),a("ul",[a("li",[s._v("redis是单线程的，如果使用多个数据库，这些数据库依然是使用一个CPU，彼此之间还是会受影响。")]),s._v(" "),a("li",[s._v("多数据库的使用方式，会让调试和运维不同业务的数据库变得困难，加入有一个慢查询存在，依然会影响其他数据库。")]),s._v(" "),a("li",[s._v("部分Redis的客户端根本就不支持这种方式。")])])])])]),s._v(" "),a("li",[s._v("清除数据库：flushdb/flushall命令用于清除数据库，两者的区别是flushdb只清除当前数据库，flushall会清除所有数据库。如果当前数据库键值数量比较多，flushdb/flushall存在阻塞Redis的可能性。")])]),s._v(" "),a("h4",{attrs:{id:"_7-4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-总结"}},[s._v("#")]),s._v(" 7.4 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis提供5种数据结构，每种数据结构都有多种内部编码实现。")]),s._v(" "),a("li",[s._v("纯内存存储、IO多路复用技术、单线程架构是造就Redis高性能的三个因素。")]),s._v(" "),a("li",[s._v("由于Redis的单线程架构，所以需要每个命令能被快速执行完，否则会存在阻塞Redis的可能，理解Redis单线程命令处理机制是开发和运维Redis的核心之一。")]),s._v(" "),a("li",[s._v("批量操作（例如mget、mset、hmset等）能够有效提高命令执行的效率，但要注意每次批量操作的个数和字节数。")]),s._v(" "),a("li",[s._v("了解每个命令的时间复杂度在开发中至关重要，例如在使用keys、hgetall、smembers、zrange等时间复杂度较高的命令时，需要考虑数据规模对Redis的影响。")]),s._v(" "),a("li",[s._v("persist命令可以删除任意类型键的过期时间，但是set命令也会删除字符串类型键的过期时间。")]),s._v(" "),a("li",[s._v("move、dump+restore、migrate是Redis发展过程中迁移键的方式，其中move命令基本废弃，migrate命令用原子性的方式实现了dump+restore，并且支持批量操作，是Redis Cluster实现水平扩容的重要工具。")]),s._v(" "),a("li",[s._v("scan命令可以解决keys命令可能带来的阻塞问题，同时Redis还提供了hscan、sscan、zscan渐进式遍历hash、set、zset。")])]),s._v(" "),a("h2",{attrs:{id:"第三章-小功能大用处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-小功能大用处"}},[s._v("#")]),s._v(" 第三章 小功能大用处")]),s._v(" "),a("p",[s._v("Redis提供的5种数据结构已经足够强大，但除此之外，Redis还提供了诸如慢查询分析、功能强大的Redis Shell、Pipeline、事务与Lua脚本、Bitmaps、HyperLogLog、发布订阅、GEO等附加功能。")]),s._v(" "),a("ul",[a("li",[s._v("慢查询分析：通过慢查询分析，找到有问题的命令进行优化。")]),s._v(" "),a("li",[s._v("Redis Shell：功能强大的Redis Shell会有意想不到的实用功能。")]),s._v(" "),a("li",[s._v("Pipeline：通过Pipeline（管道或者流水线）机制有效提高客户端性能。")]),s._v(" "),a("li",[s._v("事务与Lua：制作自己的专属原子命令。")]),s._v(" "),a("li",[s._v("Bitmaps：通过在字符串数据结构上使用位操作，有效节省内存，为开发提供新的思路。")]),s._v(" "),a("li",[s._v("HyperLogLog：一种基于概率的新算法，难以想象地节省内存空间。")]),s._v(" "),a("li",[s._v("发布订阅：基于发布订阅模式的消息通信机制。")]),s._v(" "),a("li",[s._v("GEO：Redis3.2提供了基于地理位置信息的功能。")])]),s._v(" "),a("h3",{attrs:{id:"_1-慢查询分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-慢查询分析"}},[s._v("#")]),s._v(" 1. 慢查询分析")]),s._v(" "),a("p",[s._v("许多存储系统提供慢查询日志。所谓慢查询日志就是系统在命令执行前后计算每条命令的执行时间，当超过预设阈值，就将这条命令的相关信息记录下来，Redis也提供了类似的功能。")]),s._v(" "),a("p",[s._v("一条客户端命令的生命周期为：")]),s._v(" "),a("ul",[a("li",[s._v("发送命令")]),s._v(" "),a("li",[s._v("命令排队")]),s._v(" "),a("li",[s._v("命令执行：慢查询只统计这一步的时间，所以没有慢查询并不代表客户端没有超时。")]),s._v(" "),a("li",[s._v("返回结果")])]),s._v(" "),a("h4",{attrs:{id:"_1-1-慢查询的两个配置参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-慢查询的两个配置参数"}},[s._v("#")]),s._v(" 1.1 慢查询的两个配置参数")]),s._v(" "),a("p",[s._v("对于慢查询功能，需要明确两件事：")]),s._v(" "),a("ul",[a("li",[s._v("预设阈值怎么设置？")]),s._v(" "),a("li",[s._v("慢查询记录存放在哪？")])]),s._v(" "),a("p",[s._v("showlog-log-lower-than：预设阈值，单位是微妙，默认值是10000，如果执行时间超过了10000微妙，那么它将被记录在慢查询日志中。")]),s._v(" "),a("p",[s._v("如果showlog-log-lower-than：0，会记录所有的日志，<0，对于任何命令都不会进行记录。")]),s._v(" "),a("p",[s._v("showlog-max-len：Redis使用了一个列表来存储慢查询日志，slowlog-max-len就是列表的最大长度。一个新的命令满足慢查询条件时被插入到这个列表中，当慢查询日志列表已处于其最大长度时，最早插入的一个命令将从列表中移出。")]),s._v(" "),a("p",[s._v("在Redis中有两种修改配置的方法，一直那是修改配置文件，另一种是使用config set命令动态修改。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" slowlog-log-slower-than "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20000")]),s._v("\nconfig "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" slowlog-max-len "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\nconfig rewrite\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果要Redis将配置持久化到本地配置文件，需要执行config reset命令。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("获取慢查询日志：slowlog get [n]")]),s._v(" "),a("ul",[a("li",[s._v("慢查询日志由四个属性组成：\n"),a("ul",[a("li",[s._v("标识id")]),s._v(" "),a("li",[s._v("发生时间戳")]),s._v(" "),a("li",[s._v("命令耗时")]),s._v(" "),a("li",[s._v("执行命令和参数")])])])])]),s._v(" "),a("li",[a("p",[s._v("获取慢查询日志当前的长度：slowlog len")])]),s._v(" "),a("li",[a("p",[s._v("慢查询日志重置：slowlog reset")])])]),s._v(" "),a("h4",{attrs:{id:"_1-2-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-最佳实践"}},[s._v("#")]),s._v(" 1.2 最佳实践")]),s._v(" "),a("ul",[a("li",[s._v("showlog-max-len配置建议：建议调大慢查询列表，不会占很多内存，线上可以设置为1000以上。")]),s._v(" "),a("li",[s._v("showlog-log-slower-than配置建议：默认值超过10毫秒判定为慢查询，需要根据Redis并发量调整该值。由于Redis采用单线程响应命令，对于高流量的场景，如果命令执行时间在1毫秒以上，那么Redis最多可支撑QPS不到1000。因此对于高QPS场景的Redis建议设置为1毫秒。")]),s._v(" "),a("li",[s._v("慢查询只记录命令执行时间，并不包括命令排队和网络传输时间。因此客户端执行命令的时间会大于命令实际执行时间。因为命令执行排队机制，慢查询会导致其他命令级联阻塞，因此客户端出现请求超时，需要检查该时间点是否有对应的慢查询，从而分析出是否为慢查询导致的命令级联阻塞。")]),s._v(" "),a("li",[s._v("由于慢查询日志是一个先进先出的队列，也就是说如果慢查询比较多的情况下，可能会丢失部分慢查询命令，为了防止这种情况发生，可以定期执行slow get命令将慢查询日志持久化到其他存储中，然后可以制作可视化界面进行查询。")])]),s._v(" "),a("h3",{attrs:{id:"_2-redis-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-redis-shell"}},[s._v("#")]),s._v(" 2. Redis Shell")]),s._v(" "),a("p",[s._v("Redis提供了redis-cli、redis-server、redis-benchmark等shell工具。")]),s._v(" "),a("h4",{attrs:{id:"_2-1-redis-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-redis-cli"}},[s._v("#")]),s._v(" 2.1 redis-cli")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("-r：代表命令会被执行多次")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314 -r 3 ping\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\nPONG\nPONG\nPONG\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("-i（interval）：每隔几秒执行一次命令，-i必须和-r一起使用。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314 -r 3 -i 1 ping\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\nPONG\nPONG\nPONG\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("-x：-x选项代表从标准输入（stdin）读取数据作为redis-cli的最后一个参数。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# echo world | redis-cli -a hqjmz5201314 -x set hello\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\nOK\n[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314 get hello\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world\\n"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("-c（cluster）：连接Redis Cluster节点时需要使用的，-c选项可以防止moved和ask异常。")])]),s._v(" "),a("li",[a("p",[s._v("-a：如果Redis配置了密码，可以用-a（auth）选项，有了这个选项就不需要再手动输入auth命令。")])]),s._v(" "),a("li",[a("p",[s._v("--scan和--pattern：--scan选项和--pattern选项用于扫描指定模式的键，相当于使用scan命令。")])]),s._v(" "),a("li",[a("p",[s._v("--slave：把当前客户端模拟成当前Redis节点的从节点，可以用来获取当前Redis节点的更新操作。ping命令是由于主从复制产的。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314 --slave\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\nSYNC with master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" discarding 1452 bytes of bulk transfer...\nSYNC done. Logging commands from master.\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PING"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PING"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"incr"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"incr"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"incr"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PING"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PING"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> set hello world\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> incr a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> incr a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> incr a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("--rdb：--rdb选项会请求Redis实例生成并发送RDB持久化文件，保存在本地，可使用它做持久化文件的定期备份。")])]),s._v(" "),a("li",[a("p",[s._v("--pipe：--pipe选项用于将命令封装成Redis通信协议定义的数据格式，批量发送给Redis执行。")])]),s._v(" "),a("li",[a("p",[s._v("--bigkeys：--bigkeys选项使用scan命令对Redis的键进行采样，从中找到内存占用比较大的值。")])]),s._v(" "),a("li",[a("p",[s._v("--eval：--eval选项用于执行指定Lua脚本。")])]),s._v(" "),a("li",[a("p",[s._v("--latency：latency有三个选项，分别是--latency、--latency-history、--latency-dist。它们都可以检测网络延迟，对于Redis的开发和运维非常有帮助。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("--latency：测试客户端到目标Redis的网络延迟。")])]),s._v(" "),a("li",[a("p",[s._v("--latency-history：--latency的执行结果只有一条，如果想以分时段的形式了解延迟信息，可以使用--latency-history选项。")])]),s._v(" "),a("li",[a("p",[s._v("--latency-dist：该选项会使用统计图标的形式从控制台输出延迟统计信息。")])]),s._v(" "),a("li",[a("p",[s._v("--stat：实时获取Redis的重要统计信息。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-cli -a hqjmz5201314 --stat\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Using a password with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-a'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-u'")]),s._v(" option on the command line interface may not be safe.\n------- data ------ --------------------- load -------------------- - child -\nkeys       mem      clients blocked requests            connections          \n25         1.84M    1       0       7747 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7748 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7749 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7750 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7751 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7752 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741        \n25         1.84M    1       0       7753 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           1741  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("--raw和--no-raw：--no-raw选项是要求命令的返回结果必须是原始的格式，--raw恰恰相反，返回格式化后的结果。")])])])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-redis-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-redis-server"}},[s._v("#")]),s._v(" 2.2 redis-server")]),s._v(" "),a("p",[s._v("redis-server除了启动Redis外，还有一个--test-memory，redis-server --test-memory可以用来检测当前操作系统能否稳定地分配指定容量的内存给Redis。通过这种检测可以有效避免因为内存问题造成redis崩溃。当输出passed this test时，说明内存检测完毕。")]),s._v(" "),a("h4",{attrs:{id:"_2-3-redis-benchmark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-redis-benchmark"}},[s._v("#")]),s._v(" 2.3 redis-benchmark")]),s._v(" "),a("p",[s._v("redis-benchmark可以为Redis做基准性能测试。")]),s._v(" "),a("ul",[a("li",[s._v("-c（clients）：代表客户端的并发数量（默认是50）。")]),s._v(" "),a("li",[s._v("-n"),a("quests",[s._v("：-n（num）代表客户端请求总量（默认是100000）。")])],1)]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-benchmark -c 100 -n 20000\n====== MSET "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10 keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ======\n  20000 requests completed in 0.22 seconds\n  100 parallel clients\n  3 bytes payload\n  keep "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("alive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1\n\n99.90% <= 1 milliseconds\n100.00% <= 1 milliseconds\n88888.89 requests per second\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("-q：-q选项仅仅显示redis-benchmark的requests per second信息")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-benchmark -c 100 -n 20000 -q\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("PING_INLINE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 85470.09 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("PING_BULK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 84033.61 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 84033.61 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83682.01 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("INCR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 84388.19 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("LPUSH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 82987.55 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("RPUSH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83333.34 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("LPOP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83682.01 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("RPOP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 82987.55 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("SADD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 82987.55 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("HSET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83333.34 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("SPOP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 82304.52 requests per second\nLPUSH "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("needed to benchmark LRANGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 84033.61 requests per second\nLRANGE_100 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first 100 elements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 81967.21 requests per second\nLRANGE_300 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first 300 elements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83682.01 requests per second\nLRANGE_500 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first 450 elements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 83682.01 requests per second\nLRANGE_600 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first 600 elements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 82644.62 requests per second\nMSET "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10 keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 85470.09 requests per second\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("-r：-r（random）选项")])]),s._v(" "),a("li",[a("p",[s._v("-p：代表每个请求pipeline的数据量（默认为1）")])]),s._v(" "),a("li",[a("p",[s._v("-k"),a("boolean",[s._v("：-k代表客户端是否使用keepalive，1为使用，0为不使用，默认值为1。")])],1)]),s._v(" "),a("li",[a("p",[s._v("-t：-t选项可以对指定命令进行基准测试。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ ~]# redis-benchmark -t get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("set -q\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 87565.68 requests per second\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 87642.41 requests per second\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("--csv：--csv选项会将结果按照csv格式输出，便于后续处理，如导出到excel等。")])])]),s._v(" "),a("h3",{attrs:{id:"_3-pipeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-pipeline"}},[s._v("#")]),s._v(" 3 Pipeline")]),s._v(" "),a("h4",{attrs:{id:"_3-1-概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-概念"}},[s._v("#")]),s._v(" 3.1 概念")]),s._v(" "),a("p",[s._v("Redis客户端执行一条命令分为如下四个过程：")]),s._v(" "),a("p",[s._v("1 发送命令")]),s._v(" "),a("p",[s._v("2 命令排队")]),s._v(" "),a("p",[s._v("3 命令执行")]),s._v(" "),a("p",[s._v("4 返回")]),s._v(" "),a("p",[s._v("其中1、4称为Round Trip Time（RTT，往返时间）")]),s._v(" "),a("p",[s._v("Redis提供了批量操作命令（例如mget、mset等），有效地节约RTT。但大部分命令是不支持批量操作的，例如hgetall命令，需要消耗n次RTT。")]),s._v(" "),a("p",[s._v("Pipeline（流水线）机制能改善这类问题。它能将一组Redis命令进行组装，通过一次RTT传输给Redis，再将这组Redis命令的执行结果按顺序返回给客户端。redis-cli的--pipe选项实际上就是使用Pipeline机制。")]),s._v(" "),a("h4",{attrs:{id:"_3-2-性能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-性能测试"}},[s._v("#")]),s._v(" 3.2 性能测试")]),s._v(" "),a("ul",[a("li",[s._v("Pipeline执行速度一般比逐条执行要快。")]),s._v(" "),a("li",[s._v("客户端和服务端的网络延时越大，Pipeline的效果越明显。")])]),s._v(" "),a("h4",{attrs:{id:"_3-3-原生批量命令与pipeline对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-原生批量命令与pipeline对比"}},[s._v("#")]),s._v(" 3.3 原生批量命令与Pipeline对比")]),s._v(" "),a("ul",[a("li",[s._v("原生批量命令是原子的，Pipeline是非原子的。")]),s._v(" "),a("li",[s._v("原生批量命令是一个命令对应多个key，Pipeline支持多个命令。")]),s._v(" "),a("li",[s._v("原生批量命令是Redis服务端支持实现的，而Pipeline需要服务端和客户端的共同实现。")])]),s._v(" "),a("h4",{attrs:{id:"_3-4-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-最佳实践"}},[s._v("#")]),s._v(" 3.4 最佳实践")]),s._v(" "),a("p",[s._v("Pipeline组装的命令个数不能没有限制，可以将一次包含大量命令的Pipeline拆分成多次较小的Pipeline来完成。")]),s._v(" "),a("p",[s._v("Pipeline只能操作一个Redis实例，但是即使在分布式Redis场景中，也可以作为批量操作的重要优化手段。")]),s._v(" "),a("h3",{attrs:{id:"_4-事务与lua"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-事务与lua"}},[s._v("#")]),s._v(" 4. 事务与Lua")]),s._v(" "),a("p",[s._v("为了保证多条命令组合的原子性，Redis提供了简单的事务功能以及集成Lua脚本来解决这个问题。")]),s._v(" "),a("h4",{attrs:{id:"_4-1-事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-事务"}},[s._v("#")]),s._v(" 4.1 事务")]),s._v(" "),a("p",[s._v("Redis提供了简单的事务功能，将一组需要一起执行的命令放到multi和exec两个命令之间。multi命令代表事务开始，exec命令代表事务结束，它们之间的命令是原子顺序执行的。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> multi\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd s_key1 a\nQUEUED\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sadd s_key1 b\nQUEUED\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> sismember s_key1 a\nQUEUED\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> exec\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("QUEUED，代表命令没有真正被执行，而是暂时保存在Redis中。")]),s._v(" "),a("p",[s._v("如果要停止事务的执行，可以使用discard命令代替exec命令即可。")]),s._v(" "),a("p",[s._v("如果事务中的命令出现错误，Redis的处理机制是不同的。")]),s._v(" "),a("ul",[a("li",[s._v("命令错误：把set写成了sett，属于语法错误，会造成整个事务无法执行。")]),s._v(" "),a("li",[s._v("运行时错误：比如误把sadd命令写成了zadd命令，这种就是运行时命令，因为语法是正确的。可以看到Redis并不支持回滚功能。")])]),s._v(" "),a("p",[s._v("有些应用场景需要在事务之前，确保事务中的key没有被其他客户端修改过，才执行事务，否则不执行（类似乐观锁）。Redis提供了watch命令来解决这类问题。")]),s._v(" "),a("p",[s._v("事务中watch命令演示时序")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("时间点")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("客户端-1")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("客户端-2")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v('set key "java"')]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T2")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("watch key")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T3")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("multi")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T4")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}}),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("append key python")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T5")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("append key jedis")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T6")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("exec")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("T7")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("get key")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),s._v(" "),a("p",[s._v("这个事务不会执行。")]),s._v(" "),a("h4",{attrs:{id:"_4-2-lua"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-lua"}},[s._v("#")]),s._v(" 4.2 Lua")]),s._v(" "),a("p",[s._v("在Redis中执行Lua脚本有两种方法：eval和evalsha。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("eval：eval 脚本内容 key个数 key列表 参数列表")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> eval "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'return \"hello \" ..KEYS[1] ..ARGV[1]'")]),s._v(" 1 redis world\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello redisworld"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("如果Lua脚本较长，还可以使用redis-cli--eval直接执行文本。")])]),s._v(" "),a("li",[a("p",[s._v("eval命令和--eval参数本质是一样的，客户端如果想执行Lua脚本，首先在客户端编写好Lua脚本代码，然后把脚本作为字符串发送给服务端，服务端会将执行结果返回给客户端。")])]),s._v(" "),a("li",[a("p",[s._v("evalsha：除了使用eval，redis还提供了evalsha命令来执行Lua脚本，首先要将Lua脚本加载到Redis服务端，得到该脚本的SHA1校验和，evalsha命令使用SHA1作为参数可以直接执行对应Lua脚本，避免每次发送Lua脚本的开销，而脚本也会常驻在服务端，脚本功能得到了复用。")])]),s._v(" "),a("li",[a("p",[s._v("加载脚本：script load命令可以将脚本内容加载到Redis内存中。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> redis-cli script load "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(cat lua_get.lua)"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123123ghdageg1gj2g3uj1ih81g7823781g7823"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("执行脚本：evalsha 脚本SHA1值 key个数 key列表 参数列表")])]),s._v(" "),a("li",[a("p",[s._v("Lua的Redis API")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("eval 'return redis.call(\"get\", KEYS[1])' 1 hello")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> eval "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'return redis.call(\"get\", KEYS[1])'")]),s._v(" 1 hello\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("redis.pcall函数和redis.call函数的区别在于：如果redis.call执行失败，那么脚本执行结束会直接返回错误，而redis.pcall会忽略错误继续执行脚本。")])])])])]),s._v(" "),a("p",[s._v("Lua脚本功能带来的好处：")]),s._v(" "),a("ul",[a("li",[s._v("Lua脚本在Redis中是原子执行的，执行过程中间不会插入其他命令。")]),s._v(" "),a("li",[s._v("Lua脚本可以用来定制命令，并将这些命令常驻在Redis内存中，实现复用的效果。")]),s._v(" "),a("li",[s._v("Lua脚本可以将多条命令一次性打包，有效地减少网络开销。")])]),s._v(" "),a("p",[s._v("redis提供了4个命令实现对Lua脚本的管理")]),s._v(" "),a("ul",[a("li",[s._v("script load：此命令用于将Lua脚本加载到Redis内存中。")]),s._v(" "),a("li",[s._v("script exists：此命令用于判断sha1是否已经加载到Redis内存中。返回被加载到Redis内存的个数")]),s._v(" "),a("li",[s._v("script flush：用于清除Redis内存已经加载的所有Lua脚本。")]),s._v(" "),a("li",[s._v("script kill：用于杀掉正在执行的Lua脚本。如果当前Lua脚本正在执行写操作，那么script kill将不会生效。")])]),s._v(" "),a("h3",{attrs:{id:"_5-bitmaps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-bitmaps"}},[s._v("#")]),s._v(" 5. Bitmaps")]),s._v(" "),a("h4",{attrs:{id:"_5-1-数据结构模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-数据结构模型"}},[s._v("#")]),s._v(" 5.1 数据结构模型")]),s._v(" "),a("p",[s._v("Redis提供了Bitmaps这个“数据结构”可以实现对位的操作。")]),s._v(" "),a("ul",[a("li",[s._v("Bitmaps本身不是一种数据结构，实际上它就是字符串，但是它可以对字符串的位进行操作。")]),s._v(" "),a("li",[s._v("Bitmaps单独提供了一套命令，所以在Redis中使用Bitmaps和使用字符串的方法不太相同，可以把Bitmaps想象成一个以位为单位的数组，数组的每个单元只能存储0和1，数组的下标在Bitmaps中叫做偏移量。")])]),s._v(" "),a("h4",{attrs:{id:"_5-2-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-命令"}},[s._v("#")]),s._v(" 5.2 命令")]),s._v(" "),a("p",[s._v("本节将每个独立用户是否访问过网站放在Bitmaps中，将访问的用户记做1，没有访问的用户记做0，用偏移量作为用户的id。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置值：setbit key offset value：设置键的第offset个位的值。在第一次初始化Bitmaps时，假如偏移量非常大，那么整个初始化过程执行会比较慢，可能会造成Redis的阻塞。")])]),s._v(" "),a("li",[a("p",[s._v("获取值：getbit key offset：获取键的第offset位的值。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 1 0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 1 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 2 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> getbit bit_key1 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> getbit bit_key1 0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> getbit bit_key1 2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("获取Bitmaps指定范围值为1的个数：bitcount [start] [end]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitcount bit_key1 0 -1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitcount bit_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("Bitmaps间的运算：bitop op destkey key[key ...]。bitop是一个复合操作，它可以做多个Bitmaps的and（交集）、or（并集）、not（非）、xor（异或）操作并将结果保存在destkey中。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 1 0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 1 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key1 2 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key2 1 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key2 0 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> setbit bit_key2 2 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitop and bit_destkey1 bit_key1 bit_key2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitcount bit_destkey1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计算Bitmaps中第一个值位targetBit的偏移量：bitpos key targetBit [start] [end]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitpos bit_key1 1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> bitpos bit_key1 2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR The bit argument must be 1 or 0.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_5-3-bitmaps分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-bitmaps分析"}},[s._v("#")]),s._v(" 5.3 Bitmaps分析")]),s._v(" "),a("p",[s._v("数据量越大，用Bitmaps能节省更多内存空间。但是如果数据量偏小，Bitmaps里大部分位都是0，反而不太合适了。")]),s._v(" "),a("h3",{attrs:{id:"_6-hyperloglog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-hyperloglog"}},[s._v("#")]),s._v(" 6. HyperLogLog")]),s._v(" "),a("p",[s._v("HyperLogLog并不是一种新的数据结构（实际类型为字符串类型），而是一种基数算法，通过HyperLogLog可以利用极小的内存空间完成独立总数的统计，数据集可以是IP、Email、ID等。HyperLogLog提供了3个命令：pfadd、pfcount、pfmerge。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("添加：pfadd key element [element ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfadd hyper_log_log_key1 a b c d e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("计算独立用户数：pfcount key [key ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfadd hyper_log_log_key1 a b c d e\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfcount hyper_log_log_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 5\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfadd hyper_log_log_key2 a b c d e f g h i k\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfcount hyper_log_log_key1 hyper_log_log_key2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 10\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("HyperLogLog内存占用量小得惊人，但是存在一定误差率，Redis官方给出的数字是0.81%的失误率。")])]),s._v(" "),a("li",[a("p",[s._v("合并：pfmerge destkey sourcekey [sourcekey ...]")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfmerge pfmerge_key1 hyper_log_log_key1 hyper_log_log_key2\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> pfcount pfmerge_key1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 10\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("p",[s._v("HyperLogLog内存占用量非常小，但是存在错误率，开发者在进行数据结构选型时只需要确认如下两条即可：")]),s._v(" "),a("ul",[a("li",[s._v("只为了计算独立总数，不需要获取单条数据。")]),s._v(" "),a("li",[s._v("可以容忍一定误差率，毕竟HyperLogLog在内存的占用量上有很大的优势。")])]),s._v(" "),a("h3",{attrs:{id:"_7-发布订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-发布订阅"}},[s._v("#")]),s._v(" 7. 发布订阅")]),s._v(" "),a("h4",{attrs:{id:"_7-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-命令"}},[s._v("#")]),s._v(" 7.1 命令")]),s._v(" "),a("p",[s._v("Redis主要提供了发布消息、订阅频道、取消订阅以及按照模式订阅和取消订阅等命令。")]),s._v(" "),a("ul",[a("li",[s._v("发布消息：publish channel message")]),s._v(" "),a("li",[s._v("订阅消息：subscribe channel [channel ...]")]),s._v(" "),a("li",[s._v("有关订阅命令有两点需要注意：\n"),a("ul",[a("li",[s._v("客户端在执行订阅命令之后进入了订阅状态，只能接收subscribe、psubscribe、unsubscribe、punsubscribe的四个命令。")]),s._v(" "),a("li",[s._v("新开启的订阅客户端，无法收到该频道之前的消息，因为Redis不会对发布的消息进行持久化。")])])]),s._v(" "),a("li",[s._v("取消订阅：unsubscribe [channel [channel ...]]")]),s._v(" "),a("li",[s._v("按照模式订阅和取消订阅：\n"),a("ul",[a("li",[s._v("psubscribe pattern [pattern ...]")]),s._v(" "),a("li",[s._v("punsubscribe [pattern [pattern ...]]")])])]),s._v(" "),a("li",[s._v("查询订阅：\n"),a("ul",[a("li",[s._v("查看活跃的频道：pubsub channels [pattern]，所谓活跃的频道是指当前频道至少有一个订阅者。")]),s._v(" "),a("li",[s._v("查看频道订阅数：pubsub numsub [channel ...]")]),s._v(" "),a("li",[s._v("查看模式订阅数：pubsub numpat")])])])]),s._v(" "),a("h3",{attrs:{id:"_8-geo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-geo"}},[s._v("#")]),s._v(" 8. GEO")]),s._v(" "),a("p",[s._v("Redis3.2版本提供了GEO（地理信息定位）功能，支持存储地理位置信息用来实现诸如附近位置、摇一摇这类依赖于地理位置信息的功能。")]),s._v(" "),a("p",[s._v("GEO功能是Redis借鉴NoSQL数据库Ardb实现的。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("增加地理位置信息：geoadd key longitude latitude member [longitude latitude member ...]")]),s._v(" "),a("ul",[a("li",[s._v("longitude latitude member 分别是该地理位置的经度、纬度、成员。")]),s._v(" "),a("li",[s._v("返回结果代表添加成功的个数，如果目标key没有包含对应的member返回1，否则返回0，虽然返回0但也会做更新。")])])]),s._v(" "),a("li",[a("p",[s._v("获取地理位置信息：geopos key member [member ...]")])]),s._v(" "),a("li",[a("p",[s._v("获取两个地理位置的距离：geodist key member1 member2 [unit]")]),s._v(" "),a("ul",[a("li",[s._v("其中unit代表返回结果的单位，包含以下四种：\n"),a("ul",[a("li",[s._v("m：代表米")]),s._v(" "),a("li",[s._v("km：公里")]),s._v(" "),a("li",[s._v("mi：英里")]),s._v(" "),a("li",[s._v("ft：尺")])])])])]),s._v(" "),a("li",[a("p",[s._v("获取指定位置范围内的地理信息位置集合：")]),s._v(" "),a("ul",[a("li",[s._v("georadius key longitute latitude radiusm|km|ft|mi [withcoord] [withdist] [withhash] [COUNT count] [asc|desc] [store key] [storedist key]")]),s._v(" "),a("li",[s._v("georadiusbymember key member radiusm|km|ft|mi [withcoord] [withdist] [withhash] [COUNT count] [asc|desc] [store key] [storedist key]")]),s._v(" "),a("li",[s._v("georadius和georadiusbymember两个命令的作用是一样的，都是以一个地理位置为中心算出指定半径内的其他地理信息位置，不同的是georadius命令的中心位置给出了具体的经纬度，georadiusbymember只需给出成员即可。其中radiusm|km|ft|mi是必需参数，指定了半径（带单位）。这两个命令有很多可选参数，具体如下：\n"),a("ul",[a("li",[s._v("withcoord：返回结果中包含经纬度。")]),s._v(" "),a("li",[s._v("withdist：返回结果中包含离中心节点位置的距离。")]),s._v(" "),a("li",[s._v("withhash：返回结果中包含geohash。")]),s._v(" "),a("li",[s._v("COUNT count：指定返回结果的数量。")]),s._v(" "),a("li",[s._v("asc|desc：返回结果按照离中心节点的距离做升序或者降序。")]),s._v(" "),a("li",[s._v("store key：将返回结果的地理位置信息保存到指定键。")]),s._v(" "),a("li",[s._v("storedist key：将返回结果离中心节点的距离保存到指定键。")])])])])]),s._v(" "),a("li",[a("p",[s._v("获取geohash：geohash key member [member ...]")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Redis使用geohash将二维经纬度转换为一维字符串，geohash有如下特点：")]),s._v(" "),a("ul",[a("li",[s._v("GEO的数据类型为zset，Redis将所有地理位置信息的geohash存放在zset中。")]),s._v(" "),a("li",[s._v("字符串越长，表示的位置更精确。")]),s._v(" "),a("li",[s._v("两个字符串越相似，它们之间的距离越近。")]),s._v(" "),a("li",[s._v("geohash编码和经纬度是可以相互转换的。")])]),s._v(" "),a("p",[s._v("Redis正是使用有序集合并结合geohash的特性实现了GEO的若干命令。")])])])]),s._v(" "),a("li",[a("p",[s._v("删除地理位置信息：zrem key member。")]),s._v(" "),a("ul",[a("li",[s._v("GEO没有提供删除成员的命令，但是因为GEO的底层实现是zset，所以可以借用zrem命令实现对地理位置信息的删除。")])])])]),s._v(" "),a("h3",{attrs:{id:"_9-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-总结"}},[s._v("#")]),s._v(" 9. 总结")]),s._v(" "),a("ul",[a("li",[s._v("慢查询中的两个重要参数showlog-log-slower-than和slowlog-max-len。")]),s._v(" "),a("li",[s._v("慢查询不包含命令网络传输和排队时间。")]),s._v(" "),a("li",[s._v("有必要将慢查询定期存放。")]),s._v(" "),a("li",[s._v("redis-cli一些重要的选项，例如--latency、--bigkeys、-i和-r组合。")]),s._v(" "),a("li",[s._v("redis-benchmark的使用方法和重要参数。")]),s._v(" "),a("li",[s._v("Pipeline可以有效减少RTT次数，但每次Pipeline的命令数量不能无节制。")]),s._v(" "),a("li",[s._v("Redis可以使用Lua脚本创造出原子、高效、自定义命令组合。")]),s._v(" "),a("li",[s._v("Redis执行Lua脚本有两种方法：eval和evalsha。")]),s._v(" "),a("li",[s._v("Bitmaps可以用来做独立用户统计，有效节省内存。")]),s._v(" "),a("li",[s._v("Bitmaps中setbit一个大的偏移量，由于申请大量内存会导致阻塞。")]),s._v(" "),a("li",[s._v("HyperLogLog虽然在统计独立总量时存在一定的误差，但是节省的内存量十分惊人。")]),s._v(" "),a("li",[s._v("Redis的发布订阅机制相比许多专业的消息队列系统功能较弱，不具备堆积和回溯消息的能力，但胜在足够简单。")]),s._v(" "),a("li",[s._v("Redis3.2提供了GEO功能，用来实现基于地理位置信息的应用，但底层实现是zset。")])]),s._v(" "),a("h2",{attrs:{id:"第四章-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-客户端"}},[s._v("#")]),s._v(" 第四章 客户端")]),s._v(" "),a("h3",{attrs:{id:"_1-客户端通信协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-客户端通信协议"}},[s._v("#")]),s._v(" 1. 客户端通信协议")]),s._v(" "),a("p",[s._v("Redis指定了RESP（Redis序列化协议）实现客户端与服务端的正常交互，这种协议简单高效，既能够被机器解析，又容易被人类识别。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v('发送命令格式：RESP规定一条命令的格式如下，CRLF代表"\\r\\n"。')]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("*<参数数量> CRLF\n$<参数1的字节数量> CRLF\n<参数1> CRLF\n...\n$<参数N的字节数量> CRLF\n<参数N> CRLF\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("返回结果格式：Redis的返回结果类型分为以下五种")]),s._v(" "),a("ul",[a("li",[s._v("状态回复：在RESP中第一个字节为“+”。例如set")]),s._v(" "),a("li",[s._v("错误回复：在RESP中第一个字节为“-”。例如错误命令setx")]),s._v(" "),a("li",[s._v("整数回复：在RESP中第一个字节为“: ”。例如incr")]),s._v(" "),a("li",[s._v("字符串回复：在RESP中第一个字节为“$”。例如get")]),s._v(" "),a("li",[s._v("多条字符串回复：在RESP中第一个字节为“*”。例如mget")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-java客户端jedis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-java客户端jedis"}},[s._v("#")]),s._v(" 2. Java客户端Jedis")]),s._v(" "),a("h3",{attrs:{id:"_3-客户端管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-客户端管理"}},[s._v("#")]),s._v(" 3. 客户端管理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("client list：client list命令能列出与Redis服务端相连的所有客户端连接信息。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> client list\nid=7463 addr=127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("60564 fd=7 name= age=15 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=26 qbuf-free=32742 obl=0 oll=0 omem=0 events=r cmd=client\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("标识：id、addr、fd、name。这四个属性属于客户端的标识。\n"),a("ul",[a("li",[s._v("id：客户端连接的唯一标识，这个id是随着Redis的连接自增的，重启Redis后会重置为0。")]),s._v(" "),a("li",[s._v("addr：客户端连接的ip和端口。")]),s._v(" "),a("li",[s._v("fd：socket的文件描述符，与lsof命令结果中的fd是同一个，如果fd=-1代表当前客户端不是外部客户端，而是Redis内部伪装客户端。")]),s._v(" "),a("li",[s._v("name：客户端的名字。")])])]),s._v(" "),a("li",[s._v("输入缓冲区：qbuf、qbuf-free。Redis为每个客户端分配了输入缓冲区，它的作用是将客户端发送的命令临时保存，同时Redis从会输入缓冲区拉取命令并执行，输入缓冲区为客户端发送命令到Redis执行命令提供了缓冲功能。\n"),a("ul",[a("li",[s._v("qbuf：缓冲区的总容量。")]),s._v(" "),a("li",[s._v("qbuf-free：缓冲区的剩余容量。")]),s._v(" "),a("li",[s._v("Redis没有提供相应的配置来规定每个缓冲区的大小，输入缓冲区会根据输入内容大小的不同动态调整，只是要求每个客户端缓冲区的大小不能超过1G，超过后客户端将会关闭。")])])])]),s._v(" "),a("p",[s._v("输入缓冲使用不当会产生两个问题：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("一旦某个客户端的输入缓冲区超过1G，客户端将会关闭。")])]),s._v(" "),a("li",[a("p",[s._v("输入缓冲区不受maxmemory控制，如果超过maxmemory限制，可能会产生数据丢失、键值淘汰、OOM等情况。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> info memory\n# Memory\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("859328\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("839.19K\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_rss")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8593408\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_rss_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8.20M\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_peak")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8068488\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_peak_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7.69M\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_peak_perc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10.65%\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_overhead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("842894\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_startup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("791416\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_dataset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("16434\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_dataset_perc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("24.20%\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_allocated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("851448\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1064960\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_resident")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("11890688\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("total_system_memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3973373952\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("total_system_memory_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3.70G\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_lua")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("44032\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_lua_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("43.00K\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("256\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("used_memory_scripts_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("256B\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("number_of_cached_scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("2\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("maxmemory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("maxmemory_human")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0B\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("maxmemory_policy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("noeviction\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_frag_ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.25\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_frag_bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("213512\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_rss_ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("11.17\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("allocator_rss_bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10825728\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("rss_overhead_ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0.72\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("rss_overhead_bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("-3297280\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_fragmentation_ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10.50\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_fragmentation_bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7775096\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_not_counted_for_evict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_replication_backlog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_clients_slaves")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_clients_normal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("49694\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_aof_buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("mem_allocator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("jemalloc-5.1.0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("active_defrag_running")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("lazyfree_pending_objects")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("bigkeys过大，处理速度跟不上缓冲区的输入速度，redis发生了阻塞导致输入命令积压在了输入缓冲区等都有可能导致输入缓冲区过大。")])])]),s._v(" "),a("p",[s._v("监控输入缓冲区异常的方法有两种：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("定期执行client list命令，收集qbuf和qbuf-free找到异常的连接记录。")])]),s._v(" "),a("li",[a("p",[s._v("通过info命令的info clients模块，找到最大的输入缓冲区")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6379> info clients\n# Clients\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("connected_clients")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("client_recent_max_input_buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("2\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("client_recent_max_output_buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("输出缓冲区：obl、oll、omem")]),s._v(" "),a("ul",[a("li",[s._v("输出缓冲区的容量可以通过参数client-output-buffer-limit来进行设置。")]),s._v(" "),a("li",[s._v("输出缓冲区分为：普通客户端、发布订阅客户端、slave客户端（用于复制）。")]),s._v(" "),a("li",[s._v("输出缓冲区由两部分组成：固定缓冲区（返回较小的结果）和动态缓冲区（返回较大的结果）。")]),s._v(" "),a("li",[s._v("obl：固定缓冲区的长度。")]),s._v(" "),a("li",[s._v("oll：动态缓冲区列表的长度。")]),s._v(" "),a("li",[s._v("omem：使用的字节数。")])])]),s._v(" "),a("li",[a("p",[s._v("客户端的存活状态：")]),s._v(" "),a("ul",[a("li",[s._v("age：当前客户端已经连接的时间。")]),s._v(" "),a("li",[s._v("idle：最近一次的空闲时间。")])])]),s._v(" "),a("li",[a("p",[s._v("客户端的限制：")]),s._v(" "),a("ul",[a("li",[s._v("maxclients：最大客户端连接数。一旦连接数超过maxclients，新的连接将被拒绝。默认值是10000。")]),s._v(" "),a("li",[s._v("timeout：连接的最大空闲时间，一旦客户端连接的idle时间超过了timeout，连接将会被关闭。默认是0")])])]),s._v(" "),a("li",[a("p",[s._v("客户端类型：")]),s._v(" "),a("ul",[a("li",[s._v("flag用于标识当前客户端的类型：\n"),a("ul",[a("li",[s._v("S：slave客户端")]),s._v(" "),a("li",[s._v("N：普通客户端")]),s._v(" "),a("li",[s._v("O：代表当前客户端正在执行monitor命令。")])])])])])])]),s._v(" "),a("li",[a("p",[s._v("client setName和client getName：设置和获取客户端的名称")])]),s._v(" "),a("li",[a("p",[s._v("client kill：client kill ip:port 用于杀掉指定IP地址和端口的客户端。")])]),s._v(" "),a("li",[a("p",[s._v("client pause timeout（毫秒）：阻塞客户端timeout毫秒数。")]),s._v(" "),a("ul",[a("li",[s._v("client pause只对普通和发布订阅客户端有效，对于主从复制是无效的。所以此命令可以用来让主从复制保持一致。")]),s._v(" "),a("li",[s._v("client pause可以用一种可控的方式将客户端连接从一个Redis节点切换到另一个Redis节点。")])])]),s._v(" "),a("li",[a("p",[s._v("monitor：用于监控Redis正在执行的命令。")])])]),s._v(" "),a("h3",{attrs:{id:"_4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[s._v("#")]),s._v(" 4. 总结")]),s._v(" "),a("ul",[a("li",[s._v("RESP保证客户端与服务端的正常通信，是各种编程语言开发客户端的基础。")]),s._v(" "),a("li",[s._v("要用连接池。")]),s._v(" "),a("li",[s._v("Jedis.close()在直连下是关闭连接，在连接池则是归还连接。")]),s._v(" "),a("li",[s._v("Jedis客户端没有内置序列化，需要自己选用。")]),s._v(" "),a("li",[s._v("客户端输入缓冲区不能配置，强制限制在1G之内，但是不会受到maxmemory限制。")]),s._v(" "),a("li",[s._v("客户端输出缓冲区支持普通客户端、发布订阅客户端、复制客户端配置、同样会受到maxmemory限制。")]),s._v(" "),a("li",[s._v("Redis的timeout配置可以自动关闭闲置客户端，tcp-keepalive参数可以周期性检查关闭无效TCP连接。")]),s._v(" "),a("li",[s._v("monitor命令虽然好用，但是在大并发下存在输出缓冲区暴涨的可能性。")]),s._v(" "),a("li",[s._v("info clients帮助开发和运维人员找到客户端可能存在的问题。")])]),s._v(" "),a("h2",{attrs:{id:"第五章-持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五章-持久化"}},[s._v("#")]),s._v(" 第五章 持久化")]),s._v(" "),a("p",[s._v("Redis支持RDB和AOF两种持久化机制。")]),s._v(" "),a("h3",{attrs:{id:"_1-rdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-rdb"}},[s._v("#")]),s._v(" 1. RDB")]),s._v(" "),a("p",[s._v("RDB持久化是把当前进程数据生成快照保存到硬盘的过程，触发RDB持久化过程分为手动触发和自动触发。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-触发机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-触发机制"}},[s._v("#")]),s._v(" 1.1 触发机制")]),s._v(" "),a("p",[s._v("手动触发分别对应save和bgsave命令：")]),s._v(" "),a("ul",[a("li",[s._v("save命令：阻塞当前Redis服务器，直到RDB过程完成为止，对于比较大的实例会造成长时间阻塞，线上环境不建议使用。\n"),a("ul",[a("li",[s._v("运行save命令对应的Redis日志如下：DB saved on dist")])])]),s._v(" "),a("li",[s._v("bgsave命令：Redis进程进行fork操作创建子进程，RDB持久化过程由子进程负责，完成后自动结束。阻塞只发生在fork阶段，一般时间很短。\n"),a("ul",[a("li",[s._v("运行bgsave命令对应的Redis日志如下")])])]),s._v(" "),a("li",[s._v("显然bgsave命令是针对save阻塞问题做的优化，因此Redis内部所有的涉及RDB的操作都采用bgsave的方式，而save命令已经废弃。")])]),s._v(" "),a("p",[s._v("自动触发：")]),s._v(" "),a("ul",[a("li",[s._v("使用save相关配置，如“save m n”。表示m秒内数据集存在n次修改时，自动触发bgsave。")]),s._v(" "),a("li",[s._v("如果从节点执行全量复制操作，主节点自动执行bgsave生成RDB文件并发送给从节点。")]),s._v(" "),a("li",[s._v("执行debug reload命令重新加载Redis时，也会自动触发save操作。")]),s._v(" "),a("li",[s._v("默认情况下执行shutdown命令时，如果没有开启AOF持久化功能则自动执行bgsave。")])]),s._v(" "),a("h4",{attrs:{id:"_1-2-流程说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-流程说明"}},[s._v("#")]),s._v(" 1.2 流程说明")]),s._v(" "),a("p",[s._v("bgsave是主流的触发RDB持久化方式。")]),s._v(" "),a("p",[s._v("bgsave依赖于父进程执行fork操作创建子进程，fork操作过程父进程会阻塞。")]),s._v(" "),a("h4",{attrs:{id:"_1-3-rdb文件的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-rdb文件的处理"}},[s._v("#")]),s._v(" 1.3 RDB文件的处理")]),s._v(" "),a("p",[s._v("RDB文件保存在dir配置指定的目录下，文件名通过dbfilename配置指定。可以通过执行config set dir {newDir}和config set dbfilename {newFileName}运行期动态执行，当下次运行时RDB文件会保存到新目录。")]),s._v(" "),a("p",[s._v("压缩：Redis默认采用LZF算法对生成的RDB文件做压缩处理，压缩后的文件远远小于内存大小，默认开启，可以通过参数config set rdbcompression{yes|no}动态修改。虽然压缩RDB会消耗CPU，但可大幅度降低文件的体积，方便保存到硬盘或通过网络发送到从节点，因此线上建议开启。")]),s._v(" "),a("p",[s._v("校验：如果Redis加载损坏的RDB文件时拒绝启动。可以使用Redis提供的redis-check-dump工具检测RDB文件并获取对应的错误报告。")]),s._v(" "),a("h4",{attrs:{id:"_1-4-rdb的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-rdb的优缺点"}},[s._v("#")]),s._v(" 1.4 RDB的优缺点")]),s._v(" "),a("ul",[a("li",[s._v("优点：\n"),a("ul",[a("li",[s._v("RDB是一个紧凑压缩的二进制文件，代表Redis在某个时间点上的数据快照。非常适用于备份，全量复制等场景。比如每6小时执行bgsave备份，并把RDB文件拷贝到远程机器或者文件系统（如hdfs），用于灾难恢复。")]),s._v(" "),a("li",[s._v("Redis加载RDB恢复数据远远快于AOF的方式。")])])]),s._v(" "),a("li",[s._v("缺点：\n"),a("ul",[a("li",[s._v("RDB方式数据没办法做到实时持久化/秒级持久化，因为bgsave每次运行都要执行fork操作创建子进程，属于重量级操作，频繁执行成本过高。")]),s._v(" "),a("li",[s._v("RDB文件使用特定二进制格式保存，Redis版本演进过程中有多个格式的RDB版本，存在老版本Redis服务无法兼容新版RDB格式的问题。")])])]),s._v(" "),a("li",[s._v("针对RDB不适合实时持久化的问题，Redis提供了AOF持久化方式来解决。")])]),s._v(" "),a("h3",{attrs:{id:"_2-aof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-aof"}},[s._v("#")]),s._v(" 2. AOF")]),s._v(" "),a("p",[s._v("AOF(append only file)持久化：以独立日志的方式记录每次写命令，重启时再重新执行AOF文件中的命令达到恢复数据的目的。AOF的主要作用是解决了数据持久化的实时性，目前已经是Redis持久化的主流方式。")]),s._v(" "),a("h4",{attrs:{id:"_2-1-使用aof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-使用aof"}},[s._v("#")]),s._v(" 2.1 使用AOF")]),s._v(" "),a("p",[s._v("开启AOF功能需要设置配置：appendonly yes，默认不开启。AOF文件名通过appendfilename配置设置，默认文件名是appendonly.aof。保存路径和RDB持久化方式一致，通过dir配置指定。AOF的工作流程操作：命令写入（append）、文件同步（sync）、文件重写（rewrite）、重启加载（load）。")]),s._v(" "),a("p",[s._v("流程如下：")]),s._v(" "),a("ul",[a("li",[s._v("所有的写入命令会追加到aof_buf（缓冲区）中。")]),s._v(" "),a("li",[s._v("AOF缓冲区根据对应的策略向硬盘做同步操作。")]),s._v(" "),a("li",[s._v("随着AOF文件越来越大，需要定期对AOF文件进行重写，达到压缩的目的。")]),s._v(" "),a("li",[s._v("当Redis服务器重启时，可以加载AOF文件进行数据恢复。")])]),s._v(" "),a("h4",{attrs:{id:"_2-2-命令写入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-命令写入"}},[s._v("#")]),s._v(" 2.2 命令写入")]),s._v(" "),a("p",[s._v("AOF命令写入的内容直接是文本协议格式。")]),s._v(" "),a("ul",[a("li",[s._v("AOF为什么直接采用文本协议格式？\n"),a("ul",[a("li",[s._v("文本协议具有很好的兼容性。")]),s._v(" "),a("li",[s._v("开启AOF后，所有写入命令都包含追加操作，直接采用协议格式，避免了二次处理开销。")]),s._v(" "),a("li",[s._v("文本协议具有可读性，方便直接修改和处理。")])])]),s._v(" "),a("li",[s._v("AOF为什么把命令追加到aof_buf中？Redis使用单线程响应命令，如果每次写AOF文件命令都直接追加到硬盘，那么性能完全取决于当前硬盘负载。")])]),s._v(" "),a("h4",{attrs:{id:"_2-3-文件同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-文件同步"}},[s._v("#")]),s._v(" 2.3 文件同步")]),s._v(" "),a("p",[s._v("Redis提供了多种AOF缓冲区同步文件策略，由参数appendfsync控制。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("可配置值")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("always")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("命令写入aof_buf后调用系统fsync操作同步到AOF文件，fsync完成后线程返回")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("everysec")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("命令写入aof_buf后调用系统write操作，write完成后线程返回，fsync同步文件操作由专门线程每秒调用一次")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("no")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("命令写入aof_buf后调用系统write操作，不对AOF文件做fsync同步，同步硬盘操作由操作系统负责，通常同步周期最长30秒")])])])]),s._v(" "),a("ul",[a("li",[s._v("write：write操作会触发延迟写机制。Linux在内核提供页缓冲区来提高硬盘IO性能。write操作在写入系统缓冲区后直接返回。同步硬盘操作依赖于系统调度机制，例如：缓冲区页写满或达到特定时间周期。同步文件之前，如果系统宕机，缓冲区内数据会丢失。")]),s._v(" "),a("li",[s._v("fsync：针对单个文件操作（比如AOF文件），做强制硬盘同步，fsync将阻塞直到写入硬盘完成后返回，保证了数据持久化。")])]),s._v(" "),a("p",[s._v("建议配置为everysec的同步策略，也是默认配置，做到兼顾性能和数据安全性。")]),s._v(" "),a("h4",{attrs:{id:"_2-4-重写机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-重写机制"}},[s._v("#")]),s._v(" 2.4 重写机制")]),s._v(" "),a("p",[s._v("Redis引入AOF重写机制压缩文件体积。")]),s._v(" "),a("ul",[a("li",[s._v("进程内已经超时的数据不再写入文件。")]),s._v(" "),a("li",[s._v("新的AOF文件只保留最终数据的写入命令。")]),s._v(" "),a("li",[s._v("多条写命令可以合并为一个。为了防止单挑命令过大造成客户端缓冲区溢出，以64个元素为界拆分为多条。")])]),s._v(" "),a("p",[s._v("AOF重写降低了文件大小，更小的AOF文件可以更快地被Redis加载。")]),s._v(" "),a("p",[s._v("AOF重写过程可以手动触发和自动触发：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("手动：直接调用bgwriteaof命令。")])]),s._v(" "),a("li",[a("p",[s._v("自动：根据auto-aof-rewrite-min-size和auto-aof-rewrite-percentage参数确定自动触发时机。")]),s._v(" "),a("ul",[a("li",[s._v("auto-aof-rewrite-min-size：表示运行AOF重写时文件最小体积，默认为64MB。")]),s._v(" "),a("li",[s._v("auto-aof-rewrite-percentage：代表当前AOF文件空间（aof_current_size）和上一次重写后AOF文件空间（aof_base_size）的比值。")])]),s._v(" "),a("p",[s._v("自动触发时机=aof_current_size > auto-aof-rewrite-min-size && (aof_current_size - aof_base_size) / aof_base_size >= auto_aof_rewrite-percentage")])])]),s._v(" "),a("h4",{attrs:{id:"_2-5-重启加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-重启加载"}},[s._v("#")]),s._v(" 2.5 重启加载")]),s._v(" "),a("p",[s._v("AOF和RDB文件都可以用于服务器重启时的数据恢复。")]),s._v(" "),a("p",[s._v("优先加载AOF然后是RDB，加载AOF/RDB文件成功后，Redis启动成功，AOF/RDB文件存在错误时，Redis启动失败并打印错误信息。")]),s._v(" "),a("h4",{attrs:{id:"_2-6-文件校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-文件校验"}},[s._v("#")]),s._v(" 2.6 文件校验")]),s._v(" "),a("p",[s._v("记载损坏的AOF文件时会拒绝启动。")]),s._v(" "),a("p",[s._v("对于错误格式的AOF文件，先进行备份，然后采用redis-check-aof-fix命令进行修复，修复后使用diff-u对比数据的差异，找出丢失的数据，有些可以人工修改补全。AOF文件可能存在结尾不完整的情况，redis提供了aof-load-truncated配置来兼容这种情况，默认开启。加载AOF时，当遇到此问题时会忽略并继续启动，同时打印警告日志。")]),s._v(" "),a("h3",{attrs:{id:"_3-问题定位与优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-问题定位与优化"}},[s._v("#")]),s._v(" 3. 问题定位与优化")]),s._v(" "),a("p",[s._v("Redis持久化功能一直是影响Redis性能的高发地。")]),s._v(" "),a("h4",{attrs:{id:"_3-1-fork操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-fork操作"}},[s._v("#")]),s._v(" 3.1 fork操作")]),s._v(" "),a("p",[s._v("fork操作耗时跟进程总内存量息息相关。")]),s._v(" "),a("ul",[a("li",[s._v("fork耗时问题定位：可以在info stats统计中查latest_fork_usec指标获取最近一次fork操作耗时，单位微妙。正常情况下fork耗时应该是每GB消耗20毫秒左右。")]),s._v(" "),a("li",[s._v("如何改善fork操作的耗时：\n"),a("ul",[a("li",[s._v("优先使用物理机或者高效支持fork操作的虚拟化技术，避免使用Xen。")]),s._v(" "),a("li",[s._v("控制Redis实例最大可用内存，fork耗时跟内存量成正比，线上建议每个Redis实例内存控制在10GB以内。")]),s._v(" "),a("li",[s._v("合理配置Linux内存分配策略，避免物理内存不足导致fork失败。")]),s._v(" "),a("li",[s._v("降低fork操作的频率，如适度放宽AOF自动触发时机，避免不必要的全量复制等。")])])])]),s._v(" "),a("h4",{attrs:{id:"_3-2-子进程开销监控和优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-子进程开销监控和优化"}},[s._v("#")]),s._v(" 3.2 子进程开销监控和优化")]),s._v(" "),a("p",[s._v("子进程负责AOF或者RDB文件的重写，它的运行过程主要涉及CPU、内存、硬盘三部分的消耗。")]),s._v(" "),a("h4",{attrs:{id:"_3-3-aof追加阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-aof追加阻塞"}},[s._v("#")]),s._v(" 3.3 AOF追加阻塞")]),s._v(" "),a("h3",{attrs:{id:"_4-多实例部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-多实例部署"}},[s._v("#")]),s._v(" 4. 多实例部署")]),s._v(" "),a("p",[s._v("Redis单线程架构导致无法充分利用CPU多核特性，通常的做法是在一台机器上部署多个Redis实例。当多个实例开启AOF重写后，彼此之间会产生对CPU和IO的竞争。")]),s._v(" "),a("h3",{attrs:{id:"_5-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[s._v("#")]),s._v(" 5. 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis提供了两种持久化方式：RDB和AOF。")]),s._v(" "),a("li",[s._v("RDB使用一次性生成内存快照的方式，产生的文件紧凑压缩比更高，因此读取RDB恢复速度更快，由于每次生成RDB开销较大，无法做到实时持久化，一般用于数据冷备和复制传输。")]),s._v(" "),a("li",[s._v("save命令会阻塞主线程不建议使用，bgsave命令通过fork操作创建子进程生成RDB避免阻塞。")]),s._v(" "),a("li",[s._v("AOF通过追加写命令到文件实现持久化，通过appendfsync参数可以控制实时/秒级持久化。因为需要不断追加写命令，所以AOF文件体积主键变大，需要定期执行重写操作来降低文件体积。")]),s._v(" "),a("li",[s._v("AOF重写可以通过auto-aof-rewrite-min-size和auto-aof-rewrite-percentage参数控制自动触发，也可以使用bgrewriteaof命令手动触发。")]),s._v(" "),a("li",[s._v("子进程执行期间使用copy-on-write机制与父进程共享内存，避免内存消耗翻倍。AOF重写期间还需要维护重写缓冲区，保存新的写入命令避免数据丢失。")]),s._v(" "),a("li",[s._v("持久化阻塞主线程场景有：fork阻塞和AOF追加阻塞。fork阻塞时间跟内存量和系统有关，AOF追加阻塞说明硬盘资源紧张。")]),s._v(" "),a("li",[s._v("单机下部署多个实例时，为了防止出现多个子进程执行重写操作，建议做隔离控制，避免CPU和IO资源竞争。")])]),s._v(" "),a("h2",{attrs:{id:"第六章-复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六章-复制"}},[s._v("#")]),s._v(" 第六章 复制")]),s._v(" "),a("p",[s._v("复制是高可用Redis的基础，哨兵和集群都是在复制的基础上实现高可用的。")]),s._v(" "),a("h3",{attrs:{id:"_1-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置"}},[s._v("#")]),s._v(" 1. 配置")]),s._v(" "),a("h4",{attrs:{id:"_1-1-建立复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-建立复制"}},[s._v("#")]),s._v(" 1.1 建立复制")]),s._v(" "),a("p",[s._v("参与复制的Redis实例划分为主节点（master）和从节点（slave）。默认情况下，Redis都是主节点。每个从节点只能有一个主节点，而主节点可以同时具有多个从节点。复制的数据流是单向的，只能由主节点复制到从节点。")]),s._v(" "),a("p",[s._v("配置复制的方式有以下三种：")]),s._v(" "),a("ul",[a("li",[s._v("在配置文件中加入slaveof{masterHost}{masterPort}随Redis启动生效。")]),s._v(" "),a("li",[s._v("在redis-server启动命令后加入--slaveof{masterHost}{masterPort}生效。")]),s._v(" "),a("li",[s._v("直接使用命令：slaveof{masterHost}{masterPort}生效。")])]),s._v(" "),a("p",[s._v("slaveof本身是异步命令，执行slaveof命令时，节点只保存在主节点信息后返回，后续复制流程在节点内部异步执行。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-断开复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-断开复制"}},[s._v("#")]),s._v(" 1.2 断开复制")]),s._v(" "),a("p",[s._v("slaveof命令不但可以建立复制，还可以在从节点执行slaveof no one来断开与主节点复制关系。")]),s._v(" "),a("p",[s._v("主要流程：")]),s._v(" "),a("ul",[a("li",[s._v("断开与主节点复制关系。")]),s._v(" "),a("li",[s._v("从节点晋升到主节点。")])]),s._v(" "),a("h4",{attrs:{id:"_1-3-切换主节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-切换主节点"}},[s._v("#")]),s._v(" 1.3 切换主节点")]),s._v(" "),a("p",[s._v("slaveof {newMasterIp}{newMasterPort}")]),s._v(" "),a("p",[s._v("切换主节点流程：")]),s._v(" "),a("ul",[a("li",[s._v("断开与旧主节点复制关系。")]),s._v(" "),a("li",[s._v("与新主节点建立复制关系。")]),s._v(" "),a("li",[s._v("删除从节点当前所有数据。")]),s._v(" "),a("li",[s._v("对新主节点进行复制操作。")])]),s._v(" "),a("h4",{attrs:{id:"_1-4-安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-安全性"}},[s._v("#")]),s._v(" 1.4 安全性")]),s._v(" "),a("p",[s._v("要配置从节点的masterauth参数与主节点密码保持一致，这样从节点才可以正确地连接到主节点并发起复制流程。")]),s._v(" "),a("h4",{attrs:{id:"_1-5-只读性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-只读性"}},[s._v("#")]),s._v(" 1.5 只读性")]),s._v(" "),a("p",[s._v("默认情况下，从节点使用slave-read-only=yes配置为只读模式。")]),s._v(" "),a("h4",{attrs:{id:"_1-6-传输延迟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-传输延迟"}},[s._v("#")]),s._v(" 1.6 传输延迟")]),s._v(" "),a("p",[s._v("Redis提供了repl-disable-tcp-nodelay参数用于控制是否关闭TCP_NODELAY，默认关闭。")]),s._v(" "),a("p",[s._v("关闭时延迟小，但网络带宽消耗大。（要求低延迟，同机房）")]),s._v(" "),a("p",[s._v("开启时延迟大，一般为40毫秒，节省了带宽。（考虑到高容灾性）")]),s._v(" "),a("h3",{attrs:{id:"_2-拓扑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-拓扑"}},[s._v("#")]),s._v(" 2. 拓扑")]),s._v(" "),a("p",[s._v("Redis的复制拓扑结构可以支持单层或多层复制关系，可以分为三种：一主一从、一主多从、树状主从结构。")]),s._v(" "),a("ul",[a("li",[s._v("一主一从：用于主节点出现宕机时从节点提供故障转移支持。可以在从节点上开启AOF，这样既保证数据安全性同时也避免了持久化对主节点的性能干扰。不过需要注意的是当主节点要重启，应该在从节点上执行slaveof no one断开与主节点的复制关系，避免从节点的数据被清空。")]),s._v(" "),a("li",[s._v("一主多从：使得应用端可以利用多个从节点实现读写分离。但对于写并发量较高的场景，多个从节点会导致主节点写命令的多次发送从而过度消耗网络带宽，同时也加重了主节点的负载影响服务稳定性。")]),s._v(" "),a("li",[s._v("树状主从结构：使得从节点不但可以复制主节点数据，同时可以作为其他从节点的主节点继续向下层复制。树状主从结构降低了主节点的压力。")])]),s._v(" "),a("h3",{attrs:{id:"_3-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-原理"}},[s._v("#")]),s._v(" 3. 原理")]),s._v(" "),a("h4",{attrs:{id:"_3-1-复制过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-复制过程"}},[s._v("#")]),s._v(" 3.1 复制过程")]),s._v(" "),a("p",[s._v("在从节点执行slaveof命令后，复制过程便开始运作。")]),s._v(" "),a("p",[s._v("复制过程大致分为6个过程：")]),s._v(" "),a("ul",[a("li",[s._v("保存主节点（master）信息。")]),s._v(" "),a("li",[s._v("主从建立socket连接。")]),s._v(" "),a("li",[s._v("发送ping命令。")]),s._v(" "),a("li",[s._v("权限验证。")]),s._v(" "),a("li",[s._v("同步数据集。redis在2.8版本以后采用新复制命令psync进行数据同步，原来的sync命令依然支持。")]),s._v(" "),a("li",[s._v("命令持续复制。")])]),s._v(" "),a("h4",{attrs:{id:"_3-2-数据同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数据同步"}},[s._v("#")]),s._v(" 3.2 数据同步")]),s._v(" "),a("p",[s._v("redis在2.8版本以后采用新复制命令psync进行数据同步，同步过程分为：全量复制和部分复制。")]),s._v(" "),a("ul",[a("li",[s._v("全量复制：一般用于初次复制场景，消耗很大。")]),s._v(" "),a("li",[s._v("部分复制：用于处理在主从复制中因网络闪断等原因造成的数据丢失场景，当从节点再次连上主节点后，如果条件允许，主节点会补发丢失数据给从节点。")])]),s._v(" "),a("p",[s._v("psync命令运行需要以下组件支持：")]),s._v(" "),a("ul",[a("li",[s._v("主从节点各自复制偏移量。")]),s._v(" "),a("li",[s._v("主节点复制积压缓冲区。")]),s._v(" "),a("li",[s._v("主节点运行id。")])]),s._v(" "),a("h5",{attrs:{id:"_3-2-1-复制偏移量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-复制偏移量"}},[s._v("#")]),s._v(" 3.2.1 复制偏移量")]),s._v(" "),a("p",[s._v("参与复制的主从节点都会维护自身复制偏移量。主节点在处理完写入命令后，会把命令的字节长度做累加记录，统计信息在info replication的master_repl_offset指标中。")]),s._v(" "),a("p",[s._v("从节点每秒钟上报自身的复制偏移量给主节点，因此主节点也会保存从节点的复制偏移量。")]),s._v(" "),a("h5",{attrs:{id:"_3-2-2-复制积压缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-复制积压缓冲区"}},[s._v("#")]),s._v(" 3.2.2 复制积压缓冲区")]),s._v(" "),a("p",[s._v("复制积压缓冲区是保存在主节点上的一个固定长度的队列，默认大小为1MB，当主节点有连接的从节点时被创建，这时主节点响应写命令时，不但会把命令发送给从节点，还会写入复制积压缓冲区。")]),s._v(" "),a("p",[s._v("缓冲区本质上是先进先出的定长队列，所以能实现保存最近已复制数据的功能，用于部分复制和复制命令丢失的数据补救。")]),s._v(" "),a("h5",{attrs:{id:"_3-2-3-主节点运行id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-主节点运行id"}},[s._v("#")]),s._v(" 3.2.3 主节点运行ID")]),s._v(" "),a("p",[s._v("每个Redis节点启动后都会动态分配一个40位的十六进制字符串作为运行ID。运行ID的主要作用是用来唯一识别Redis节点。")]),s._v(" "),a("h5",{attrs:{id:"_3-2-4-psync命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-psync命令"}},[s._v("#")]),s._v(" 3.2.4 psync命令")]),s._v(" "),a("p",[s._v("从节点使用psync命令完成部分复制和全量复制功能，命令格式：psync {runId}{offset}，参数含义如下：")]),s._v(" "),a("ul",[a("li",[s._v("runId：从节点所复制主节点的运行id。")]),s._v(" "),a("li",[s._v("offset：当前从节点已复制的数据偏移量。")])]),s._v(" "),a("h4",{attrs:{id:"_3-3-全量复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-全量复制"}},[s._v("#")]),s._v(" 3.3 全量复制")]),s._v(" "),a("p",[s._v("sync、psync-1")]),s._v(" "),a("h4",{attrs:{id:"_3-4-部分复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-部分复制"}},[s._v("#")]),s._v(" 3.4 部分复制")]),s._v(" "),a("p",[s._v("psync {rundId}{offset}")]),s._v(" "),a("h4",{attrs:{id:"_3-5-心跳"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-心跳"}},[s._v("#")]),s._v(" 3.5 心跳")]),s._v(" "),a("p",[s._v("主从心跳判断机制：")]),s._v(" "),a("ul",[a("li",[s._v("主从节点彼此都有心跳检测机制。")]),s._v(" "),a("li",[s._v("主节点默认每隔10秒对从节点发送ping命令，判断从节点的存活性和连接状态。可通过参数repl-ping-slave-period控制发送频率。")]),s._v(" "),a("li",[s._v("从节点在主线程中每隔1秒发送replconf ack{offset}命令，给主节点上报自身当前的复制偏移量。")])]),s._v(" "),a("h4",{attrs:{id:"_3-6-异步复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-异步复制"}},[s._v("#")]),s._v(" 3.6 异步复制")]),s._v(" "),a("p",[s._v("主节点不但负责数据读写，还负责把写命令同步给从节点。写命令的发送过程是异步完成的。")]),s._v(" "),a("h3",{attrs:{id:"_4-开发与运维中的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-开发与运维中的问题"}},[s._v("#")]),s._v(" 4. 开发与运维中的问题")]),s._v(" "),a("h4",{attrs:{id:"_4-1-读写分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-读写分离"}},[s._v("#")]),s._v(" 4.1 读写分离")]),s._v(" "),a("ul",[a("li",[s._v("数据延迟")]),s._v(" "),a("li",[s._v("读到过期数据：惰性删除、定时删除")]),s._v(" "),a("li",[s._v("从节点故障问题")])]),s._v(" "),a("h4",{attrs:{id:"_4-2-主从配置不一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-主从配置不一致"}},[s._v("#")]),s._v(" 4.2 主从配置不一致")]),s._v(" "),a("h4",{attrs:{id:"_4-3-规避全量复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-规避全量复制"}},[s._v("#")]),s._v(" 4.3 规避全量复制")]),s._v(" "),a("ul",[a("li",[s._v("第一次建立复制：无法避免。")]),s._v(" "),a("li",[s._v("节点运行ID不匹配：应该从架构上规避，比如提供故障转移功能。当主节点发生故障后，手动提升从节点为主节点或者采用支持自动故障转移的哨兵或集群方案。")]),s._v(" "),a("li",[s._v("复制积压缓冲区不足。")])]),s._v(" "),a("h4",{attrs:{id:"_4-4-规避复制风暴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-规避复制风暴"}},[s._v("#")]),s._v(" 4.4 规避复制风暴")]),s._v(" "),a("p",[s._v("复制风暴是指大量从节点对同一主节点或者对同一台机器的多个主节点短时间内发起全量复制的过程。")]),s._v(" "),a("p",[s._v("用树状主从结构、分布式部署可规避。")]),s._v(" "),a("h3",{attrs:{id:"_5-总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结-2"}},[s._v("#")]),s._v(" 5. 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis通过复制功能实现主节点的多个副本。从节点可灵活地通过slaveof命令建立或断开复制流程。")]),s._v(" "),a("li",[s._v("复制支持树状结构，从节点可以复制另一个从节点，实现一层层向下的复制流。复制分为全量复制和部分复制。")]),s._v(" "),a("li",[s._v("主从节点之间维护心跳和偏移量检查机制，保证主从节点通信正常和数据一致。")]),s._v(" "),a("li",[s._v("Redis为了保证高性能复制过程是异步的。因此从节点数据集会有延迟情况。")]),s._v(" "),a("li",[s._v("当使用从节点用于读写分离时会存在数据延迟、过期数据、从节点可用性等问题。")]),s._v(" "),a("li",[s._v("在运维过程中，主节点存在多个从节点或者一台机器上部署大量主节点的情况下，会有复制风暴的危险。")])]),s._v(" "),a("h2",{attrs:{id:"第七章-redis的噩梦：阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七章-redis的噩梦：阻塞"}},[s._v("#")]),s._v(" 第七章 Redis的噩梦：阻塞")]),s._v(" "),a("p",[s._v("内在原因：不合理地使用API或数据结构、CPU饱和、持久化阻塞等。")]),s._v(" "),a("p",[s._v("外在原因：CPU竞争、内存交换、网络问题等。")]),s._v(" "),a("h3",{attrs:{id:"_1-发现阻塞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-发现阻塞"}},[s._v("#")]),s._v(" 1. 发现阻塞")]),s._v(" "),a("p",[s._v("通过异常日志监控。")]),s._v(" "),a("h3",{attrs:{id:"_2-内在原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-内在原因"}},[s._v("#")]),s._v(" 2. 内在原因")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("API或数据结构使用不合理。")]),s._v(" "),a("ul",[a("li",[s._v("慢查询。")]),s._v(" "),a("li",[s._v("大对象")])])]),s._v(" "),a("li",[a("p",[s._v("CPU饱和。")]),s._v(" "),a("ul",[a("li",[s._v("ziplist压缩编码后，hash结构内存占用虽然会变小，但是操作会变慢且更消耗CPU。所以ziplist虽然是Redis用来平衡空间和效率的优化手段，但不可能过度使用。")])])]),s._v(" "),a("li",[a("p",[s._v("持久化阻塞")]),s._v(" "),a("ul",[a("li",[s._v("持久化引起主线程阻塞的操作主要有：fork阻塞、AOF刷盘阻塞、HugePage写操作阻塞。")]),s._v(" "),a("li",[s._v("fork阻塞：fork操作发生在RDB和AOF重写时。")]),s._v(" "),a("li",[s._v("AOF刷盘阻塞：文件刷盘的方式一般采用每秒一次，后台线程每秒对AOF文件做fsync操作。")]),s._v(" "),a("li",[s._v("HugePage写操作阻塞：子进程在执行重写期间利用Linux写时复制技术降低内存开销，因此只有写操作时Redis才复制要修改的内存页。")])])])]),s._v(" "),a("h3",{attrs:{id:"_3-外在原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-外在原因"}},[s._v("#")]),s._v(" 3. 外在原因")]),s._v(" "),a("p",[s._v("CPU竞争、内存交换、网络问题")]),s._v(" "),a("ul",[a("li",[s._v("CPU竞争\n"),a("ul",[a("li",[s._v("进程竞争")]),s._v(" "),a("li",[s._v("绑定CPU")])])]),s._v(" "),a("li",[s._v("内存交换")]),s._v(" "),a("li",[s._v("网络问题\n"),a("ul",[a("li",[s._v("连接拒绝\n"),a("ul",[a("li",[s._v("网络闪断")]),s._v(" "),a("li",[s._v("Redis连接拒绝：默认10000")]),s._v(" "),a("li",[s._v("连接溢出")])])]),s._v(" "),a("li",[s._v("网络延迟")]),s._v(" "),a("li",[s._v("网卡软中断")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结-2"}},[s._v("#")]),s._v(" 4. 总结")]),s._v(" "),a("ul",[a("li",[s._v("客户端最先感知阻塞等Redis超时行为，加入日志监控报警工具可快速定位阻塞问题，同时需要对Redis进程和机器做全面监控。")]),s._v(" "),a("li",[s._v("阻塞的内在原因：确认主线程是否存在阻塞，检查慢查询等信息，发现不合理使用API或数据结构的情况，如keys、sort、hgetall等。关注CPU使用率防止单核跑满。当硬盘IO资源紧张时，AOF追加也会阻塞主线程。")]),s._v(" "),a("li",[s._v("阻塞的外在原因：从CPU竞争、内存交换、网络问题等方面入手排查是否因为系统层面问题引起阻塞。")])]),s._v(" "),a("h2",{attrs:{id:"第八章-理解内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八章-理解内存"}},[s._v("#")]),s._v(" 第八章 理解内存")]),s._v(" "),a("h3",{attrs:{id:"_1-内存消耗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存消耗"}},[s._v("#")]),s._v(" 1. 内存消耗")]),s._v(" "),a("p",[s._v("内存消耗可以分为进程自身消耗和子进程消耗。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-内存使用统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-内存使用统计"}},[s._v("#")]),s._v(" 1.1 内存使用统计")]),s._v(" "),a("h4",{attrs:{id:"_1-2-内存消耗划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-内存消耗划分"}},[s._v("#")]),s._v(" 1.2 内存消耗划分")]),s._v(" "),a("p",[s._v("Redis进程内消耗主要包括：自身内存+对象内存+缓冲内存+内存碎片。")]),s._v(" "),a("ul",[a("li",[s._v("自身内存：消耗很少，可忽略不计。")]),s._v(" "),a("li",[s._v("对象内存：是Redis内存占用最大的一块。")]),s._v(" "),a("li",[s._v("缓冲内存。\n"),a("ul",[a("li",[s._v("客户端缓冲。")]),s._v(" "),a("li",[s._v("复制积压缓冲区。")]),s._v(" "),a("li",[s._v("AOF缓冲区。")])])]),s._v(" "),a("li",[s._v("内存碎片。")])]),s._v(" "),a("h4",{attrs:{id:"_1-3-子进程内存消耗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-子进程内存消耗"}},[s._v("#")]),s._v(" 1.3 子进程内存消耗")]),s._v(" "),a("p",[s._v("fork产生的子进程。")]),s._v(" "),a("p",[s._v("当前系统如果支持并开启THP，copy-on-write期间内存过度消耗。")]),s._v(" "),a("h3",{attrs:{id:"_2-内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存管理"}},[s._v("#")]),s._v(" 2. 内存管理")]),s._v(" "),a("p",[s._v("Redis主要通过控制内存上限和回收策略实现内存管理。")]),s._v(" "),a("ul",[a("li",[s._v("设置内存上限：maxmemory。")]),s._v(" "),a("li",[s._v("动态调整内存上限：config set maxmemory")]),s._v(" "),a("li",[s._v("内存回收策略：\n"),a("ul",[a("li",[s._v("删除过期键对象：\n"),a("ul",[a("li",[s._v("惰性删除")]),s._v(" "),a("li",[s._v("定时任务删除")])])]),s._v(" "),a("li",[s._v("内存溢出控制策略：\n"),a("ul",[a("li",[s._v("noeviction：默认策略，不会删除任何数据，拒绝所有写入操作并返回客户端错误信息，只响应读操作。")]),s._v(" "),a("li",[s._v("volatile-lru：根据LRU算法删除设置了超时属性（expire）的键。")]),s._v(" "),a("li",[s._v("allkeys-lru：根据LRU算法删除键，不管数据有没有设置超时属性，直到腾出足够空间为止。")]),s._v(" "),a("li",[s._v("allkeys-random：随机删除所有键，直到腾出足够空间。")]),s._v(" "),a("li",[s._v("volatile-random：随机删除过期键，直到腾出足够空间。")]),s._v(" "),a("li",[s._v("volatile-ttl：根据键值对象的ttl属性，删除最近将要过期数据，如果没有，回退到noeviction策略。")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_3-内存优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-内存优化"}},[s._v("#")]),s._v(" 3. 内存优化")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("缩减键值对象：比如键名短一点。在内存紧张的情况下，可以使用通用压缩算法压缩json、xml后再存入Redis，从而降低内存占用。推荐使用Google的Snappy压缩工具，效率高于GZIP。")])]),s._v(" "),a("li",[a("p",[s._v("共享对象池：共享对象池是指Redis内部维护[0-9999]的整数对象池，用于节约内存。整数对象池在Redis中通过变量REDIS_SHARED_INTEGERS定义，不能通过配置修改。")])]),s._v(" "),a("li",[a("p",[s._v("字符串优化：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("字符串结构：内部简单动态字符串（SDS）。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SDS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//已用字节长度")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" free"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未用字节长度")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//字节数组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("O(1)时间复杂度获取。")])]),s._v(" "),a("li",[a("p",[s._v("预分配机制，尽量减少字符串频繁修改操作如append、setrange，改为直接使用set修改字符串，降低预分配带来的内存浪费和内存碎片化。")])]),s._v(" "),a("li",[a("p",[s._v("字符串重构：指不一定把每份数据作为字符串整体存储，像json这样的数据可以使用hash结构。")])])])]),s._v(" "),a("li",[a("p",[s._v("编码优化：type和encoding对应关系表")]),s._v(" "),a("ul",[a("li",[s._v("string：raw（动态字符串编码）、embstr（优化内存分配的字符串编码）、int（整数编码）")]),s._v(" "),a("li",[s._v("hash：hashtable（散列表编码）、ziplist（压缩列表编码）")]),s._v(" "),a("li",[s._v("list：linkedlist（双向链表编码）、ziplist（压缩列表编码）、quicklist（3.2版本新的列表编码）")]),s._v(" "),a("li",[s._v("set：hashtable（散列表编码）、intset（整数集合编码）")]),s._v(" "),a("li",[s._v("zset：skiplist（跳跃表编码）、ziplist（压缩列表编码）")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C12272%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210117171721862.png",alt:"image-20210117171721862"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C12272%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210117171730112.png",alt:"image-20210117171730112"}})]),s._v(" "),a("ul",[a("li",[s._v("控制键的数量。")])]),s._v(" "),a("h3",{attrs:{id:"_4-总结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结-3"}},[s._v("#")]),s._v(" 4. 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis实际内存消耗主要包括：键值对象、缓冲区内存、内存碎片。")]),s._v(" "),a("li",[s._v("通过调整maxmemory控制Redis最大可用内存，当内存使用超出时，根据maxmemory-policy控制内存回收策略。")]),s._v(" "),a("li",[s._v("内存是相对宝贵的资源，通过合理的优化可以有效地降低内存的使用量，内存优化的思路包括：\n"),a("ul",[a("li",[s._v("精简键值对大小，键值字面量精简，使用高效二进制序列化工具。")]),s._v(" "),a("li",[s._v("使用对象共享池优化小整数对象。")]),s._v(" "),a("li",[s._v("数据优先使用整数，比字符串类型更节省空间。")]),s._v(" "),a("li",[s._v("优化字符串使用，避免预分配造成的内存浪费。")]),s._v(" "),a("li",[s._v("使用ziplist压缩编码优化hash、list等结构，注重效率和空间的平衡。")]),s._v(" "),a("li",[s._v("使用intset编码优化整数集合。")]),s._v(" "),a("li",[s._v("使用ziplist编码的hash结构降低小对象链规模。")])])])]),s._v(" "),a("h2",{attrs:{id:"第九章-哨兵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第九章-哨兵"}},[s._v("#")]),s._v(" 第九章 哨兵")]),s._v(" "),a("p",[s._v("Redis的主从复制模式下，一旦主节点由于故障不能提供服务，需要人工将从节点提升为主节点，同时还要通知应用方更新主节点地址，对于很多应用场景这种故障处理的方式是无法接受的。")]),s._v(" "),a("p",[s._v("可喜的是Redis从2.8开始正式提供了Redis Sentinel（哨兵）架构来解决这个问题。")]),s._v(" "),a("h3",{attrs:{id:"_1-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[s._v("#")]),s._v(" 1. 基本概念")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("名词")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("逻辑结构")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("物理结构")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("主节点（master）")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis主服务/数据库")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("一个独立的Redis进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("从节点（slave）")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis从服务/数据库")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("一个独立的Redis进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis数据节点")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("主节点和从节点")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("主节点和从节点的进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("Sentinel节点")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("监控Redis数据节点")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("一个独立的Sentinel进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("Sentinel节点集合")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("若干Sentinel节点的抽象组合")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("若干Sentinel节点进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis Sentinel")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis高可用实现方案")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Sentinel节点集合和Redis数据节点进程")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("应用方")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("泛指一个或多个客户端")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("一个或者多个客户端进程或者线程")])])])]),s._v(" "),a("p",[s._v("Redis Sentinel是Redis的高可用实现方案。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-主从复制的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-主从复制的问题"}},[s._v("#")]),s._v(" 1.1 主从复制的问题")]),s._v(" "),a("ul",[a("li",[s._v("一旦主节点由于故障不能提供服务，需要人工将从节点提升为主节点，同时还要通知应用方更新主节点地址，整个过程都需要人工干预。")]),s._v(" "),a("li",[s._v("主节点的写能力受到单机的限制。")]),s._v(" "),a("li",[s._v("主节点的存储能力受到单机的限制。")])]),s._v(" "),a("p",[s._v("第一个是高可用问题，后面两个是分布式问题。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-高可用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-高可用"}},[s._v("#")]),s._v(" 1.2 高可用")]),s._v(" "),a("h4",{attrs:{id:"_1-3-redis-sentinel的高可用性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-redis-sentinel的高可用性"}},[s._v("#")]),s._v(" 1.3 Redis Sentinel的高可用性")]),s._v(" "),a("p",[s._v("当主节点出现故障时，Redis Sentinel能自动完成故障发现和故障转移，并通知应用方，从而实现真正的高可用。")]),s._v(" "),a("p",[s._v("Redis Sentinel建议使用2.8以上版本。")]),s._v(" "),a("p",[s._v("Redis Sentinel是一个分布式架构，其中包含若干个Sentinel节点和Redis数据节点，每个Sentinel节点会对数据节点和其余Sentinel节点进行监控，当它发现节点不可达时，会对节点做下线标识。如果被标识的是主节点，它还会和其他Sentinel节点进行“协商”，会选举出一个Sentinel节点来完成自动故障转移的工作，同时会将这个变化实时通知给Redis应用方。整个过程完全是自动的，不需要人工来介入。")]),s._v(" "),a("p",[s._v("Redis Sentinel与Redis主从复制模式只是多了若干Sentinel节点，所以Redis Sentinel并没有针对Redis节点做了特殊处理。")]),s._v(" "),a("p",[s._v("从逻辑结构上看，Sentinel节点集合会定期对所有节点进行监控，特别是对主节点的故障实现自动转移。")]),s._v(" "),a("p",[s._v("Redis Sentinel具有以下几个功能：")]),s._v(" "),a("ul",[a("li",[s._v("监控：Sentinel节点会定期检测Redis数据节点，其余Sentinel节点是否可达。")]),s._v(" "),a("li",[s._v("通知：Sentinel节点会将故障转移的结果通知给应用方。")]),s._v(" "),a("li",[s._v("主节点故障转移：实现从节点晋升为主节点并维护后续正确的主从关系。")]),s._v(" "),a("li",[s._v("配置提供者：在Redis Sentinel结构中，客户端在初始化的时候连接的是Sentinel节点集合，从中获取主节点信息。")]),s._v(" "),a("li",[s._v("Sentinel节点本身就是独立的Redis节点，只不过它们不存储数据，只支持部分命令。")])]),s._v(" "),a("h3",{attrs:{id:"_2-安装和部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装和部署"}},[s._v("#")]),s._v(" 2. 安装和部署")]),s._v(" "),a("h4",{attrs:{id:"_2-1-部署拓扑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-部署拓扑结构"}},[s._v("#")]),s._v(" 2.1 部署拓扑结构")]),s._v(" "),a("p",[s._v("以1个主节点、2个从节点和3个Sentinel节点组成一个Redis Sentinel。")]),s._v(" "),a("h4",{attrs:{id:"_2-2-部署节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-部署节点"}},[s._v("#")]),s._v(" 2.2 部署节点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("主节点配置：redis-6379.conf")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("port 6379\ndaemonize yes\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6379.log"')]),s._v("\ndbfilename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dump-6379.rdb"')]),s._v("\ndir "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis/data/"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("从节点配置1：redis-6380.conf，加了slaveof 127.0.0.1 6379")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("port 6380\ndaemonize yes\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6380.log"')]),s._v("\ndbfilename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dump-6380.rdb"')]),s._v("\ndir "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis/data/"')]),s._v("\nslaveof 127.0.0.1 6379\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("从节点配置2：redis-6381.conf，加了slaveof 127.0.0.1 6379")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("port 6381\ndaemonize yes\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6381.log"')]),s._v("\ndbfilename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dump-6381.rdb"')]),s._v("\ndir "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis/data/"')]),s._v("\nslaveof 127.0.0.1 6379\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("确认主从关系：info replication")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> info replication\n# Replication\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("master\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("connected_slaves")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("2\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("slave0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ip=127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("port=6380"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("state=online"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("offset=56"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("lag=1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("slave1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ip=127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("port=6381"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("state=online"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("offset=56"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("lag=1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_replid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("05ebb9bbc0c03056b001591108181ee12d0199f2\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_replid2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0000000000000000000000000000000000000000\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_repl_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("56\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("second_repl_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("-1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1048576\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_first_byte_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_histlen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("56\n\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6380> info replication\n# Replication\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("slave\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("127.0.0.1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_link_status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("up\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_last_io_seconds_ago")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("9\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_sync_in_progress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("slave_repl_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("98\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("slave_priority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("100\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("slave_read_only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("connected_slaves")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_replid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("05ebb9bbc0c03056b001591108181ee12d0199f2\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_replid2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0000000000000000000000000000000000000000\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master_repl_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("98\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("second_repl_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("-1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1048576\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_first_byte_offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("repl_backlog_histlen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("98\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("部署sentinel节点：redis-sentinel-26379.conf")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("port 26379\ndaemonize yes\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"26379.log"')]),s._v("\ndir "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis/data"')]),s._v("\nsentinel monitor mymaster 127.0.0.1 6378 2\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster 1\nsentinel failover-timeout mymaster 180000\nsentinel auth-pass mymaster hqjmz5201314\n\n\n# sentinel monitor mymaster 127.0.0.1 6378 <quorum>2代表判断主节点失败至少需要2个Sentinel节点同意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("一般将其设置为Sentinel节点的一半加1\n# mymaster是主节点的别名\n# 每个sentinel节点都要通过定期发送ping命令来判断Redis数据节点和其余Sentinel节点是否可达，如果超过了\n# sentinel down-after-milliseconds <times> 配置的时间且没有有效的回复，则判定节点不可达。<times>就是超时时间，单位为毫秒。\n# sentinel parallel-syncs <master-name> <nums> ：当Sentinel节点集合对主节点故障判定达成一致时，sentinel领导者节点会做故障转移操作，选出\n# 新的主节点，原来的从节点会向新的主节点发起复制操作，parallel-syncs就是用来限制在一次故障转移之后，每次向新的主节点发起复制操作的从节点个数。\n# sentinel failover-timeout <master-name> <times> \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("启动sentinel节点：")]),s._v(" "),a("ul",[a("li",[s._v("redis-sentinel redis-sentinel-26379.conf")]),s._v(" "),a("li",[s._v("redis-server redis-sentinel-26379.conf --sentinel 两种方法本质上是一样的")])])]),s._v(" "),a("li",[a("p",[s._v("info sentinel：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ redis]# redis-cli -h 127.0.0.1 -p 26379\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("26379> info sentinel\n# Sentinel\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("sentinel_masters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("sentinel_tilt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("sentinel_running_scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("sentinel_scripts_queue_length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("sentinel_simulate_failure_flags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("master0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("name=mymaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("status=ok"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("address=127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("slaves=2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sentinels=3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("failover-timeout通常被解释成故障转移超时时间，但实际上它作用于故障转移的各个阶段：")]),s._v(" "),a("ul",[a("li",[s._v("a.选出合适从节点。")]),s._v(" "),a("li",[s._v("b.晋升选出的从节点为主节点。")]),s._v(" "),a("li",[s._v("c.命令其余从节点复制新的主节点。")]),s._v(" "),a("li",[s._v("d.等待原主节点恢复后命令它去复制新的主节点。")])])]),s._v(" "),a("li",[a("p",[s._v("调整配置：sentinel set ")]),a("param"),s._v(" "),a("value",[a("p"),s._v(" "),a("ul",[a("li",[s._v("sentinel set mymaster quorum 2")]),s._v(" "),a("li",[s._v("有几点需要注意是：\n"),a("ul",[a("li",[s._v("sentinel set 命令只对当前sentinel节点有效。")]),s._v(" "),a("li",[s._v("sentinel set 命令如果执行成功会立即刷新配置文件，这点和Redis普通数据节点设置配置需要执行config rewrite刷新到配置文件不同。")]),s._v(" "),a("li",[s._v("建议所有sentinel节点的配置尽可能一致。")])])])])])],1)]),s._v(" "),a("h4",{attrs:{id:"_2-3-部署技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-部署技巧"}},[s._v("#")]),s._v(" 2.3 部署技巧")]),s._v(" "),a("ul",[a("li",[s._v("sentinel节点不应该部署在一台物理“机器”上。怕物理机器有什么故障。")]),s._v(" "),a("li",[s._v("部署至少三个且奇数个的sentinel节点。因为领导者选举需要至少一半加1个节点，奇数个节点可以在满足该条件的基础上节省一个节点。")]),s._v(" "),a("li",[s._v("只有一套sentinel，还是每个主节点配置一套sentinel？sentinel节点集合可以只监控一个主节点，也可以监控多个主节点。")])]),s._v(" "),a("h3",{attrs:{id:"_3-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-api"}},[s._v("#")]),s._v(" 3. API")]),s._v(" "),a("p",[s._v("sentinel节点是一个特殊的redis节点，有自己专属的API。")]),s._v(" "),a("ul",[a("li",[s._v("sentinel masters：展示所有被监控的主节点状态以及相关的统计信息。")]),s._v(" "),a("li",[s._v("sentinel master"),a("master",{attrs:{name:""}},[s._v(" ：展示指定的主节点的信息。")])],1),s._v(" "),a("li",[s._v("sentinel slaves "),a("master",{attrs:{name:""}},[s._v("：展示指定的主节点的从节点的信息")])],1),s._v(" "),a("li",[s._v("sentinel sentinels"),a("master",{attrs:{name:""}},[s._v("：展示指定的主节点的sentinel节点集合信息")])],1)]),s._v(" "),a("h3",{attrs:{id:"_4-客户端连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-客户端连接"}},[s._v("#")]),s._v(" 4. 客户端连接")]),s._v(" "),a("p",[s._v("Jedis针对Redis Sentinel给出了一个JedisSentinelPool。")]),s._v(" "),a("h3",{attrs:{id:"_5-实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-实现原理"}},[s._v("#")]),s._v(" 5. 实现原理")]),s._v(" "),a("ul",[a("li",[s._v("三个定时监控任务：\n"),a("ul",[a("li",[s._v("每隔10秒，每个Sentinel节点会向主节点和从节点发送info命令获取最新的拓扑结构。")]),s._v(" "),a("li",[s._v("每隔2秒，每个Sentinel节点会向Redis数据节点的_sentinel_: hello频道上发送该Sentinel节点对于主节点的判断以及当前Sentinel节点的信息，同时每个Sentinel节点也会订阅该频道，来了解其他Sentinel节点以及它们对主节点的判断。")]),s._v(" "),a("li",[s._v("每隔1秒，每个Sentinel节点会向主节点、从节点、其余Sentinel节点发送一条ping命令做一次心跳检测，来确认这些节点是否可达。")])])]),s._v(" "),a("li",[s._v("主观下线和客户下线：\n"),a("ul",[a("li",[s._v("主观下线：每个Sentinel节点会每隔1秒对主节点、从节点、其他Sentinel节点发送ping命令做心跳检测，当这些节点超过down-after-milliseconds没有进行有效回复，Sentinel节点就会对该节点做失败判定，这个行为叫做主观下线。")]),s._v(" "),a("li",[s._v("客观下线：当Sentinel主观下线的节点是主节点时，该Sentinel节点会通过sentinel is-master-down-by-addr命令向其他Sentinel节点询问对主节点的判断，当超过"),a("quorum",[s._v("个数，Sentinel节点会认为主节点确实有问题，这时该Sentinel节点会做出客观下线的决定，这样客观下线的含义是比较明显了，也就是大部分Sentinel节点都对主节点的下线做了同意的判定，那么这个判定就是客观的。")])],1)])]),s._v(" "),a("li",[s._v("领导者Sentinel节点选举：\n"),a("ul",[a("li",[s._v("实际上故障转移的工作只需要一个Sentinel节点来完成即可，所以Sentinel节点之间会做一个领导者选举的工作，选出一个Sentinel节点作为领导者进行故障转移的工作。Redis使用了Raft算法实现领导者选举。")])])]),s._v(" "),a("li",[s._v("故障转移：\n"),a("ul",[a("li",[s._v("领导者选举出的Sentinel节点负责故障转移，具体步骤如下：\n"),a("ul",[a("li",[s._v("在从节点列表中选出一个节点作为新的主节点：选择在线的、slave-priority（从节点优先级）最高的从节点列表、复制偏移量最大的从节点（复制的最完整）、runId最小的从节点。")]),s._v(" "),a("li",[s._v("Sentinel领导者节点会对第一步选出来的从节点执行slave of no one命令让其成为主节点。")]),s._v(" "),a("li",[s._v("Sentinel领导者节点会向剩余的从节点发送命令，让他们成新主节点的从节点，复制规则和parallel-syncs参数有关。")]),s._v(" "),a("li",[s._v("Sentinel节点集合会将原来的主节点更新为从节点，并保持着对其关注，当其恢复后命令它去复制新的主节点。")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_6-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-总结"}},[s._v("#")]),s._v(" 6. 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis Sentinel是Redis的高可用实现方案：故障发现、故障自动转移、配置中心、客户端通知。")]),s._v(" "),a("li",[s._v("Redis Sentinel从Redis2.8版本开始才正式生产可用，之前版本生产不可用。")]),s._v(" "),a("li",[s._v("尽可能在不同物理机上部署Redis Sentinel所有节点。")]),s._v(" "),a("li",[s._v("Redis Sentinel中的Sentinel节点个数应该大于等于3且最好为奇数。")]),s._v(" "),a("li",[s._v("Redis Sentinel中的数据节点与普通数据节点没有区别。")]),s._v(" "),a("li",[s._v("客户端初始化时连接的是Sentinel节点集合，不再是具体的Redis节点，但Sentinel只是配置中心不是代理。")]),s._v(" "),a("li",[s._v("Redis Sentinel通过三个定时任务实现了Sentinel节点对于主节点、从节点、其余Sentinel节点的监控。")]),s._v(" "),a("li",[s._v("Redis Sentinel在对节点做失败判定时分为主观下线和客观下线。")]),s._v(" "),a("li",[s._v("Redis Sentinel实现读写分离高可用可以依赖Sentinel节点的消息通知，获取Redis数据节点的状态变化。")])]),s._v(" "),a("h2",{attrs:{id:"第十章-集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十章-集群"}},[s._v("#")]),s._v(" 第十章 集群")]),s._v(" "),a("p",[s._v("Redis Cluster是Redis的分布式解决方案，在3.0版本正式推出，有效得解决了Redis分布式方面的需求。")]),s._v(" "),a("p",[s._v("以前Redis分布式方案一般是两种：客户端分区方案，代理方案。")]),s._v(" "),a("h3",{attrs:{id:"_1-数据分布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据分布"}},[s._v("#")]),s._v(" 1. 数据分布")]),s._v(" "),a("h4",{attrs:{id:"_1-1-数据分布理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据分布理论"}},[s._v("#")]),s._v(" 1.1 数据分布理论")]),s._v(" "),a("p",[s._v("常见的分区规则：哈希分区、顺序分区。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("分区方式")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("特点")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("代表产品")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("哈希分区")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("离散度好，数据分布业务无关，无法顺序访问")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Redis Cluster、Cassandra")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("顺序分区")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("离散度易倾斜、数据分布业务相关、可顺序访问")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Bigtable、HBase、Hypertable")])])])]),s._v(" "),a("p",[s._v("常见的哈希分区规则有几种：")]),s._v(" "),a("ul",[a("li",[s._v("节点取余分区：使用特定的数据，如Redis的键或用户ID，再根据节点数量N使用公式：hash(key)%N计算出哈希值，用来决定数据映射到哪一个节点上。这种方案存在一个问题：当节点数量变化时，如扩容或收缩节点，数据节点映射关系需要重新计算，会导致数据的重新迁移。这种方式的突出优点是简单性，常用语数据库的分库分表规则，一般采用预分区的方式，提前根据数据量规划好分区数，比如划分为512或1024张表，保证可支撑未来一段时间的数据量，再根据负载情况将表迁移到其他数据库中。扩容时通常采用翻倍扩容，避免数据映射全部被打乱导致全量迁移的情况。")]),s._v(" "),a("li",[s._v("一致性哈希分区：一致性哈希分区（Distributed Hash Table）实现思路是为系统中每个节点分配一个token，范围一般在0~2^32，这些token构成一个哈希环。数据读写执行节点查找操作时，先根据key计算hash值，然后顺时针找到第一个大于等于该哈希值的token节点。这种方式相比节点取余最大的好处在于加入和删除节点只影响哈希环中相邻的节点，对其他节点无影响，但一致性哈希分区存在几个问题：\n"),a("ul",[a("li",[s._v("加减节点会造成哈希环中部分数据无法命中。")]),s._v(" "),a("li",[s._v("当使用少量节点时，节点变化将大范围影响哈希环中数据映射。")]),s._v(" "),a("li",[s._v("普通的一致性哈希分区在增减节点时需要增加一倍或减去一半节点才能保证数据和负载的均衡。")])])]),s._v(" "),a("li",[s._v("虚拟槽分区：正因为一致性哈希分区的缺点，一些分布式系统采用虚拟槽对一致性哈希进行改进，比如Dynamo系统。\n"),a("ul",[a("li",[s._v("虚拟槽分区巧妙地使用了哈希空间，使用分散度良好的哈希函数把所有数据映射到一个固定范围的整数集合中，整数定义为槽（slot）。这个范围一般远远大于节点数，比如Redis Cluster槽范围是0~16383，槽是集群内数据管理和迁移的基本单位。采用大范围槽的主要目的是为了方便数据拆分和集群扩展。")]),s._v(" "),a("li",[s._v("当前集群有5个节点，每个节点平均大约负责3276个槽。由于采用高质量的哈希算法，每个槽所映射的数据通常比较均匀，将数据平均划分到5个节点进行数据分区。Redis Cluster就是采用虚拟槽分区。")])])])]),s._v(" "),a("h4",{attrs:{id:"_1-2-redis数据分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-redis数据分区"}},[s._v("#")]),s._v(" 1.2 Redis数据分区")]),s._v(" "),a("p",[s._v("Redis Cluster采用虚拟槽分区，所有的键根据哈希函数映射到0~16383整数槽内，计算公式：slot=CRC16(key)&16383。每一个节点负责维护一部分槽以及槽所映射的键值数据。")]),s._v(" "),a("p",[s._v("Redis虚拟槽分区的特点：")]),s._v(" "),a("ul",[a("li",[s._v("解耦数据和节点之间的关系，简化了节点扩容和收缩难度。")]),s._v(" "),a("li",[s._v("节点自身维护槽的映射关系，不需要客户端或者代理服务维护维护槽分区元数据。")]),s._v(" "),a("li",[s._v("支持节点、槽、键之间的映射查询，用于数据路由、在线伸缩等场景。")])]),s._v(" "),a("p",[s._v("数据分区是分布式存储的核心，理解和灵活运用数据分区规则对于掌握Redis Cluster非常有帮助。")]),s._v(" "),a("h4",{attrs:{id:"_1-3-集群功能限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-集群功能限制"}},[s._v("#")]),s._v(" 1.3 集群功能限制")]),s._v(" "),a("p",[s._v("Redis集群相对单机在功能上存在一些限制。")]),s._v(" "),a("ul",[a("li",[s._v("key批量操作支持有限，如mset、mget，目前只支持具有相同slot值的key执行批量操作。")]),s._v(" "),a("li",[s._v("key事务操作支持有限，同理只支持多key在同一节点上的事务操作，当多个key分布在不同的节点上时无法使用事务功能。")]),s._v(" "),a("li",[s._v("key作为数据分区的最小粒度，因此不能将一个大的键值对象如hash、list等映射到不同的节点。")]),s._v(" "),a("li",[s._v("集群规模下只能使用一个数据空间，即db0。")]),s._v(" "),a("li",[s._v("复制结构只支持一层，从节点只能复制主节点，不支持嵌套树状复制结构。")])]),s._v(" "),a("h3",{attrs:{id:"_2-搭建集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-搭建集群"}},[s._v("#")]),s._v(" 2. 搭建集群")]),s._v(" "),a("p",[s._v("搭建集群需要三个步骤：准备节点，节点握手，分配槽。")]),s._v(" "),a("h4",{attrs:{id:"_2-1-准备节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-准备节点"}},[s._v("#")]),s._v(" 2.1 准备节点")]),s._v(" "),a("p",[s._v("Redis集群一般由多个节点组成，节点数量至少为6个才能保证组成完整高可用的集群。每个节点需要开启配置cluster-enabled yes，让Redis运行在集群模式下。建议为集群内所有节点统一目录，一般划分三个目录：conf、data、log，分布存放配置、数据和日志相关文件。把6个节点配置统一放在conf目录下，集群相关配置如下：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ conf]# cat redis-6378.conf \nport 6378\ndaemonize yes\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis-cluster/log/6378.log"')]),s._v("\ndbfilename "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dump-6378.rdb"')]),s._v("\ndir "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/redis-cluster/data/"')]),s._v("\nrequirepass hqjmz5201314\ncluster-enabled yes\ncluster-node-timeout 15000\ncluster-config-file "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodes-6378.conf"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("节点6378首次启动后生成集群配置如下：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ data]# cat nodes-6378.conf \n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("a228b36017918bd962f26764f39f9a46df3e7c36")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0@0 myself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("master - 0 0 0 connected\nvars currentEpoch 0 lastVoteEpoch 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("节点ID：a228b36017918bd962f26764f39f9a46df3e7c36，节点ID，40位16进制字符串，用于唯一标识集群内一个节点。与运行id不同，运行id每次重启都会变，而节点id只在初始化时创建一次。")])]),s._v(" "),a("li",[a("p",[s._v("cluster nodes：获取集群节点状态。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-节点握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-节点握手"}},[s._v("#")]),s._v(" 2.2 节点握手")]),s._v(" "),a("p",[s._v("节点握手是指一批运行在集群模式下的节点通过Gossip协议彼此通信，达到感知对方的过程。节点握手是集群彼此通信的第一步，由客户端发起命令：cluster meet{ip} {port}。")]),s._v(" "),a("p",[s._v("cluster meet 命令是一个异步命令，执行之后立刻返回。内部发起与目标节点进行握手通信。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6380\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6381\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6381\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6382\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6383\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster meet 127.0.0.1 6384\nOK\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster nodes\ncc85b0b121020f767fae7b46bc23b79774a54af2 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6381@16381 master - 0 1611297128000 4 connected\nfc6335f4f0b6bfca8885cd8aefca9d592b9409df 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6384@16384 master - 0 1611297127454 0 connected\nefe9ddb7e7239dd84dd10e3ed7b5def9636221f0 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6383@16383 master - 0 1611297129558 5 connected\na54cb0e357f67905e62ad8680495c1c0e7e22619 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6380@16380 master - 0 1611297128557 2 connected\n3bb01c17b589bf454e4056e401659f64deaf6649 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6382@16382 master - 0 1611297128000 3 connected\na228b36017918bd962f26764f39f9a46df3e7c36 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378@16378 myself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("master - 0 1611297127000 1 connected\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("ping、pong、ping、pong。")]),s._v(" "),a("p",[s._v("只需要在集群内任意节点上执行cluster meet 命令加入新节点，握手状态会通过消息在集群内传播，这样其他节点会自动发现新节点并发起握手流程。")]),s._v(" "),a("p",[s._v("节点建立握手之后集群还不能正常工作，这时集群处于下线状态，所有的数据读写都被禁止。")]),s._v(" "),a("p",[s._v("cluster info 命令可以获取集群当前状态。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster info\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("fail\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_assigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_pfail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_fail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_known_nodes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_current_epoch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_my_epoch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_ping_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("21\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_pong_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("29\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_meet_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("56\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_ping_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("29\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_pong_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("27\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("56\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("从输出内容可以看到，被分配的槽（cluster_slots_assgined）是0，由于目前所有的槽没有分配到节点，因此集群无法完成槽到节点的映射，只有当16384个槽全部分配给节点后，集群才进入在线状态。")]),s._v(" "),a("h4",{attrs:{id:"_2-3-分配槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-分配槽"}},[s._v("#")]),s._v(" 2.3 分配槽")]),s._v(" "),a("p",[s._v("Redis集群把所有的数据映射到16384个槽中，每个key会映射为一个固定的槽，只有当节点分配了槽，才能响应和这些槽关联的键命令。通过cluster addslots命令为节点分配槽，这里利用bash特性批量设置槽（slots）：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@iZwz9ioqjurm6uydyxxjqnZ")]),s._v(" redis-cluster]#  redis-cli -h 127.0.0.1 -p 6378 -a hqjmz5201314 cluster addslots")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("0..5461"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nOK\n[root"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@iZwz9ioqjurm6uydyxxjqnZ")]),s._v(" redis-cluster]#  redis-cli -h 127.0.0.1 -p 6380 -a hqjmz5201314 cluster addslots")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("5462..10922"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nOK\n[root"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@iZwz9ioqjurm6uydyxxjqnZ")]),s._v(" redis-cluster]#  redis-cli -h 127.0.0.1 -p 6381 -a hqjmz5201314 cluster addslots")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("10923..16383"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nOK\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("当前集群状态是OK，集群进入在线状态，所有的槽已经分配给节点：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster info\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ok\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_assigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("16384\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("16384\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_pfail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_slots_fail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("0\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_known_nodes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_current_epoch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_my_epoch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_ping_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1594\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_pong_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1586\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_meet_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_sent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3186\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_ping_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1586\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_pong_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1600\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cluster_stats_messages_received")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3186\n\n127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378> cluster nodes\ncc85b0b121020f767fae7b46bc23b79774a54af2 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6381@16381 master - 0 1611298779000 4 connected 10923-16383\nfc6335f4f0b6bfca8885cd8aefca9d592b9409df 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6384@16384 master - 0 1611298780000 0 connected\nefe9ddb7e7239dd84dd10e3ed7b5def9636221f0 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6383@16383 master - 0 1611298780000 5 connected\na54cb0e357f67905e62ad8680495c1c0e7e22619 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6380@16380 master - 0 1611298781500 2 connected 5462-10922\n3bb01c17b589bf454e4056e401659f64deaf6649 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6382@16382 master - 0 1611298780497 3 connected\na228b36017918bd962f26764f39f9a46df3e7c36 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6378@16378 myself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("master - 0 1611298781000 1 connected 0-5461\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("目前还有三个节点没有使用，作为一个完整的集群，每个负责处理槽的节点应该具有从节点，保证当它出现故障时可以自动进行故障转移。集群模式下，Redis节点角色分为主节点和从节点。首次启动的节点和被分配槽的节点都是主节点，从节点负责复制主节点槽信息和相关的数据。")]),s._v(" "),a("p",[s._v("使用cluster replicate {nodeId}命令让一个节点成为从节点。其中命令执行必须在对应的从节点上执行，nodeId是要复制主节点的节点ID。")]),s._v(" "),a("p",[s._v("Redis集群模式下的主从复制使用了之前介绍的Redis复制流程，依然支持全量和部分支持。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("[root@iZwz9ioqjurm6uydyxxjqnZ redis-cluster]# redis-cli -h 127.0.0.1 -p 6382 -a hqjmz5201314 cluster replicate a228b36017918bd962f26764f39f9a46df3e7c36\nOK\n[root@iZwz9ioqjurm6uydyxxjqnZ redis-cluster]# redis-cli -h 127.0.0.1 -p 6383 -a hqjmz5201314 cluster replicate a54cb0e357f67905e62ad8680495c1c0e7e22619\nOK\n[root@iZwz9ioqjurm6uydyxxjqnZ redis-cluster]# redis-cli -h 127.0.0.1 -p 6384 -a hqjmz5201314 cluster replicate cc85b0b121020f767fae7b46bc23b79774a54af2\nOK\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("目前为止，我们依照Redis协议手动建立了一个集群，它由6个节点构成，3个主节点负责处理槽和相关数据，3个从节点负责故障转移。")]),s._v(" "),a("p",[s._v("Redis官方提供了redis-trib.rb工具方便快速搭建集群。")]),s._v(" "),a("h4",{attrs:{id:"_2-4-用redis-trib-rb搭建集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-用redis-trib-rb搭建集群"}},[s._v("#")]),s._v(" 2.4 用redis-trib.rb搭建集群")]),s._v(" "),a("p",[s._v("redis-trib.rb是官方提供的Redis Cluster的管理工具，无需额外下载，默认位于源码包的src目录下，但因该工具是用ruby开发的，所以需要准备相关的依赖环境。")]),s._v(" "),a("p",[a("strong",[s._v("准备redis-trib.rb的运行环境")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("-- 下载ruby\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz\n\n-- 安装ruby\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvf ruby-2.5.1.tar.gz\n\n./configure -prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/ruby\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/ruby/\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" bin/ruby /usr/local/bin\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" bin/gem /usr/local/bin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("strong",[s._v("安装rubygem redis依赖")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://rubygems.org/downloads/redis-3.3.0.gem\n\ngem "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -l redis-3.3.0.gem\ngem list --check redis gem\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("安装redis-trib.rb")])]),s._v(" "),a("p",[s._v("sudo cp /{redis_home}/src/redis-trib.rb /user/local/bin")]),s._v(" "),a("p",[s._v("安装完ruby环境后，执行redis-trib.rb命令确认环境是否正确，输出如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("redis-trib.rb\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("redis-trib.rb提供了集群创建、检查、修复、均衡等命令行工具。")]),s._v(" "),a("p",[s._v("redis-trib create命令可快速搭建集群。")]),s._v(" "),a("p",[s._v("Redis5.X以后不推荐使用 redis-trib 命令创建集群")]),s._v(" "),a("p",[s._v("用redis-cli --cluster代替")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("redis-cli --cluster help\nCluster Manager "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("Commands")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  create         "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port1 ... "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("hostN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("portN   #创建集群\n                 --cluster-replicas <arg>      #从节点个数\n  check          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                     #检查集群\n                 --cluster-search-multiple-owners #检查是否有槽同时被分配给了多个节点\n  info           "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                     #查看集群状态\n  fix            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                     #修复集群\n                 --cluster-search-multiple-owners #修复槽的重复分配问题\n  reshard        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                     #指定集群的任意一节点进行迁移slot，重新分slots\n                 --cluster-from <arg>          #需要从哪些源节点上迁移slot，可从多个源节点完成迁移，以逗号隔开，传递的是节点的node id，还可以直接传递--from all，这样源节点就是集群的所有节点，不传递该参数的话，则会在迁移过程中提示用户输入\n                 --cluster-to <arg>            #slot需要迁移的目的节点的node id，目的节点只能填写一个，不传递该参数的话，则会在迁移过程中提示用户输入\n                 --cluster-slots <arg>         #需要迁移的slot数量，不传递该参数的话，则会在迁移过程中提示用户输入。\n                 --cluster-yes                 #指定迁移时的确认输入\n                 --cluster-timeout <arg>       #设置migrate命令的超时时间\n                 --cluster-pipeline <arg>      #定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10\n                 --cluster-replace             #是否直接replace到目标节点\n  rebalance      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                                      #指定集群的任意一节点进行平衡集群节点slot数量 \n                 --cluster-weight <node1=w1...nodeN=wN>         #指定集群节点的权重\n                 --cluster-use-empty-masters                    #设置可以让没有分配slot的主节点参与，默认不允许\n                 --cluster-timeout <arg>                        #设置migrate命令的超时时间\n                 --cluster-simulate                             #模拟rebalance操作，不会真正执行迁移操作\n                 --cluster-pipeline <arg>                       #定义cluster getkeysinslot命令一次取出的key数量，默认值为10\n                 --cluster-threshold <arg>                      #迁移的slot阈值超过threshold，执行rebalance操作\n                 --cluster-replace                              #是否直接replace到目标节点\n  add-node       "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("new_host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("new_port "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("existing_host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("existing_port  #添加节点，把新节点加入到指定的集群，默认添加主节点\n                 --cluster-slave                                #新节点作为从节点，默认随机一个主节点\n                 --cluster-master-id <arg>                      #给新节点指定主节点\n  del-node       "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port node_id                              #删除给定的一个节点，成功后关闭该节点服务\n  call           "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port command arg arg .. arg               #在集群的所有节点执行相关命令\n  set-timeout    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port milliseconds                         #设置cluster-node-timeout\n  import         "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("port                                      #将外部redis数据导入集群\n                 --cluster-from <arg>                           #将指定实例的数据导入到集群\n                 --cluster-copy                                 #migrate时指定copy\n                 --cluster-replace                              #migrate时指定replace\n  help           \n\nFor check"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reshard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" del-node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" set-timeout you can specify the host and port of any working node in the cluster.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("h3",{attrs:{id:"_3-节点通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-节点通信"}},[s._v("#")]),s._v(" 3. 节点通信")]),s._v(" "),a("h4",{attrs:{id:"_3-1-通信流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-通信流程"}},[s._v("#")]),s._v(" 3.1 通信流程")]),s._v(" "),a("p",[s._v("在分布式存储中需要提供维护节点元数据信息的机制，所谓元数据是指：节点负责哪些数据，是否出现故障等状态信息。常见的元数据维护方式分为：集中式和P2P方式。Redis集群采用P2P的Gossip（流言）协议，Gossip协议工作原理就是节点彼此不断通信交换信息，一段时间后所有的节点都会知道集群完整的信息，这种方式类似流言传播。")]),s._v(" "),a("p",[s._v("通信过程说明：")]),s._v(" "),a("ul",[a("li",[s._v("集群中的每个节点都会单独开辟一个TCP通道，用于节点之间彼此通信，通信端口号在基础端口上加10000.")]),s._v(" "),a("li",[s._v("每个节点在固定周期内通过特定规则选择几个节点发送ping消息。")]),s._v(" "),a("li",[s._v("接收到ping消息的节点用pong消息作为响应。")])]),s._v(" "),a("h4",{attrs:{id:"_3-2-gossip消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-gossip消息"}},[s._v("#")]),s._v(" 3.2 Gossip消息")]),s._v(" "),a("p",[s._v("Gossip协议的主要职责就是信息交换，信息交换的载体就是节点彼此发送的Gossip消息。")]),s._v(" "),a("p",[s._v("常用的Gossip消息可分为：ping消息、pong消息、meet消息、fail消息等。")]),s._v(" "),a("ul",[a("li",[s._v("meet：消息发送者通知接收者加入到当前集群。")]),s._v(" "),a("li",[s._v("ping：用于检测节点是否在线和交换彼此状态信息。")]),s._v(" "),a("li",[s._v("pong：当接收到ping、meet消息时，作为响应消息回复给发送方确认消息正常通信。")]),s._v(" "),a("li",[s._v("fail消息：当节点判定集群内另一个节点下线时，会向集群内广播一个fail消息，其他节点接收到fail消息之后把对应节点更新为下线状态。")])]),s._v(" "),a("p",[s._v("所有的消息格式划分为：消息头和消息体。")]),s._v(" "),a("p",[s._v("消息头包含发送节点自身状态数据。结构如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C12272%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210122162527523.png",alt:"image-20210122162527523"}})]),s._v(" "),a("p",[s._v("集群内所有的消息都采用相同的消息头结构clusterMsg，它包含了发送节点关键信息，如节点id、槽映射、节点标识（主从角色，是否下线）等。消息体在Redis内部采用clusterMsgData结构声明。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C12272%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210122164007024.png",alt:"image-20210122164007024"}})]),s._v(" "),a("p",[s._v("消息体clusterMsgData定义发送消息的数据，其中ping、meet、pong都采用cluster MsgDataGossip数组作为消息体数据，实际消息类型使用消息头的type属性区分。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C12272%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210122164312999.png",alt:"image-20210122164312999"}})]),s._v(" "),a("h4",{attrs:{id:"_3-3-节点选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-节点选择"}},[s._v("#")]),s._v(" 3.3 节点选择")]),s._v(" "),a("p",[s._v("Redis集群内节点通信采用固定频率（定时任务每秒执行十次）。")]),s._v(" "),a("p",[s._v("Redis集群的Gossip协议需要兼顾信息交换实时性和成本开销。")]),s._v(" "),a("ul",[a("li",[s._v("选择发送消息的节点数量：每秒会随机选5个节点找出最久没有通信的节点发送ping消息；如果发现节点最近一次接受pong消息的时间大于cluster_node_timeout/2，则立刻发送ping消息。")]),s._v(" "),a("li",[s._v("消息数据量：每个ping消息的数据量体现在消息头和消息体中，其中消息头主要占用空间的字段是myslots[CLUSTER_SLOTS/8]，占用2KB，这块空间占用相对固定。消息体会携带一定数量的其他节点信息用于信息交换。")])]),s._v(" "),a("h3",{attrs:{id:"_4-集群伸缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-集群伸缩"}},[s._v("#")]),s._v(" 4. 集群伸缩")]),s._v(" "),a("h4",{attrs:{id:"_4-1-伸缩原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-伸缩原理"}},[s._v("#")]),s._v(" 4.1 伸缩原理")]),s._v(" "),a("p",[s._v("Redis集群提供了灵活的节点扩容和收缩方案。在不影响集群对外服务的情况下，可以为集群添加节点进行扩容也可以下线部分节点进行缩容。")]),s._v(" "),a("p",[s._v("如果希望加入1个节点实现集群扩容时，需要通过相关命令把一部分槽和数据迁移给新节点，这样每个节点负责的槽和数据相比之前变少了从而达到了集群扩容的目的。")]),s._v(" "),a("p",[s._v("集群的水平伸缩的上层原理：集群伸缩=槽和数据在节点之间的移动。")]),s._v(" "),a("h4",{attrs:{id:"_4-2-扩容集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-扩容集群"}},[s._v("#")]),s._v(" 4.2 扩容集群")]),s._v(" "),a("p",[s._v("扩容是分布式存储最常见的需求。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("准备新节点：")]),s._v(" "),a("ul",[a("li",[s._v("redis-server xxx.conf")])])]),s._v(" "),a("li",[a("p",[s._v("加入集群：")]),s._v(" "),a("ul",[a("li",[s._v("cluster meet {ip} {port}")])])]),s._v(" "),a("li",[a("p",[s._v("迁移槽和数据：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("槽在迁移过程中集群可以正常提供读写服务，迁移过程是集群扩容最核心的环节。")])]),s._v(" "),a("li",[a("p",[s._v("槽迁移计划：槽是Redis集群管理数据的基本单位，首先需要为新节点制定槽的迁移计划，确定原有节点的哪些槽需要迁移到新节点。槽迁移计划确定以后，开始逐个把槽内数据从源节点迁移到目标节点。")])]),s._v(" "),a("li",[a("p",[s._v("迁移数据：数据迁移过程是逐个槽进行的。流程说明：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("对目标节点发送cluster setslot {slot} importing {sourceNodeId}命令，让目标节点准备导入槽的数据。")])]),s._v(" "),a("li",[a("p",[s._v("对源节点发送cluster setslot {slot} migrating {targetNodeId}命令，让源节点准备迁出槽的数据。")])]),s._v(" "),a("li",[a("p",[s._v("源节点循环执行cluster getkyesinslot {slot} {count}命令，获取count个属于槽{slot}的键。")])]),s._v(" "),a("li",[a("p",[s._v('在源节点上执行migrate {targetIp} {targetPort} "" 0 {timeout} keys {keys ...}命令，把获取的键通过流水线（pipeline）机制批量迁移到目标节点，批量迁移版本的migrate命令在Redis3.0.6以上版本提供，之前的migrate命令只能单个键迁移。对于大量key 的场景，批量键迁移将极大降低节点之间的网络IP次数。')])]),s._v(" "),a("li",[a("p",[s._v("重复执行步骤 3、4 直到槽下所有的键值数据迁移到目标节点。")])]),s._v(" "),a("li",[a("p",[s._v("向集群内所有主节点发送 cluster setslot {slot} node {targetNodeId}命令，通知槽分配给目标节点。为了保证槽节点映射变更及时传播，需要遍历发送给所有主节点更新被迁移的槽指向新节点。")])]),s._v(" "),a("li",[a("p",[s._v("使用伪代码模拟迁移过程：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("moveSlot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisNode")]),s._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisNode")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" slot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标节点准备导入槽")]),s._v("\n    target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setslot"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("slot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"importing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标节点准备迁出槽")]),s._v("\n    source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setslot"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("slot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"migrating"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//批量从源节点获取键")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getkeysinslot"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("slot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pipeline_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lenght")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 键列表为空，退出循环")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 批量迁移键到目标节点")]),s._v("\n        source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"migrate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"keys"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 向集群所有主节点通知槽被分配给目标节点")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisNode")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slave"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setslot"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("slot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("ul",[a("li",[s._v("redis-cli --cluster reshard命令简化了数据迁移的工作量。")])])])])])])])]),s._v(" "),a("h4",{attrs:{id:"_4-3-收缩集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-收缩集群"}},[s._v("#")]),s._v(" 4.3 收缩集群")]),s._v(" "),a("p",[s._v("收缩集群意味着缩减规模，需要从现有集群中安全下线部分节点。")]),s._v(" "),a("p",[s._v("流程说明：")]),s._v(" "),a("ul",[a("li",[s._v("首先需要确定下线节点是否有负责的槽，如果是，需要把槽迁移到其他节点，保证节点下线后整个集群槽节点映射的完整性。")]),s._v(" "),a("li",[s._v("当下线节点不再负责槽或者本身是从节点时，就可以通知集群内其他节点忘记下线节点，当所有的节点忘记该节点后可以正常关闭。\n"),a("ul",[a("li",[s._v("下线迁移槽：下线节点需要把自己负责的槽迁移到其他节点，原理与之前节点扩容的迁移槽过程一致。redis-cli --cluster reshard。\n"),a("ul",[a("li",[s._v("忘记节点：由于集群内的节点不停地通过Gossip消息彼此交换节点状态，因此需要通过一种健壮的机制让集群内所有节点忘记下线的节点。也就是说让其他节点不再与要下线节点进行Gossip消息交换。Redis提供了cluster forget {downNodeId}命令实现该功能。当节点接收到cluster forget {downNodeId}命令后，会把nodeId指定的节点加入到禁用列表中，在禁用列表内的节点不再发送Gossip消息。禁用列表有效期是60秒，因此有60秒的时间让集群内的所有节点忘记下线节点。")]),s._v(" "),a("li",[s._v("删除节点：线上操作不建议使用cluster forget命令下线节点，需要跟大量节点命令交互，建议使用 redis-cli del-node {host:port} {downNodeId} 删除下线的节点。")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_5-请求路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-请求路由"}},[s._v("#")]),s._v(" 5. 请求路由")]),s._v(" "),a("h4",{attrs:{id:"_5-1-请求重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-请求重定向"}},[s._v("#")]),s._v(" 5.1 请求重定向")]),s._v(" "),a("p",[s._v("在集群模式下，Redis接收任何键相关命令首先计算键对应的槽，再根据槽找出所对应的节点，如果节点是自身，则处理键命令；否则回复MOVED重定向错误，通知客户端请求正确的节点。这个过程称为MOVED重定向。")]),s._v(" "),a("p",[s._v("使用redis-cli命令时，可以加入-c参数支持自动重定向，简化手动发起重定向操作。")]),s._v(" "),a("p",[s._v("但是这样会额外增加IO开销，这不是Redis集群高效的使用方式。")]),s._v(" "),a("p",[s._v("正因为如此通常集群客户端都采用另一种实现：Smart（智能）客户端。")]),s._v(" "),a("h4",{attrs:{id:"_5-2-smark客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-smark客户端"}},[s._v("#")]),s._v(" 5.2 Smark客户端")]),s._v(" "),a("h5",{attrs:{id:"_5-2-1-smart客户端原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-smart客户端原理"}},[s._v("#")]),s._v(" 5.2.1 smart客户端原理")]),s._v(" "),a("p",[s._v("Redis客户端都采用Smart客户端支持集群协议。Smart客户端通过在内部维护slot->node的映射关系，本地就可实现键到节点的查找，从而保证IO效率的最大化，而MOVED重定向负责协助Smart客户端更新slot->node映射。")]),s._v(" "),a("p",[s._v("Jedis就是Smart客户端。")]),s._v(" "),a("ul",[a("li",[s._v("首先在JedisCluster初始化时会选择一个运行节点，初始化槽和节点映射关系，使用cluster slots命令完成。")]),s._v(" "),a("li",[s._v("Jedis Cluster解析cluster slots结果缓存在本地，并为每个节点创建唯一的JedisPool连接池。映射关系在JedisClusterInfoCache类中。")]),s._v(" "),a("li",[s._v("Jedis Cluster执行键命令流程：\n"),a("ul",[a("li",[s._v("计算slot并根据slots缓存获取目标节点连接，发送命令。")]),s._v(" "),a("li",[s._v("如果出现连接错误，使用随机连接重新执行键命令，每次命令重试对redi-rections（重试次数）减1.")]),s._v(" "),a("li",[s._v("捕获到MOVED重定向错误，使用cluster slots命令更新slots缓存（renewSlotCache方法）。")]),s._v(" "),a("li",[s._v("重复执行1、3步，直到命令执行成功，或者当redi-rections<=0时，抛出Jedis ClusterMaxRedirectionsException异常。")])])]),s._v(" "),a("li",[s._v("建议升级到Jedis2.8.2以上版本防止cluster slots风暴和写锁阻塞问题。")])]),s._v(" "),a("h5",{attrs:{id:"_5-2-2-smart客户端-jediscluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-smart客户端-jediscluster"}},[s._v("#")]),s._v(" 5.2.2 Smart客户端——JedisCluster")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" connectionTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" soTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxAttempts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenericObjectPoolConfig")]),s._v(" poolConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("定义：Jedis为Redis Cluster提供了Smart客户端，对应的类是JedisCluster。\n"),a("ul",[a("li",[s._v("Set"),a("HostAndPort",[s._v(" jedisClusterNode：所有Redis Cluster节点信息（也可以是一部分，因为客户端可以通过cluster slots自动发现）。")])],1),s._v(" "),a("li",[s._v("int connectionTimeout：连接超时。")]),s._v(" "),a("li",[s._v("int soTimeout：读写超时。")]),s._v(" "),a("li",[s._v("int maxAttempts：重试次数。")]),s._v(" "),a("li",[s._v("GenericObjectPoolConfig poolConfig：连接池参数，JedisCluster会为Redis Cluster的每个节点创建连接池。")])])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化所有节点")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" jedisClusterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashSet")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6378")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6380")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6381")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6382")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6383")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"120.24.59.47"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6384")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化common-pool连接池，并设置相关参数")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenericObjectPoolConfig")]),s._v(" poolConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenericObjectPoolConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化JedisCluster")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),s._v(" jedisCluster "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedisClusterNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("poolConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        jedisCluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedisCluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("对于JedisCluster的使用需要注意以下几点：")]),s._v(" "),a("ul",[a("li",[s._v("JedisCluster包含了所有节点的连接池（JedisPool），所以建议JedisCluster使用单例。")]),s._v(" "),a("li",[s._v("JedisCluster每次操作完成后，不需要管理连接池的借还，它在内部已经完成。")]),s._v(" "),a("li",[s._v("JedisCluster一般不要执行close()操作，它会将所有JedisPool执行destroy操作。")])])]),s._v(" "),a("li",[a("p",[s._v("多节点命令和操作：Redis Cluster虽然提供了分布式的特性，但是有些命令或者操作，诸如keys、flushall、删除指定模式的键，需要遍历所有节点才可以完成。")])]),s._v(" "),a("li",[a("p",[s._v("批量操作的方法：Redis Cluster中，由于key分布到各个节点上，会造成无法实现mget、mset等功能。只能分别对每个节点对应的子key列表执行mget或者pipeline操作。")])]),s._v(" "),a("li",[a("p",[s._v("使用Lua、事务等特性的方法：Lua和事务需要所操作的key，必须在一个节点上，不过Redis Cluster提供了hashtag，如果确实要使用Lua或者事务，可以将所要操作的key使用一个hashtag。")])])]),s._v(" "),a("h4",{attrs:{id:"_5-3-ask重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-ask重定向"}},[s._v("#")]),s._v(" 5.3 ASK重定向")]),s._v(" "),a("h5",{attrs:{id:"_5-3-1-客户端ask重定向流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-客户端ask重定向流程"}},[s._v("#")]),s._v(" 5.3.1 客户端ASK重定向流程")]),s._v(" "),a("p",[s._v("Redis集群支持在线迁移槽（slot）和数据来完成水平伸缩，当slot对应的数据从源节点到目标节点迁移过程中，客户端需要做到智能识别，保证键命令可正常执行。例如当一个slot数据从源节点迁移到目标节点时，期间可能出现一部分数据在源节点，而另一部分在目标节点。")]),s._v(" "),a("p",[s._v("当出现这种状况的时候，客户端键命令执行流程将发生变化：")]),s._v(" "),a("ul",[a("li",[s._v("客户端根据本地slots缓存发送命令到源节点，如果存在键对象则直接执行并返回结果给客户端。")]),s._v(" "),a("li",[s._v("如果键对象不存在，则可能存在于目标节点，这时源节点会回复ASK重定向异常。")]),s._v(" "),a("li",[s._v("客户端从ASK重定向异常提取出目标节点信息，发送asking命令到目标节点打开客户端连接标识，再执行键命令。如果存在则执行，不存在则返回不存在信息。")]),s._v(" "),a("li",[s._v("ASK与MOVED虽然都是对客户端的重定向控制，但是有着本质区别。ASK重定向说明集群正在执行slot数据迁移，客户端无法知道什么时候迁移完成，因此只能是临时性的重定向，客户端不会更新slots缓存。但是，MOVED重定向说明键对应的槽已经明确指定到新的节点，因此需要更新slots缓存。")])]),s._v(" "),a("p",[s._v("当在集群环境下使用mget、mset等批量操作时，slot迁移数据期间由于键列表无法保证在同一节点，会导致大量错误。")]),s._v(" "),a("ul",[a("li",[s._v("Pipeline严格按照键发送的顺序返回结果，即使出现异常也是如此。")]),s._v(" "),a("li",[s._v("理解ASK重定向之后，可以手动发起ASK流程保证Pipeline的结果正确性。")])]),s._v(" "),a("p",[s._v("综上所述，使用smart客户端批量操作集群时，需要评估mget/mset、Pipeline等方式在slot迁移场景下的容错性，防止集群迁移造成大量错误和数据丢失的情况。")]),s._v(" "),a("p",[s._v("集群环境下对于使用批量操作的场景，建议优先使用Pipeline方式，在客户端实现对ASK重定向的处理，这样既可以受益于批量操作的IO优化，又可以兼容slot迁移场景。")]),s._v(" "),a("h3",{attrs:{id:"_6-故障转移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-故障转移"}},[s._v("#")]),s._v(" 6. 故障转移")]),s._v(" "),a("p",[s._v("Redis集群自身实现了高可用。高可用首先需要解决集群部分失败的场景：当集群内少量节点出现故障时通过自动故障转移保证集群可以正常对外提供服务。")]),s._v(" "),a("h4",{attrs:{id:"_6-1-故障发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-故障发现"}},[s._v("#")]),s._v(" 6.1 故障发现")]),s._v(" "),a("p",[s._v("故障发现是通过消息传播机制实现的，主要环节包括：主观下线（pfail）和客官下线（fail）。")]),s._v(" "),a("ul",[a("li",[s._v("主观下线：某个节点认为另一个节点不可用。")]),s._v(" "),a("li",[s._v("客观下线：标记一个节点真正的下线。")])]),s._v(" "),a("p",[s._v("通过Gossip消息传播，集群内节点不断收集到故障节点的下线报告，当半数以上持有槽的主节点都标记某个节点是主观下线时，触发客观下线流程。")]),s._v(" "),a("p",[s._v("如果在cluster-node-time*2时间内无法收集到一半以上槽节点的下线报告，那么之前的下线报告将会过期，也就是说主观下线上报的速度追赶不上下线报告过期的速度，那么故障节点将永远无法被标记为客观下线从而导致故障转移失败。因此不建议将cluster-node-time设置得过小。")]),s._v(" "),a("h4",{attrs:{id:"_6-2-故障恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-故障恢复"}},[s._v("#")]),s._v(" 6.2 故障恢复")]),s._v(" "),a("p",[s._v("故障节点变为客观下线后，如果下线节点是持有槽的主节点则需要在它的从节点中选出一个替换它，从而保证集群的高可用。下线主节点的所有从节点承担故障恢复的义务，当从节点通过内部定时任务发现自身复制的主节点进入客观下线时，将会触发故障恢复流程。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("资格检查：每个从节点都要检查最后与主节点断线时间，判断是否有资格替换故障的主节点。如果从节点与主节点断线时间超过cluster-node-time*cluster-slave-validaty-factor，则当前从节点不具备故障转移资格。参数cluster-slave-validaty-factor用于从节点的有效因子，默认为10。")])]),s._v(" "),a("li",[a("p",[s._v("准备选举时间：当从节点符合故障转移资格后，更新触发故障选举的时间，只有到达该时间后才能执行后续流程。这里之所以采用延迟触发机制，主要是通过对多个节点使用不同的延迟选举时间来支持优先级问题。复制偏移量越大说明从节点延迟越低，那么它应该具有更高的优先级来替换故障主节点。")])]),s._v(" "),a("li",[a("p",[s._v("发起选举：当从节点定时任务检测到达故障选举时间到达后，发起选举流程如下：")]),s._v(" "),a("ul",[a("li",[s._v("更新配置纪元。")]),s._v(" "),a("li",[s._v("配置节点的应用场景有：\n"),a("ul",[a("li",[s._v("新节点加入。")]),s._v(" "),a("li",[s._v("槽节点映射冲突检测。")]),s._v(" "),a("li",[s._v("从节点投票选举冲突检测。")])])])])]),s._v(" "),a("li",[a("p",[s._v("选举投票：只有持有槽的主节点才会处理故障选举消息（FAILOVER_AUTH_REQUEST），因为每个持有槽的节点在一个配置纪元内都有唯一的一张选票，当接到第一个请求投票的从节点消息时回复FAILOVER_AUTH_ACK消息作为投票，")])]),s._v(" "),a("li",[a("p",[s._v("替换主节点：当从节点收集到足够的选票之后，触发替换主节点操作：")]),s._v(" "),a("ul",[a("li",[s._v("当前从节点取消复制变为主节点。")]),s._v(" "),a("li",[s._v("执行clusterDelSlot操作撤销故障主节点负责的槽，并执行clusterAddSlot把这些槽委派给自己。")]),s._v(" "),a("li",[s._v("向集群广播自己的pong消息，通知集群内所有的节点当前从节点变为主节点并接管了故障主节点的槽信息。")])])])]),s._v(" "),a("h3",{attrs:{id:"_7-集群运维"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-集群运维"}},[s._v("#")]),s._v(" 7. 集群运维")]),s._v(" "),a("h4",{attrs:{id:"_7-1-集群完整性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-集群完整性"}},[s._v("#")]),s._v(" 7.1 集群完整性")]),s._v(" "),a("p",[s._v("为了保证集群完整性，默认情况下当集群16384个槽任何一个没有指派到节点时整个集群不可用。然而这样当持有槽的主节点下线时，集群是不可用状态，这样是无法容忍的。建议将cluster-require-full-coverage配置为no，当主节点故障时只影响它负责槽的相关命令执行，不会影响其他主节点的可用性。")]),s._v(" "),a("h4",{attrs:{id:"_7-2-宽带消耗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-宽带消耗"}},[s._v("#")]),s._v(" 7.2 宽带消耗")]),s._v(" "),a("p",[s._v("集群内Gossip消息通信本身会消耗带宽，官方建议集群最大规模在1000以内。")]),s._v(" "),a("p",[s._v("集群带宽消耗主要分为：读写命令消耗+Gossip消息消耗。因此搭建Redis集群时需要根据业务数据规模和消息通信成本做出合理规划：")]),s._v(" "),a("ul",[a("li",[s._v("在满足业务需要的情况下尽量避免大集群。")]),s._v(" "),a("li",[s._v("适度提高cluster-node-timeout降低消息发送频率，同时cluster-node-timeout还影响故障转移的速度，因此需要根据自身业务场景兼顾二者的平衡。")]),s._v(" "),a("li",[s._v("如果条件允许集群尽量均匀部署在更多机器上。")])]),s._v(" "),a("h4",{attrs:{id:"_7-3-pub-sub广播问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-pub-sub广播问题"}},[s._v("#")]),s._v(" 7.3 Pub/Sub广播问题")]),s._v(" "),a("p",[s._v("在集群模式下内部实现对所有的publish命令都会向所有的节点进行广播，造成每条publish数据都会在集群内所有节点传播一次，加重带宽负担。针对这种情况，建议使用sentinel结构专门用于Pub/Sub功能，从而规避这一问题。")]),s._v(" "),a("h4",{attrs:{id:"_7-4-集群倾斜"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-集群倾斜"}},[s._v("#")]),s._v(" 7.4 集群倾斜")]),s._v(" "),a("ul",[a("li",[s._v("数据倾斜：\n"),a("ul",[a("li",[s._v("节点和槽分配严重不均。")]),s._v(" "),a("li",[s._v("不同槽对应键数量差异过大。")]),s._v(" "),a("li",[s._v("集合对象包含大量元素。")]),s._v(" "),a("li",[s._v("内存相关配置不一致。")])])]),s._v(" "),a("li",[s._v("请求倾斜：\n"),a("ul",[a("li",[s._v("常出现在热点键场景。避免方式如下：\n"),a("ul",[a("li",[s._v("合理设计键，热度大集合对象做拆分或使用hmget替代hgetall避免整体读取。")]),s._v(" "),a("li",[s._v("不要使用热键hash_tag，避免映射到同一槽。")]),s._v(" "),a("li",[s._v("对于一致性要求不高的场景，客户端可使用本地缓存减少热键调用。")])])])])])]),s._v(" "),a("h4",{attrs:{id:"_7-5-集群读写分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-集群读写分离"}},[s._v("#")]),s._v(" 7.5 集群读写分离")]),s._v(" "),a("ul",[a("li",[s._v("只读连接：集群模式下从节点不接受任何读写请求，发送过来的键命令会重定向到负责槽的主节点上（其中包括它的主节点）。当需要使用从节点分担主节点读压力时，可以使用readonly命令打开客户端连接只读状态。之前的复制配置slave-read-only在集群模式下无效。当开启只读状态时，从节点接收读命令处理流程变为：如果对应的槽属于自己正在复制的主节点则执行读命令，否则返回重定向信息。readonly命令是连接级别生效，因此每次新建连接时都需要执行readonly开启只读状态。执行readwrite命令可以关闭连接只读状态。")]),s._v(" "),a("li",[s._v("读写分离：集群模式下的读写分离，同样会遇到：复制延迟，读取过期数据，从节点故障等问题。针对从节点故障问题，客户端需要维护可用从节点列表，集群提供了cluster slaves {nodeId}命令，返回nodeId对应主节点下所有从节点信息，数据格式通cluster nodes。解析以上从节点列表信息，排除fail状态节点，这样客户端对从节点的故障判定可以委托给集群处理，简化维护可用从节点列表难度。")])]),s._v(" "),a("p",[s._v("集群模式下读写分离涉及对客户端修改如下：")]),s._v(" "),a("ul",[a("li",[s._v("维护每个主节点可用从节点列表。")]),s._v(" "),a("li",[s._v("针对读命令维护请求节点路由。")]),s._v(" "),a("li",[s._v("从节点新建连接开启readonly状态。")])]),s._v(" "),a("p",[s._v("集群模式下读写分离成本比较高，可以直接扩展主节点数量提高集群性能，一般不建议集群模式下做读写分离。")]),s._v(" "),a("h4",{attrs:{id:"_7-6-数据迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-数据迁移"}},[s._v("#")]),s._v(" 7.6 数据迁移")]),s._v(" "),a("p",[s._v("redis-migrate-tool工具可满足大多数Redis迁移需求：")]),s._v(" "),a("ul",[a("li",[s._v("支持单机、Twemproxy、Redis Cluster、RDB/AOF等多种类型的数据迁移。")]),s._v(" "),a("li",[s._v("工具模拟成从节点基于复制流迁移数据，从而支持在线迁移数据，业务方不需要停写。")]),s._v(" "),a("li",[s._v("采用多线程加速数据迁移过程且提供数据校验和查看迁移状态等功能。")])]),s._v(" "),a("h3",{attrs:{id:"_8-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-总结"}},[s._v("#")]),s._v(" 8. 总结")]),s._v(" "),a("ul",[a("li",[s._v("Redis集群数据分区规则采用虚拟槽方式，所有的键映射到16384个槽中，每个节点负责一部分槽和相关数据，实现数据和请求的负载均衡。")]),s._v(" "),a("li",[s._v("搭建集群划分三个步骤：准备节点，节点握手，分配槽。可以使用redis-cli --cluster create命令快速搭建集群。")]),s._v(" "),a("li",[s._v("集群内部节点通信采用Gossip协议彼此发送消息，消息类型分为：ping消息、pong消息、meet消息、fail消息等。节点定期不断发送和接受ping/pong消息来维护更新集群的状态。消息内容包括节点自身数据和部分其他节点的状态数据。")]),s._v(" "),a("li",[s._v("集群伸缩通过在节点之间移动槽和相关数据实现。扩容时根据槽迁移计划把槽从源节点迁移到目标节点，源节点负责的槽相比之前变少从而达到集群扩容的目的，收缩时如果下线的节点有负责的槽需要迁移到其他节点，再通过cluster forget命令让集群内其他节点忘记被下线节点。")]),s._v(" "),a("li",[s._v("使用Smart客户端操作集群达到通信效率最大化，客户端内部负责计算维护键->槽->节点的映射，用于快速定位键命令到目标节点。集群协议通过Smart客户端全面高效的支持需要一个过程，用户在选择Smart客户端时建议review下集群交互代码如：异常判定和重试逻辑，更新槽的并发控制等。节点接收到键命令时会判断相关的槽是否由自身节点负责，如果不是则返回重定向信息。重定向分为MOVED和ASK，ASK说明集群正在进行槽数据迁移，客户端只在本次请求中做临时重定向，不会更新本地槽缓存。MOVED重定向说明槽已经明确分派到另一个节点，客户端需要更新槽节点缓存。")]),s._v(" "),a("li",[s._v("集群自动故障转移过程分为故障发现和故障恢复。节点下线分为主观下线和客观下线，当超过半数主节点认为故障节点为主观下线时标记它为客观下线状态。从节点负责对客观下线的主节点触发故障恢复流程，保证集群的可用性。")]),s._v(" "),a("li",[s._v("开发和运维集群过程中常见问题包括：超大规模集群带宽消耗，pub/sub广播问题，集群节点倾斜问题，手动故障转移，在线迁移数据等。")])]),s._v(" "),a("h2",{attrs:{id:"第十一章-缓存设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十一章-缓存设计"}},[s._v("#")]),s._v(" 第十一章 缓存设计")]),s._v(" "),a("h3",{attrs:{id:"_1-缓存的收益和成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-缓存的收益和成"}},[s._v("#")]),s._v(" 1. 缓存的收益和成")]),s._v(" "),a("p",[a("strong",[s._v("收益")])]),s._v(" "),a("ul",[a("li",[s._v("加速读写：缓存基于内存。")]),s._v(" "),a("li",[s._v("降低后端负载：帮助后端减少访问量和复杂计算，在很大程度降低了后端的负载。")])]),s._v(" "),a("p",[a("strong",[s._v("成本")])]),s._v(" "),a("ul",[a("li",[s._v("数据不一致性：缓存层和存储层的数据存在着一定时间窗口的不一致性，时间窗口跟更新策略有关。")]),s._v(" "),a("li",[s._v("代码维护成本：加入缓存后，需要同时处理缓存层和存储层的逻辑，增大了开发者维护代码的成本。")]),s._v(" "),a("li",[s._v("运维成本：以Redis Cluster为例，加入后无形中增加了运维成本。")])]),s._v(" "),a("p",[a("strong",[s._v("使用场景")])]),s._v(" "),a("ul",[a("li",[s._v("开销大的复杂计算。")]),s._v(" "),a("li",[s._v("加速请求响应。")])]),s._v(" "),a("h3",{attrs:{id:"_2-缓存更新策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓存更新策略"}},[s._v("#")]),s._v(" 2. 缓存更新策略")]),s._v(" "),a("h4",{attrs:{id:"_2-1-lru-lfu-fifo算法剔除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-lru-lfu-fifo算法剔除"}},[s._v("#")]),s._v(" 2.1 LRU/LFU/FIFO算法剔除")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用场景：剔除算法通常用于缓存使用量超过了预设的最大值时候，如何对现有的数据进行剔除。例如Redis使用maxmemory-policy这个配置作为内存最大值后对于数据的剔除策略。")])]),s._v(" "),a("li",[a("p",[s._v("一致性：要清理哪些数据是由具体算法决定，开发人员只能决定使用哪种算法，所以数据的一致性是最差的。")])]),s._v(" "),a("li",[a("p",[s._v("维护成本：算法不需要开发人员自己实现，通常只需要配置最大maxmemory和对应的策略即可。")])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-超时剔除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-超时剔除"}},[s._v("#")]),s._v(" 2.2 超时剔除")]),s._v(" "),a("ul",[a("li",[s._v("使用场景：超时剔除通过给缓存数据设置过期时间，让其在过期时间后自动删除，例如Redis提供的expire命令，例如expire命令。实时性要求不高的可以用。例如视频。")]),s._v(" "),a("li",[s._v("一致性：一段时间窗口内存在一致性问题，即缓存数据和真实数据源的数据不一致。")]),s._v(" "),a("li",[s._v("维护成本：维护成本不是很高，只需设置expire过期时间即可，当然前提是应用方允许这段时间可能发生的数据不一致。")])]),s._v(" "),a("h4",{attrs:{id:"_2-3-主动更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-主动更新"}},[s._v("#")]),s._v(" 2.3 主动更新")]),s._v(" "),a("ul",[a("li",[s._v("使用场景：应用方对于数据的一致性要求高，需要在真实数据更新后，理解更新缓存数据。")]),s._v(" "),a("li",[s._v("一致性：一致性最高，但如果主动更新发生了问题，那么这条数据很可能很长时间不会更新，所以建议结合超时剔除一起使用效果会更好。")]),s._v(" "),a("li",[s._v("维护成本：维护成本会更高，开发者需要自己来完成更新，并保证更新操作的正确性。")])]),s._v(" "),a("h4",{attrs:{id:"_2-4-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-最佳实践"}},[s._v("#")]),s._v(" 2.4 最佳实践")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("策略")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("一致性")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("维护成本")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("LRU/LRF/FIFO算法剔除")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("最差")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("低")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("超时剔除")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("较差")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("较低")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("主动更新")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("强")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("高")])])])]),s._v(" "),a("p",[s._v("有两个建议：")]),s._v(" "),a("ul",[a("li",[s._v("低一致性业务建议配置最大内存和淘汰策略的方式使用。")]),s._v(" "),a("li",[s._v("高一致性业务可以结合使用超时剔除和主动更新，这样即使主动更新出了问题，也能保证数据过期时间后删除脏数据。")])]),s._v(" "),a("h3",{attrs:{id:"_3-缓存粒度控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓存粒度控制"}},[s._v("#")]),s._v(" 3. 缓存粒度控制")]),s._v(" "),a("p",[s._v("缓存粒度问题，究竟是缓存全部属性还是只缓存部分重要属性呢？")]),s._v(" "),a("ul",[a("li",[s._v("通用性：缓存全部数据更加通用，但实际上看，很长时间内应用只需要几个重要的属性。")]),s._v(" "),a("li",[s._v("空间占用：缓存全部数据会造成内存浪费、带宽消耗更大、数据的序列化和反序列化的CPU开销大。")]),s._v(" "),a("li",[s._v("代码维护：全部数据的优势更明显，部分数据一旦要加新字段需要修改业务代码，而且修改后通常还需要刷新缓存数据。")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("数据类型")]),s._v(" "),a("th",[s._v("通用性")]),s._v(" "),a("th",[s._v("空间占用（内存空间+网络带宽）")]),s._v(" "),a("th",[s._v("代码维护")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("全部数据")]),s._v(" "),a("td",[s._v("高")]),s._v(" "),a("td",[s._v("大")]),s._v(" "),a("td",[s._v("简单")])]),s._v(" "),a("tr",[a("td",[s._v("部分数据")]),s._v(" "),a("td",[s._v("低")]),s._v(" "),a("td",[s._v("小")]),s._v(" "),a("td",[s._v("较为复杂")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-穿透优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-穿透优化"}},[s._v("#")]),s._v(" 4. 穿透优化")]),s._v(" "),a("p",[s._v("缓存穿透是指查询一个根本不存在的数据，缓存层和存储层都不会命中，通常出于容错的考虑，如果从存储层查不到数据则不写入缓存层。")]),s._v(" "),a("p",[s._v("缓存穿透将导致不存在的数据每次请求都要到存储层去查询，失去了缓存保护后端存储的意义。")]),s._v(" "),a("p",[s._v("造成缓存穿透的基本原因有两个：")]),s._v(" "),a("ul",[a("li",[s._v("第一，自身业务代码或者数据出现问题。")]),s._v(" "),a("li",[s._v("第二，一些恶意攻击、爬虫等造成大量空命中。")])]),s._v(" "),a("p",[s._v("解决缓存穿透问题。")]),s._v(" "),a("h4",{attrs:{id:"_4-1-缓存空对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-缓存空对象"}},[s._v("#")]),s._v(" 4.1 缓存空对象")]),s._v(" "),a("p",[s._v("存储层不命中后，仍然将空对象保留到缓存层中，之后再访问这个数据将会从缓存中获取。")]),s._v(" "),a("h4",{attrs:{id:"_4-2-布隆过滤器拦截"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-布隆过滤器拦截"}},[s._v("#")]),s._v(" 4.2 布隆过滤器拦截")]),s._v(" "),a("p",[s._v("在访问缓存层和存储层之前，将存在的key用布隆过滤器提前保存起来，做第一层拦截。例如：一个推荐系统有4亿个用户id，每个小时算法工程师会根据每个用户之前历史行为计算出推荐数据放到存储层中，但是最新的用户由于没有历史行为，就会发生缓存穿透的行为，为此可以将所有推荐数据的用户做成布隆过滤器。如果布隆过滤器认为该用户id不存在，那么就不会访问存储层，在一定程度保护了存储层。")]),s._v(" "),a("p",[s._v("可以利用Bitmaps实现布隆过滤器。")]),s._v(" "),a("p",[s._v("这种方法用于数据命中不高、数据相对固定、实时性低（通常是数据集较大）的应用场景，代码维护较为复杂，但是缓存空间占用少。")]),s._v(" "),a("h4",{attrs:{id:"_4-3-两种方案对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-两种方案对比"}},[s._v("#")]),s._v(" 4.3 两种方案对比")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("解决缓存穿透")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("使用场景")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("维护成本")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("缓存空对象")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("数据命中不高、数据频繁变化实时性高")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("代码维护简单、需要过多的缓存空间、数据不一致")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("布隆过滤器")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("数据命中不高、数据相对固定实时性低")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("代码维护复杂、缓存空间占用少")])])])]),s._v(" "),a("h3",{attrs:{id:"_5-无底洞优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-无底洞优化"}},[s._v("#")]),s._v(" 5. 无底洞优化")]),s._v(" "),a("p",[s._v("2010年，Facebook的Memcache节点已经达到了3000个，承载着TB级别的缓存数据。但开发和运维人员发现了一个问题，为了满足业务要求添加了大量新Memcache节点，但是发现性能不但没有好转反而下降了，当时将这种现象称为缓存的“无底洞”现象。")]),s._v(" "),a("p",[s._v("那么为什么会产生这种现象呢，通常来说添加节点使得Memcache集群 性能应该更强了，但事实并非如此。键值数据库由于通常采用哈希函数将key映射到各个节点上，造成key的分布与业务无关，但是由于数据量和访问 量的持续增长，造成需要添加大量节点做水平扩容，导致键值分布到更多的 节点上，所以无论是Memcache还是Redis的分布式，批量操作通常需要从不 同节点上获取，相比于单机批量操作只涉及一次网络操作，分布式批量操作 会涉及多次网络时间。")]),s._v(" "),a("p",[s._v("无底洞问题分析：")]),s._v(" "),a("ul",[a("li",[s._v("客户端一次批量操作会涉及多次网络操作，也就意味着批量操作会随着节点的增多，耗时会不断增大。")]),s._v(" "),a("li",[s._v("网络连接数变多，对节点的性能也会有一定影响。")])]),s._v(" "),a("p",[s._v("更多的节点不代表更高的性能，所谓“无底洞”就是说投入越多不一定产出越多，但是分布式又是不可用避免的。")]),s._v(" "),a("ul",[a("li",[s._v("命令本身的优化，例如优化SQL语句等。")]),s._v(" "),a("li",[s._v("减少网络通信次数。")]),s._v(" "),a("li",[s._v("降低接入成本，例如客户端使用长连/连接池、NIO等。")])]),s._v(" "),a("p",[s._v("我们假设命令、客户端连接已经为最优，重点讨论减少网络操作次数。")]),s._v(" "),a("p",[s._v("以Redis批量获取n个字符串为例，有三种实现方法：")]),s._v(" "),a("ul",[a("li",[s._v("客户端n次get：n次网络+n次get命令本身。")]),s._v(" "),a("li",[s._v("客户端1次pipeline get：次网络+n次get命令本身。")]),s._v(" "),a("li",[s._v("客户端1次mget：1次网络+1次mget命令本身。")])]),s._v(" "),a("h4",{attrs:{id:"_5-1-串行命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-串行命令"}},[s._v("#")]),s._v(" 5.1 串行命令")]),s._v(" "),a("p",[s._v("逐次执行n个get命令。")]),s._v(" "),a("p",[s._v("操作时间=n次网络时间+n次命令时间。")]),s._v(" "),a("h4",{attrs:{id:"_5-2-串行io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-串行io"}},[s._v("#")]),s._v(" 5.2 串行IO")]),s._v(" "),a("p",[s._v("Smart客户端分别对每个节点执行mget或者Pipeline操作。")]),s._v(" "),a("p",[s._v("操作时间=node次网络时间+n次命令时间。")]),s._v(" "),a("h4",{attrs:{id:"_5-3-并行io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-并行io"}},[s._v("#")]),s._v(" 5.3 并行IO")]),s._v(" "),a("p",[s._v("此方案是将串行IO方案中的最后一步改为多线程执行。")]),s._v(" "),a("p",[s._v("网络次数虽然还是节点个数，但由于使用多线程网络时间变为O(1)，这种方案会增加编程的复杂度。")]),s._v(" "),a("p",[s._v("操作时间=max_slow(node网络时间)+n次命令时间")]),s._v(" "),a("h4",{attrs:{id:"_5-4-hash-tag实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-hash-tag实现"}},[s._v("#")]),s._v(" 5.4 hash_tag实现")]),s._v(" "),a("p",[s._v("hash_tag可以将多个key强制分配到一个节点上。")]),s._v(" "),a("p",[s._v("操作时间=1次网络时间+n次命令时间。")]),s._v(" "),a("h4",{attrs:{id:"_5-5-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-对比"}},[s._v("#")]),s._v(" 5.5 对比")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("方案")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("优点")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("缺点")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("网络IO")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("串行命令")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("编程简单；如果少量keys，性能可以满足要求")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("大量keys请求延迟严重")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("O(keys)")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("串行IO")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("编程简单；少量节点，性能满足要求")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("大量node延迟严重")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("O(nodes)")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("并行IO")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("利用并行特性，延迟取决于最慢的节点")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("编程复杂；由于多线程问题，问题定位可能比较难")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("O(max_slow(nodes))")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("hash_tag")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("性能最高")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("业务维护成本较高；容易出现数据倾斜")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("O(1)")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-雪崩优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-雪崩优化"}},[s._v("#")]),s._v(" 6. 雪崩优化")]),s._v(" "),a("p",[s._v("什么是缓存雪崩：由于缓存层承载着大量请求，有效地保护了存储层，但是如果缓存层由于某些原因不能提供服务，于是所有的请求都会达到存储层，存储层的调用量会暴增，造成存储层也会级联宕机的情况。缓存雪崩的英文原意是stampeding herd（奔逃的野牛），指的是缓存层宕掉后，流量会像奔逃的野牛一样，打向后端存储。")]),s._v(" "),a("p",[s._v("预防和解决缓存雪崩问题，可以从以下三个方面进行着手：")]),s._v(" "),a("ul",[a("li",[s._v("保证缓存层服务高可用性。Redis Sentinel和Redis Cluster。")]),s._v(" "),a("li",[s._v("依赖隔离组件作为后端限流并降级。比如个性化推荐服务不可用，可以降级补充热点数据。Java依赖隔离工具Hystrix。")]),s._v(" "),a("li",[s._v("提前演练。")])]),s._v(" "),a("h3",{attrs:{id:"_7-热度key重建优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-热度key重建优化"}},[s._v("#")]),s._v(" 7. 热度key重建优化")]),s._v(" "),a("p",[s._v("开发人员使用“缓存+过期时间”的策略既可以加速数据读写，又保证数 据的定期更新，这种模式基本能够满足绝大部分需求。但是有两个问题如果同时出现，可能就会对应用造成致命的危害：")]),s._v(" "),a("ul",[a("li",[s._v("当前key是一个热度key，并发量非常大。")]),s._v(" "),a("li",[s._v("重建缓存不能在短时间完成，可能是一个复杂计算，例如复杂的SQL、多次IO、多个依赖等。")])]),s._v(" "),a("p",[s._v("在缓存失效的瞬间，有大量线程来重建缓存，造成后端负载加大，甚至可能会让应用崩溃。")]),s._v(" "),a("p",[s._v("目标：")]),s._v(" "),a("ul",[a("li",[s._v("减少重建缓存的次数。")]),s._v(" "),a("li",[s._v("数据尽可能一致。")]),s._v(" "),a("li",[s._v("较少的潜在危险。")])]),s._v(" "),a("h4",{attrs:{id:"_7-1-互斥锁（mutex-key）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-互斥锁（mutex-key）"}},[s._v("#")]),s._v(" 7.1 互斥锁（mutex key）")]),s._v(" "),a("p",[s._v("此方法只运行一个线程重建缓存，其他线程等待重建缓存的线程执行完，重新从缓存获取数据即可。")]),s._v(" "),a("p",[s._v("Redis的setnx就是基于互斥锁做的。")]),s._v(" "),a("h4",{attrs:{id:"_7-2-永远不过期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-永远不过期"}},[s._v("#")]),s._v(" 7.2 永远不过期")]),s._v(" "),a("p",[s._v("两层意思：")]),s._v(" "),a("ul",[a("li",[s._v("从缓存层面来看，确实没有设置过期时间，所以不会出现热度key过期后产生的问题，也就是“物理”不过期。")]),s._v(" "),a("li",[s._v("从功能层面来看，为每个value设置一个逻辑过期时间，当发现超过逻辑过期时间后，会使用单独的线程去构建缓存。")])]),s._v(" "),a("p",[s._v("从实战看，此方法有效杜绝了热点key产生的问题，但唯一不足的就是重构缓存期间，会出现数据不一致的情况，这取决于应用方是否容忍这种不一致。")]),s._v(" "),a("h4",{attrs:{id:"_7-3-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-对比"}},[s._v("#")]),s._v(" 7.3 对比")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("解决方案")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("优点")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("缺点")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("简单分布式锁")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("思路简单、保证一致性")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("代码复杂度增大、存在死锁的风险、存在线程池阻塞的风险")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("“永远不过期”")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("基本杜绝热点key问题")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("不保证一致性、逻辑过期时间增加代码维护成本和内存成本")])])])]),s._v(" "),a("h3",{attrs:{id:"_8-总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-总结-2"}},[s._v("#")]),s._v(" 8. 总结")]),s._v(" "),a("ul",[a("li",[s._v("缓存的使用带来的收益是能够加速读写，降低后端存储负载。")]),s._v(" "),a("li",[s._v("缓存的使用带来的成本是缓存和存储数据不一致性，代码维护成本增大，架构复杂度增大。")]),s._v(" "),a("li",[s._v("比较推荐的缓存更新策略是结合剔除、超时、主动更新三种方案共同完成。")]),s._v(" "),a("li",[s._v("穿透问题：使用缓存空对象和布隆过滤器来解决，注意它们各自的使用场景和局限性。")]),s._v(" "),a("li",[s._v("无底洞问题：分布式缓存中，有更多的机器不保证有更高的性能。有四种批量操作方式：串行命令、串行IO、并行IO、hash_tag。")]),s._v(" "),a("li",[s._v("雪崩问题：缓存层高可用、客户端降级、提前演练是解决雪崩问题的重要方法。")]),s._v(" "),a("li",[s._v("热点key问题：互斥锁、“永远不过期”能够在一定程度上解决热点key问题，开发人员在使用时要了解它们各自的使用成本。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);